       NOTE: Most of the tests in DIEHARD return a p-value, which               
       should be uniform on [0,1) if the input file contains truly              
       independent random bits.   Those p-values are obtained by                
       p=F(X), where F is the assumed distribution of the sample                
       random variable X---often normal. But that assumed F is just             
       an asymptotic approximation, for which the fit will be worst             
       in the tails. Thus you should not be surprised with                      
       occasional p-values near 0 or 1, such as .0012 or .9983.                 
       When a bit stream really FAILS BIG, you will get p's of 0 or             
       1 to six or more places.  By all means, do not, as a                     
       Statistician might, think that a p < .025 or p> .975 means               
       that the RNG has "failed the test at the .05 level".  Such               
       p's happen among the hundreds that DIEHARD produces, even                
       with good RNG's.  So keep in mind that " p happens".                     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            This is the BIRTHDAY SPACINGS TEST                 ::        
     :: Choose m birthdays in a year of n days.  List the spacings    ::        
     :: between the birthdays.  If j is the number of values that     ::        
     :: occur more than once in that list, then j is asymptotically   ::        
     :: Poisson distributed with mean m^3/(4n).  Experience shows n   ::        
     :: must be quite large, say n>=2^18, for comparing the results   ::        
     :: to the Poisson distribution with that mean.  This test uses   ::        
     :: n=2^24 and m=2^9,  so that the underlying distribution for j  ::        
     :: is taken to be Poisson with lambda=2^27/(2^26)=2.  A sample   ::        
     :: of 500 j's is taken, and a chi-square goodness of fit test    ::        
     :: provides a p value.  The first test uses bits 1-24 (counting  ::        
     :: from the left) from integers in the specified file.           ::        
     ::   Then the file is closed and reopened. Next, bits 2-25 are   ::        
     :: used to provide birthdays, then 3-26 and so on to bits 9-32.  ::        
     :: Each set of bits provides a p-value, and the nine p-values    ::        
     :: provide a sample for a KSTEST.                                ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 BIRTHDAY SPACINGS TEST, M= 512 N=2**24 LAMBDA=  2.0000
           Results for bin            
                   For a sample of size 500:     mean   
           bin             using bits  1 to 24   1.982
  duplicate       number       number 
  spacings       observed     expected
        0          80.       67.668
        1         128.      135.335
        2         127.      135.335
        3          99.       90.224
        4          32.       45.112
        5          23.       18.045
  6 to INF         11.        8.282
 Chisquare with  6 d.o.f. =    10.08 p-value=  .878517
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  2 to 25   2.064
  duplicate       number       number 
  spacings       observed     expected
        0          58.       67.668
        1         137.      135.335
        2         142.      135.335
        3          86.       90.224
        4          50.       45.112
        5          13.       18.045
  6 to INF         14.        8.282
 Chisquare with  6 d.o.f. =     7.82 p-value=  .748086
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  3 to 26   2.010
  duplicate       number       number 
  spacings       observed     expected
        0          64.       67.668
        1         131.      135.335
        2         147.      135.335
        3          84.       90.224
        4          54.       45.112
        5          11.       18.045
  6 to INF          9.        8.282
 Chisquare with  6 d.o.f. =     6.34 p-value=  .613392
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  4 to 27   1.922
  duplicate       number       number 
  spacings       observed     expected
        0          71.       67.668
        1         135.      135.335
        2         135.      135.335
        3         105.       90.224
        4          37.       45.112
        5          10.       18.045
  6 to INF          7.        8.282
 Chisquare with  6 d.o.f. =     7.83 p-value=  .749123
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  5 to 28   1.942
  duplicate       number       number 
  spacings       observed     expected
        0          69.       67.668
        1         156.      135.335
        2         123.      135.335
        3          79.       90.224
        4          44.       45.112
        5          22.       18.045
  6 to INF          7.        8.282
 Chisquare with  6 d.o.f. =     6.79 p-value=  .659762
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  6 to 29   1.962
  duplicate       number       number 
  spacings       observed     expected
        0          74.       67.668
        1         120.      135.335
        2         147.      135.335
        3          99.       90.224
        4          36.       45.112
        5          20.       18.045
  6 to INF          4.        8.282
 Chisquare with  6 d.o.f. =     8.46 p-value=  .793402
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  7 to 30   1.810
  duplicate       number       number 
  spacings       observed     expected
        0          78.       67.668
        1         148.      135.335
        2         142.      135.335
        3          75.       90.224
        4          45.       45.112
        5           7.       18.045
  6 to INF          5.        8.282
 Chisquare with  6 d.o.f. =    13.72 p-value=  .967083
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  8 to 31   1.958
  duplicate       number       number 
  spacings       observed     expected
        0          63.       67.668
        1         138.      135.335
        2         146.      135.335
        3          89.       90.224
        4          46.       45.112
        5          13.       18.045
  6 to INF          5.        8.282
 Chisquare with  6 d.o.f. =     3.96 p-value=  .317873
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  9 to 32   1.940
  duplicate       number       number 
  spacings       observed     expected
        0          76.       67.668
        1         137.      135.335
        2         134.      135.335
        3          91.       90.224
        4          36.       45.112
        5          16.       18.045
  6 to INF         10.        8.282
 Chisquare with  6 d.o.f. =     3.49 p-value=  .255355
  :::::::::::::::::::::::::::::::::::::::::
   The 9 p-values were
        .878517   .748086   .613392   .749123   .659762
        .793402   .967083   .317873   .255355
  A KSTEST for the 9 p-values yields  .861836

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            THE OVERLAPPING 5-PERMUTATION TEST                 ::        
     :: This is the OPERM5 test.  It looks at a sequence of one mill- ::        
     :: ion 32-bit random integers.  Each set of five consecutive     ::        
     :: integers can be in one of 120 states, for the 5! possible or- ::        
     :: derings of five numbers.  Thus the 5th, 6th, 7th,...numbers   ::        
     :: each provide a state. As many thousands of state transitions  ::        
     :: are observed,  cumulative counts are made of the number of    ::        
     :: occurences of each state.  Then the quadratic form in the     ::        
     :: weak inverse of the 120x120 covariance matrix yields a test   ::        
     :: equivalent to the likelihood ratio test that the 120 cell     ::        
     :: counts came from the specified (asymptotically) normal dis-   ::        
     :: tribution with the specified 120x120 covariance matrix (with  ::        
     :: rank 99).  This version uses 1,000,000 integers, twice.       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           OPERM5 test for file bin            
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom=139.275; p-value= .995212
           OPERM5 test for file bin            
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom= 79.761; p-value= .077888
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 31x31 matrices. The leftmost ::        
     :: 31 bits of 31 random integers from the test sequence are used ::        
     :: to form a 31x31 binary matrix over the field {0,1}. The rank  ::        
     :: is determined. That rank can be from 0 to 31, but ranks< 28   ::        
     :: are rare, and their counts are pooled with those for rank 28. ::        
     :: Ranks are found for 40,000 such random matrices and a chisqua-::        
     :: re test is performed on counts for ranks 31,30,29 and <=28.   ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for bin            
         Rank test for 31x31 binary matrices:
        rows from leftmost 31 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        28       249     211.4  6.680631    6.681
        29      5006    5134.0  3.191779    9.872
        30     23165   23103.0   .166133   10.039
        31     11580   11551.5   .070195   10.109
  chisquare=10.109 for 3 d. of f.; p-value= .983074
--------------------------------------------------------------
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 32x32 matrices. A random 32x ::        
     :: 32 binary matrix is formed, each row a 32-bit random integer. ::        
     :: The rank is determined. That rank can be from 0 to 32, ranks  ::        
     :: less than 29 are rare, and their counts are pooled with those ::        
     :: for rank 29.  Ranks are found for 40,000 such random matrices ::        
     :: and a chisquare test is performed on counts for ranks  32,31, ::        
     :: 30 and <=29.                                                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for bin            
         Rank test for 32x32 binary matrices:
        rows from leftmost 32 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        29       199     211.4   .729394     .729
        30      5119    5134.0   .043885     .773
        31     23299   23103.0  1.662016    2.435
        32     11383   11551.5  2.458591    4.894
  chisquare= 4.894 for 3 d. of f.; p-value= .833742
--------------------------------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 6x8 matrices.  From each of  ::        
     :: six random 32-bit integers from the generator under test, a   ::        
     :: specified byte is chosen, and the resulting six bytes form a  ::        
     :: 6x8 binary matrix whose rank is determined.  That rank can be ::        
     :: from 0 to 6, but ranks 0,1,2,3 are rare; their counts are     ::        
     :: pooled with those for rank 4. Ranks are found for 100,000     ::        
     :: random matrices, and a chi-square test is performed on        ::        
     :: counts for ranks 6,5 and <=4.                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
         Binary Rank Test for bin            
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  1 to  8
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          965       944.3        .454        .454
          r =5        21696     21743.9        .106        .559
          r =6        77339     77311.8        .010        .569
                        p=1-exp(-SUM/2)= .24753
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  2 to  9
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          892       944.3       2.897       2.897
          r =5        21665     21743.9        .286       3.183
          r =6        77443     77311.8        .223       3.406
                        p=1-exp(-SUM/2)= .81784
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  3 to 10
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          911       944.3       1.174       1.174
          r =5        21588     21743.9       1.118       2.292
          r =6        77501     77311.8        .463       2.755
                        p=1-exp(-SUM/2)= .74781
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  4 to 11
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          929       944.3        .248        .248
          r =5        21625     21743.9        .650        .898
          r =6        77446     77311.8        .233       1.131
                        p=1-exp(-SUM/2)= .43194
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  5 to 12
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          882       944.3       4.110       4.110
          r =5        21801     21743.9        .150       4.260
          r =6        77317     77311.8        .000       4.261
                        p=1-exp(-SUM/2)= .88120
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  6 to 13
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          956       944.3        .145        .145
          r =5        21550     21743.9       1.729       1.874
          r =6        77494     77311.8        .429       2.303
                        p=1-exp(-SUM/2)= .68390
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  7 to 14
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          934       944.3        .112        .112
          r =5        21683     21743.9        .171        .283
          r =6        77383     77311.8        .066        .349
                        p=1-exp(-SUM/2)= .15992
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  8 to 15
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          968       944.3        .595        .595
          r =5        21713     21743.9        .044        .639
          r =6        77319     77311.8        .001        .639
                        p=1-exp(-SUM/2)= .27361
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  9 to 16
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          942       944.3        .006        .006
          r =5        21735     21743.9        .004        .009
          r =6        77323     77311.8        .002        .011
                        p=1-exp(-SUM/2)= .00542
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 10 to 17
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          957       944.3        .171        .171
          r =5        21688     21743.9        .144        .314
          r =6        77355     77311.8        .024        .339
                        p=1-exp(-SUM/2)= .15575
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 11 to 18
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          931       944.3        .187        .187
          r =5        21845     21743.9        .470        .657
          r =6        77224     77311.8        .100        .757
                        p=1-exp(-SUM/2)= .31516
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 12 to 19
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          954       944.3        .100        .100
          r =5        21785     21743.9        .078        .177
          r =6        77261     77311.8        .033        .211
                        p=1-exp(-SUM/2)= .09998
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 13 to 20
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          920       944.3        .625        .625
          r =5        21884     21743.9        .903       1.528
          r =6        77196     77311.8        .173       1.702
                        p=1-exp(-SUM/2)= .57291
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 14 to 21
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          910       944.3       1.246       1.246
          r =5        21798     21743.9        .135       1.381
          r =6        77292     77311.8        .005       1.386
                        p=1-exp(-SUM/2)= .49984
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 15 to 22
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          949       944.3        .023        .023
          r =5        21698     21743.9        .097        .120
          r =6        77353     77311.8        .022        .142
                        p=1-exp(-SUM/2)= .06864
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 16 to 23
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          941       944.3        .012        .012
          r =5        21801     21743.9        .150        .161
          r =6        77258     77311.8        .037        .199
                        p=1-exp(-SUM/2)= .09468
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 17 to 24
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          940       944.3        .020        .020
          r =5        21787     21743.9        .085        .105
          r =6        77273     77311.8        .019        .124
                        p=1-exp(-SUM/2)= .06035
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 18 to 25
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          948       944.3        .014        .014
          r =5        21739     21743.9        .001        .016
          r =6        77313     77311.8        .000        .016
                        p=1-exp(-SUM/2)= .00777
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 19 to 26
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          990       944.3       2.212       2.212
          r =5        21921     21743.9       1.442       3.654
          r =6        77089     77311.8        .642       4.296
                        p=1-exp(-SUM/2)= .88329
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 20 to 27
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          977       944.3       1.132       1.132
          r =5        21734     21743.9        .005       1.137
          r =6        77289     77311.8        .007       1.144
                        p=1-exp(-SUM/2)= .43547
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 21 to 28
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          935       944.3        .092        .092
          r =5        21695     21743.9        .110        .202
          r =6        77370     77311.8        .044        .245
                        p=1-exp(-SUM/2)= .11547
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 22 to 29
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          961       944.3        .295        .295
          r =5        21634     21743.9        .555        .851
          r =6        77405     77311.8        .112        .963
                        p=1-exp(-SUM/2)= .38218
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 23 to 30
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          980       944.3       1.350       1.350
          r =5        21660     21743.9        .324       1.673
          r =6        77360     77311.8        .030       1.703
                        p=1-exp(-SUM/2)= .57330
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 24 to 31
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          994       944.3       2.616       2.616
          r =5        21704     21743.9        .073       2.689
          r =6        77302     77311.8        .001       2.690
                        p=1-exp(-SUM/2)= .73948
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 25 to 32
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          984       944.3       1.669       1.669
          r =5        21775     21743.9        .044       1.713
          r =6        77241     77311.8        .065       1.778
                        p=1-exp(-SUM/2)= .58899
   TEST SUMMARY, 25 tests on 100,000 random 6x8 matrices
 These should be 25 uniform [0,1] random variables:
     .247533     .817837     .747812     .431936     .881203
     .683901     .159917     .273611     .005422     .155751
     .315163     .099984     .572913     .499839     .068643
     .094678     .060352     .007775     .883288     .435466
     .115469     .382177     .573300     .739475     .588990
   brank test summary for bin            
       The KS test for those 25 supposed UNI's yields
                    KS p-value= .915919

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::                   THE BITSTREAM TEST                          ::        
     :: The file under test is viewed as a stream of bits. Call them  ::        
     :: b1,b2,... .  Consider an alphabet with two "letters", 0 and 1 ::        
     :: and think of the stream of bits as a succession of 20-letter  ::        
     :: "words", overlapping.  Thus the first word is b1b2...b20, the ::        
     :: second is b2b3...b21, and so on.  The bitstream test counts   ::        
     :: the number of missing 20-letter (20-bit) words in a string of ::        
     :: 2^21 overlapping 20-letter words.  There are 2^20 possible 20 ::        
     :: letter words.  For a truly random string of 2^21+19 bits, the ::        
     :: number of missing words j should be (very close to) normally  ::        
     :: distributed with mean 141,909 and sigma 428.  Thus            ::        
     ::  (j-141909)/428 should be a standard normal variate (z score) ::        
     :: that leads to a uniform [0,1) p value.  The test is repeated  ::        
     :: twenty times.                                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 THE OVERLAPPING 20-tuples BITSTREAM  TEST, 20 BITS PER WORD, N words
   This test uses N=2^21 and samples the bitstream 20 times.
  No. missing words should average  141909. with sigma=428.
---------------------------------------------------------
 tst no  1:  142538 missing words,    1.47 sigmas from mean, p-value= .92906
 tst no  2:  142274 missing words,     .85 sigmas from mean, p-value= .80290
 tst no  3:  142250 missing words,     .80 sigmas from mean, p-value= .78697
 tst no  4:  141242 missing words,   -1.56 sigmas from mean, p-value= .05948
 tst no  5:  141370 missing words,   -1.26 sigmas from mean, p-value= .10381
 tst no  6:  142059 missing words,     .35 sigmas from mean, p-value= .63672
 tst no  7:  141070 missing words,   -1.96 sigmas from mean, p-value= .02494
 tst no  8:  141459 missing words,   -1.05 sigmas from mean, p-value= .14636
 tst no  9:  141410 missing words,   -1.17 sigmas from mean, p-value= .12167
 tst no 10:  141363 missing words,   -1.28 sigmas from mean, p-value= .10090
 tst no 11:  142097 missing words,     .44 sigmas from mean, p-value= .66948
 tst no 12:  141799 missing words,    -.26 sigmas from mean, p-value= .39829
 tst no 13:  142321 missing words,     .96 sigmas from mean, p-value= .83194
 tst no 14:  141521 missing words,    -.91 sigmas from mean, p-value= .18212
 tst no 15:  142277 missing words,     .86 sigmas from mean, p-value= .80484
 tst no 16:  141182 missing words,   -1.70 sigmas from mean, p-value= .04463
 tst no 17:  142092 missing words,     .43 sigmas from mean, p-value= .66524
 tst no 18:  142371 missing words,    1.08 sigmas from mean, p-value= .85963
 tst no 19:  141610 missing words,    -.70 sigmas from mean, p-value= .24216
 tst no 20:  141610 missing words,    -.70 sigmas from mean, p-value= .24216

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The tests OPSO, OQSO and DNA                      ::        
     ::         OPSO means Overlapping-Pairs-Sparse-Occupancy         ::        
     :: The OPSO test considers 2-letter words from an alphabet of    ::        
     :: 1024 letters.  Each letter is determined by a specified ten   ::        
     :: bits from a 32-bit integer in the sequence to be tested. OPSO ::        
     :: generates  2^21 (overlapping) 2-letter words  (from 2^21+1    ::        
     :: "keystrokes")  and counts the number of missing words---that  ::        
     :: is 2-letter words which do not appear in the entire sequence. ::        
     :: That count should be very close to normally distributed with  ::        
     :: mean 141,909, sigma 290. Thus (missingwrds-141909)/290 should ::        
     :: be a standard normal variable. The OPSO test takes 32 bits at ::        
     :: a time from the test file and uses a designated set of ten    ::        
     :: consecutive bits. It then restarts the file for the next de-  ::        
     :: signated 10 bits, and so on.                                  ::        
     ::                                                               ::        
     ::     OQSO means Overlapping-Quadruples-Sparse-Occupancy        ::        
     ::   The test OQSO is similar, except that it considers 4-letter ::        
     :: words from an alphabet of 32 letters, each letter determined  ::        
     :: by a designated string of 5 consecutive bits from the test    ::        
     :: file, elements of which are assumed 32-bit random integers.   ::        
     :: The mean number of missing words in a sequence of 2^21 four-  ::        
     :: letter words,  (2^21+3 "keystrokes"), is again 141909, with   ::        
     :: sigma = 295.  The mean is based on theory; sigma comes from   ::        
     :: extensive simulation.                                         ::        
     ::                                                               ::        
     ::    The DNA test considers an alphabet of 4 letters::  C,G,A,T,::        
     :: determined by two designated bits in the sequence of random   ::        
     :: integers being tested.  It considers 10-letter words, so that ::        
     :: as in OPSO and OQSO, there are 2^20 possible words, and the   ::        
     :: mean number of missing words from a string of 2^21  (over-    ::        
     :: lapping)  10-letter  words (2^21+9 "keystrokes") is 141909.   ::        
     :: The standard deviation sigma=339 was determined as for OQSO   ::        
     :: by simulation.  (Sigma for OPSO, 290, is the true value (to   ::        
     :: three places), not determined by simulation.                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 OPSO test for generator bin            
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OPSO for bin             using bits 23 to 32        193866179.161 1.0000
    OPSO for bin             using bits 22 to 31        193657178.440 1.0000
    OPSO for bin             using bits 21 to 30        193450177.726 1.0000
    OPSO for bin             using bits 20 to 29        193303177.220 1.0000
    OPSO for bin             using bits 19 to 28        193900179.278 1.0000
    OPSO for bin             using bits 18 to 27        193477177.820 1.0000
    OPSO for bin             using bits 17 to 26        194141180.109 1.0000
    OPSO for bin             using bits 16 to 25        193890179.244 1.0000
    OPSO for bin             using bits 15 to 24        193560178.106 1.0000
    OPSO for bin             using bits 14 to 23        193343177.357 1.0000
    OPSO for bin             using bits 13 to 22        194065179.847 1.0000
    OPSO for bin             using bits 12 to 21        194115180.020 1.0000
    OPSO for bin             using bits 11 to 20        193585178.192 1.0000
    OPSO for bin             using bits 10 to 19        194033179.737 1.0000
    OPSO for bin             using bits  9 to 18        193884179.223 1.0000
    OPSO for bin             using bits  8 to 17        193411177.592 1.0000
    OPSO for bin             using bits  7 to 16        193819178.999 1.0000
    OPSO for bin             using bits  6 to 15        194047179.785 1.0000
    OPSO for bin             using bits  5 to 14        193362177.423 1.0000
    OPSO for bin             using bits  4 to 13        193759178.792 1.0000
    OPSO for bin             using bits  3 to 12        193488177.857 1.0000
    OPSO for bin             using bits  2 to 11        193714178.637 1.0000
    OPSO for bin             using bits  1 to 10        194056179.816 1.0000
 OQSO test for generator bin            
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OQSO for bin             using bits 28 to 32        193370174.443 1.0000
    OQSO for bin             using bits 27 to 31        194060176.782 1.0000
    OQSO for bin             using bits 26 to 30        194025176.663 1.0000
    OQSO for bin             using bits 25 to 29        193542175.026 1.0000
    OQSO for bin             using bits 24 to 28        193982176.518 1.0000
    OQSO for bin             using bits 23 to 27        193580175.155 1.0000
    OQSO for bin             using bits 22 to 26        193735175.680 1.0000
    OQSO for bin             using bits 21 to 25        193894176.219 1.0000
    OQSO for bin             using bits 20 to 24        193911176.277 1.0000
    OQSO for bin             using bits 19 to 23        193478174.809 1.0000
    OQSO for bin             using bits 18 to 22        193178173.792 1.0000
    OQSO for bin             using bits 17 to 21        194075176.833 1.0000
    OQSO for bin             using bits 16 to 20        193661175.429 1.0000
    OQSO for bin             using bits 15 to 19        194061176.785 1.0000
    OQSO for bin             using bits 14 to 18        193241174.006 1.0000
    OQSO for bin             using bits 13 to 17        194112176.958 1.0000
    OQSO for bin             using bits 12 to 16        193078173.453 1.0000
    OQSO for bin             using bits 11 to 15        194033176.690 1.0000
    OQSO for bin             using bits 10 to 14        193025173.273 1.0000
    OQSO for bin             using bits  9 to 13        193758175.758 1.0000
    OQSO for bin             using bits  8 to 12        193350174.375 1.0000
    OQSO for bin             using bits  7 to 11        193718175.623 1.0000
    OQSO for bin             using bits  6 to 10        193375174.460 1.0000
    OQSO for bin             using bits  5 to  9        194057176.772 1.0000
    OQSO for bin             using bits  4 to  8        193771175.802 1.0000
    OQSO for bin             using bits  3 to  7        193541175.023 1.0000
    OQSO for bin             using bits  2 to  6        193228173.962 1.0000
    OQSO for bin             using bits  1 to  5        193617175.280 1.0000
  DNA test for generator bin            
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
     DNA for bin             using bits 31 to 32        193958153.536 1.0000
     DNA for bin             using bits 30 to 31        193980153.601 1.0000
     DNA for bin             using bits 29 to 30        192642149.654 1.0000
     DNA for bin             using bits 28 to 29        194163154.141 1.0000
     DNA for bin             using bits 27 to 28        193471152.099 1.0000
     DNA for bin             using bits 26 to 27        193841153.191 1.0000
     DNA for bin             using bits 25 to 26        194046153.795 1.0000
     DNA for bin             using bits 24 to 25        193407151.911 1.0000
     DNA for bin             using bits 23 to 24        193107151.026 1.0000
     DNA for bin             using bits 22 to 23        193353151.751 1.0000
     DNA for bin             using bits 21 to 22        193315151.639 1.0000
     DNA for bin             using bits 20 to 21        193287151.557 1.0000
     DNA for bin             using bits 19 to 20        193100151.005 1.0000
     DNA for bin             using bits 18 to 19        194144154.085 1.0000
     DNA for bin             using bits 17 to 18        193461152.070 1.0000
     DNA for bin             using bits 16 to 17        193369151.798 1.0000
     DNA for bin             using bits 15 to 16        192952150.568 1.0000
     DNA for bin             using bits 14 to 15        193858153.241 1.0000
     DNA for bin             using bits 13 to 14        193781153.014 1.0000
     DNA for bin             using bits 12 to 13        193515152.229 1.0000
     DNA for bin             using bits 11 to 12        193274151.518 1.0000
     DNA for bin             using bits 10 to 11        193527152.265 1.0000
     DNA for bin             using bits  9 to 10        193150151.152 1.0000
     DNA for bin             using bits  8 to  9        194016153.707 1.0000
     DNA for bin             using bits  7 to  8        193193151.279 1.0000
     DNA for bin             using bits  6 to  7        193408151.913 1.0000
     DNA for bin             using bits  5 to  6        193304151.607 1.0000
     DNA for bin             using bits  4 to  5        193710152.804 1.0000
     DNA for bin             using bits  3 to  4        193256151.465 1.0000
     DNA for bin             using bits  2 to  3        194050153.807 1.0000
     DNA for bin             using bits  1 to  2        192986150.669 1.0000

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST on a stream of bytes.      ::        
     :: Consider the file under test as a stream of bytes (four per   ::        
     :: 32 bit integer).  Each byte can contain from 0 to 8 1's,      ::        
     :: with probabilities 1,8,28,56,70,56,28,8,1 over 256.  Now let  ::        
     :: the stream of bytes provide a string of overlapping  5-letter ::        
     :: words, each "letter" taking values A,B,C,D,E. The letters are ::        
     :: determined by the number of 1's in a byte::  0,1,or 2 yield A,::        
     :: 3 yields B, 4 yields C, 5 yields D and 6,7 or 8 yield E. Thus ::        
     :: we have a monkey at a typewriter hitting five keys with vari- ::        
     :: ous probabilities (37,56,70,56,37 over 256).  There are 5^5   ::        
     :: possible 5-letter words, and from a string of 256,000 (over-  ::        
     :: lapping) 5-letter words, counts are made on the frequencies   ::        
     :: for each word.   The quadratic form in the weak inverse of    ::        
     :: the covariance matrix of the cell counts provides a chisquare ::        
     :: test::  Q5-Q4, the difference of the naive Pearson sums of    ::        
     :: (OBS-EXP)^2/EXP on counts for 5- and 4-letter cell counts.    ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
   Test results for bin            
 Chi-square with 5^5-5^4=2500 d.of f. for sample size:2560000
                               chisquare  equiv normal  p-value
  Results fo COUNT-THE-1's in successive bytes:
 byte stream for bin              3020.09      7.355     1.000000
 byte stream for bin              2421.01     -1.117      .131975

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST for specific bytes.        ::        
     :: Consider the file under test as a stream of 32-bit integers.  ::        
     :: From each integer, a specific byte is chosen , say the left-  ::        
     :: most::  bits 1 to 8. Each byte can contain from 0 to 8 1's,   ::        
     :: with probabilitie 1,8,28,56,70,56,28,8,1 over 256.  Now let   ::        
     :: the specified bytes from successive integers provide a string ::        
     :: of (overlapping) 5-letter words, each "letter" taking values  ::        
     :: A,B,C,D,E. The letters are determined  by the number of 1's,  ::        
     :: in that byte::  0,1,or 2 ---> A, 3 ---> B, 4 ---> C, 5 ---> D,::        
     :: and  6,7 or 8 ---> E.  Thus we have a monkey at a typewriter  ::        
     :: hitting five keys with with various probabilities::  37,56,70,::        
     :: 56,37 over 256. There are 5^5 possible 5-letter words, and    ::        
     :: from a string of 256,000 (overlapping) 5-letter words, counts ::        
     :: are made on the frequencies for each word. The quadratic form ::        
     :: in the weak inverse of the covariance matrix of the cell      ::        
     :: counts provides a chisquare test::  Q5-Q4, the difference of  ::        
     :: the naive Pearson  sums of (OBS-EXP)^2/EXP on counts for 5-   ::        
     :: and 4-letter cell counts.                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 Chi-square with 5^5-5^4=2500 d.of f. for sample size: 256000
                      chisquare  equiv normal  p value
  Results for COUNT-THE-1's in specified bytes:
           bits  1 to  8  3927.74     20.191     1.000000
           bits  2 to  9  3935.75     20.305     1.000000
           bits  3 to 10  3810.91     18.539     1.000000
           bits  4 to 11  4057.81     22.031     1.000000
           bits  5 to 12  3726.57     17.346     1.000000
           bits  6 to 13  3800.32     18.389     1.000000
           bits  7 to 14  4037.32     21.741     1.000000
           bits  8 to 15  3878.30     19.492     1.000000
           bits  9 to 16  3765.33     17.894     1.000000
           bits 10 to 17  3853.85     19.146     1.000000
           bits 11 to 18  3980.63     20.939     1.000000
           bits 12 to 19  3839.98     18.950     1.000000
           bits 13 to 20  3732.43     17.429     1.000000
           bits 14 to 21  3987.61     21.038     1.000000
           bits 15 to 22  3714.55     17.176     1.000000
           bits 16 to 23  3898.70     19.781     1.000000
           bits 17 to 24  3808.25     18.502     1.000000
           bits 18 to 25  3817.96     18.639     1.000000
           bits 19 to 26  3884.98     19.587     1.000000
           bits 20 to 27  3838.86     18.934     1.000000
           bits 21 to 28  4034.04     21.695     1.000000
           bits 22 to 29  3929.97     20.223     1.000000
           bits 23 to 30  3867.29     19.336     1.000000
           bits 24 to 31  4039.76     21.776     1.000000
           bits 25 to 32  3995.88     21.155     1.000000

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THIS IS A PARKING LOT TEST                      ::        
     :: In a square of side 100, randomly "park" a car---a circle of  ::        
     :: radius 1.   Then try to park a 2nd, a 3rd, and so on, each    ::        
     :: time parking "by ear".  That is, if an attempt to park a car  ::        
     :: causes a crash with one already parked, try again at a new    ::        
     :: random location. (To avoid path problems, consider parking    ::        
     :: helicopters rather than cars.)   Each attempt leads to either ::        
     :: a crash or a success, the latter followed by an increment to  ::        
     :: the list of cars already parked. If we plot n:  the number of ::        
     :: attempts, versus k::  the number successfully parked, we get a::        
     :: curve that should be similar to those provided by a perfect   ::        
     :: random number generator.  Theory for the behavior of such a   ::        
     :: random curve seems beyond reach, and as graphics displays are ::        
     :: not available for this battery of tests, a simple characteriz ::        
     :: ation of the random experiment is used: k, the number of cars ::        
     :: successfully parked after n=12,000 attempts. Simulation shows ::        
     :: that k should average 3523 with sigma 21.9 and is very close  ::        
     :: to normally distributed.  Thus (k-3523)/21.9 should be a st-  ::        
     :: andard normal variable, which, converted to a uniform varia-  ::        
     :: ble, provides input to a KSTEST based on a sample of 10.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           CDPARK: result of ten tests on file bin            
            Of 12,000 tries, the average no. of successes
                 should be 3523 with sigma=21.9
            Successes: 3516    z-score:  -.320 p-value: .374623
            Successes: 3492    z-score: -1.416 p-value: .078457
            Successes: 3530    z-score:   .320 p-value: .625377
            Successes: 3525    z-score:   .091 p-value: .536382
            Successes: 3494    z-score: -1.324 p-value: .092718
            Successes: 3536    z-score:   .594 p-value: .723613
            Successes: 3512    z-score:  -.502 p-value: .307734
            Successes: 3516    z-score:  -.320 p-value: .374623
            Successes: 3532    z-score:   .411 p-value: .659449
            Successes: 3500    z-score: -1.050 p-value: .146807
 
           square size   avg. no.  parked   sample sigma
             100.            3515.300       15.030
            KSTEST for the above 10: p=  .647368

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THE MINIMUM DISTANCE TEST                       ::        
     :: It does this 100 times::   choose n=8000 random points in a   ::        
     :: square of side 10000.  Find d, the minimum distance between   ::        
     :: the (n^2-n)/2 pairs of points.  If the points are truly inde- ::        
     :: pendent uniform, then d^2, the square of the minimum distance ::        
     :: should be (very close to) exponentially distributed with mean ::        
     :: .995 .  Thus 1-exp(-d^2/.995) should be uniform on [0,1) and  ::        
     :: a KSTEST on the resulting 100 values serves as a test of uni- ::        
     :: formity for random points in the square. Test numbers=0 mod 5 ::        
     :: are printed but the KSTEST is based on the full set of 100    ::        
     :: random choices of 8000 points in the 10000x10000 square.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               This is the MINIMUM DISTANCE test
              for random integers in the file bin            
     Sample no.    d^2     avg     equiv uni            
           5     .8642    .5368     .580433
          10     .0710    .3923     .068859
          15    1.4078    .5987     .757052
          20     .4325    .5188     .352553
          25     .3848    .4701     .320737
          30     .1103    .5261     .104906
          35     .2841    .6053     .248359
          40     .4977    .6855     .393567
          45     .4268    .7691     .348778
          50     .3779    .8430     .316022
          55    1.2185    .8843     .706120
          60     .3859    .8948     .321491
          65     .9952    .8766     .632177
          70    1.5972    .8825     .799162
          75     .2064    .8843     .187324
          80    3.7375    .9590     .976629
          85     .4759    .9654     .380143
          90    1.5552    .9839     .790495
          95    3.5968   1.0331     .973079
         100     .4544   1.0587     .366591
     MINIMUM DISTANCE TEST for bin            
          Result of KS test on 20 transformed mindist^2's:
                                  p-value= .465486

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ 

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::              THE 3DSPHERES TEST                               ::        
     :: Choose  4000 random points in a cube of edge 1000.  At each   ::        
     :: point, center a sphere large enough to reach the next closest ::        
     :: point. Then the volume of the smallest such sphere is (very   ::        
     :: close to) exponentially distributed with mean 120pi/3.  Thus  ::        
     :: the radius cubed is exponential with mean 30. (The mean is    ::        
     :: obtained by extensive simulation).  The 3DSPHERES test gener- ::        
     :: ates 4000 such spheres 20 times.  Each min radius cubed leads ::        
     :: to a uniform variable by means of 1-exp(-r^3/30.), then a     ::        
     ::  KSTEST is done on the 20 p-values.                           ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               The 3DSPHERES test for file bin            
 sample no:  1     r^3=   9.021     p-value= .25971
 sample no:  2     r^3=   5.231     p-value= .16002
 sample no:  3     r^3=  20.662     p-value= .49779
 sample no:  4     r^3=  81.723     p-value= .93439
 sample no:  5     r^3=  26.592     p-value= .58787
 sample no:  6     r^3=  65.422     p-value= .88704
 sample no:  7     r^3=  13.302     p-value= .35816
 sample no:  8     r^3=   4.077     p-value= .12706
 sample no:  9     r^3=  32.155     p-value= .65762
 sample no: 10     r^3=  88.636     p-value= .94790
 sample no: 11     r^3=  50.458     p-value= .81399
 sample no: 12     r^3=  72.370     p-value= .91039
 sample no: 13     r^3=  40.122     p-value= .73747
 sample no: 14     r^3=  19.882     p-value= .48456
 sample no: 15     r^3=  75.723     p-value= .91987
 sample no: 16     r^3=   5.796     p-value= .17569
 sample no: 17     r^3=   1.356     p-value= .04418
 sample no: 18     r^3=   5.680     p-value= .17248
 sample no: 19     r^3=   7.660     p-value= .22535
 sample no: 20     r^3=   9.655     p-value= .27517
  A KS test is applied to those 20 p-values.
---------------------------------------------------------
       3DSPHERES test for file bin                  p-value= .252538
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::      This is the SQEEZE test                                  ::        
     ::  Random integers are floated to get uniforms on [0,1). Start- ::        
     ::  ing with k=2^31=2147483647, the test finds j, the number of  ::        
     ::  iterations necessary to reduce k to 1, using the reduction   ::        
     ::  k=ceiling(k*U), with U provided by floating integers from    ::        
     ::  the file being tested.  Such j's are found 100,000 times,    ::        
     ::  then counts for the number of times j was <=6,7,...,47,>=48  ::        
     ::  are used to provide a chi-square test for cell frequencies.  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
            RESULTS OF SQUEEZE TEST FOR bin            
         Table of standardized frequency counts
     ( (obs-exp)/sqrt(exp) )^2
        for j taking values <=6,7,8,...,47,>=48:
     2.7    -1.2     -.8      .5    -1.7     -.9
    -2.6    -1.0     1.1      .7      .9     -.3
     -.8      .7      .9     1.0     -.5     2.5
     -.6      .3     -.9     -.9    -1.2      .2
     -.7     -.9    -1.0     1.8    -1.6      .2
     -.3     -.7     1.0     -.1      .3      .2
      .7     -.1      .1    -1.8      .1    -1.0
     -.1
           Chi-square with 42 degrees of freedom: 50.574
              z-score=   .936  p-value= .829194
______________________________________________________________

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The  OVERLAPPING SUMS test                        ::        
     :: Integers are floated to get a sequence U(1),U(2),... of uni-  ::        
     :: form [0,1) variables.  Then overlapping sums,                 ::        
     ::   S(1)=U(1)+...+U(100), S2=U(2)+...+U(101),... are formed.    ::        
     :: The S's are virtually normal with a certain covariance mat-   ::        
     :: rix.  A linear transformation of the S's converts them to a   ::        
     :: sequence of independent standard normals, which are converted ::        
     :: to uniform variables for a KSTEST. The  p-values from ten     ::        
     :: KSTESTs are given still another KSTEST.                       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Test no.  1      p-value  .073467
                Test no.  2      p-value  .990869
                Test no.  3      p-value  .691717
                Test no.  4      p-value  .434828
                Test no.  5      p-value  .121522
                Test no.  6      p-value  .876436
                Test no.  7      p-value  .954780
                Test no.  8      p-value  .765335
                Test no.  9      p-value  .171507
                Test no. 10      p-value  .477787
   Results of the OSUM test for bin            
        KSTEST on the above 10 p-values:  .433986

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the RUNS test.  It counts runs up, and runs down, ::        
     :: in a sequence of uniform [0,1) variables, obtained by float-  ::        
     :: ing the 32-bit integers in the specified file. This example   ::        
     :: shows how runs are counted:  .123,.357,.789,.425,.224,.416,.95::        
     :: contains an up-run of length 3, a down-run of length 2 and an ::        
     :: up-run of (at least) 2, depending on the next values.  The    ::        
     :: covariance matrices for the runs-up and runs-down are well    ::        
     :: known, leading to chisquare tests for quadratic forms in the  ::        
     :: weak inverses of the covariance matrices.  Runs are counted   ::        
     :: for sequences of length 10,000.  This is done ten times. Then ::        
     :: repeated.                                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           The RUNS test for file bin            
     Up and down runs in a sample of 10000
_________________________________________________ 
                 Run test for bin            :
       runs up; ks test for 10 p's: .697519
     runs down; ks test for 10 p's: .641455
                 Run test for bin            :
       runs up; ks test for 10 p's: .907332
     runs down; ks test for 10 p's: .976097

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the CRAPS TEST. It plays 200,000 games of craps, finds::        
     :: the number of wins and the number of throws necessary to end  ::        
     :: each game.  The number of wins should be (very close to) a    ::        
     :: normal with mean 200000p and variance 200000p(1-p), with      ::        
     :: p=244/495.  Throws necessary to complete the game can vary    ::        
     :: from 1 to infinity, but counts for all>21 are lumped with 21. ::        
     :: A chi-square test is made on the no.-of-throws cell counts.   ::        
     :: Each 32-bit integer from the test file provides the value for ::        
     :: the throw of a die, by floating to [0,1), multiplying by 6    ::        
     :: and taking 1 plus the integer part of the result.             ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Results of craps test for bin            
  No. of wins:  Observed Expected
                                98710    98585.86
                  98710= No. of wins, z-score=  .555 pvalue= .71063
   Analysis of Throws-per-Game:
 Chisq=  24.90 for 20 degrees of freedom, p=  .79479
               Throws Observed Expected  Chisq     Sum
                  1    66196    66666.7   3.323    3.323
                  2    37779    37654.3    .413    3.736
                  3    26835    26954.7    .532    4.268
                  4    19410    19313.5    .483    4.750
                  5    14037    13851.4   2.486    7.237
                  6    10079     9943.5   1.845    9.082
                  7     7204     7145.0    .487    9.569
                  8     5193     5139.1    .566   10.135
                  9     3605     3699.9   2.432   12.567
                 10     2639     2666.3    .279   12.846
                 11     1913     1923.3    .055   12.902
                 12     1427     1388.7   1.054   13.956
                 13     1000     1003.7    .014   13.970
                 14      691      726.1   1.701   15.670
                 15      526      525.8    .000   15.670
                 16      403      381.2   1.253   16.923
                 17      321      276.5   7.148   24.071
                 18      197      200.8    .073   24.144
                 19      144      146.0    .027   24.171
                 20      115      106.2    .727   24.898
                 21      286      287.1    .004   24.902
            SUMMARY  FOR bin            
                p-value for no. of wins: .710631
                p-value for throws/game: .794789

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

 Results of DIEHARD battery of tests sent to file t.txt          
