       NOTE: Most of the tests in DIEHARD return a p-value, which               
       should be uniform on [0,1) if the input file contains truly              
       independent random bits.   Those p-values are obtained by                
       p=F(X), where F is the assumed distribution of the sample                
       random variable X---often normal. But that assumed F is just             
       an asymptotic approximation, for which the fit will be worst             
       in the tails. Thus you should not be surprised with                      
       occasional p-values near 0 or 1, such as .0012 or .9983.                 
       When a bit stream really FAILS BIG, you will get p's of 0 or             
       1 to six or more places.  By all means, do not, as a                     
       Statistician might, think that a p < .025 or p> .975 means               
       that the RNG has "failed the test at the .05 level".  Such               
       p's happen among the hundreds that DIEHARD produces, even                
       with good RNG's.  So keep in mind that " p happens".                     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            This is the BIRTHDAY SPACINGS TEST                 ::        
     :: Choose m birthdays in a year of n days.  List the spacings    ::        
     :: between the birthdays.  If j is the number of values that     ::        
     :: occur more than once in that list, then j is asymptotically   ::        
     :: Poisson distributed with mean m^3/(4n).  Experience shows n   ::        
     :: must be quite large, say n>=2^18, for comparing the results   ::        
     :: to the Poisson distribution with that mean.  This test uses   ::        
     :: n=2^24 and m=2^9,  so that the underlying distribution for j  ::        
     :: is taken to be Poisson with lambda=2^27/(2^26)=2.  A sample   ::        
     :: of 500 j's is taken, and a chi-square goodness of fit test    ::        
     :: provides a p value.  The first test uses bits 1-24 (counting  ::        
     :: from the left) from integers in the specified file.           ::        
     ::   Then the file is closed and reopened. Next, bits 2-25 are   ::        
     :: used to provide birthdays, then 3-26 and so on to bits 9-32.  ::        
     :: Each set of bits provides a p-value, and the nine p-values    ::        
     :: provide a sample for a KSTEST.                                ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 BIRTHDAY SPACINGS TEST, M= 512 N=2**24 LAMBDA=  2.0000
           Results for bin            
                   For a sample of size 500:     mean   
           bin             using bits  1 to 24   1.954
  duplicate       number       number 
  spacings       observed     expected
        0          68.       67.668
        1         150.      135.335
        2         130.      135.335
        3          80.       90.224
        4          43.       45.112
        5          21.       18.045
  6 to INF          8.        8.282
 Chisquare with  6 d.o.f. =     3.55 p-value=  .262950
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  2 to 25   2.012
  duplicate       number       number 
  spacings       observed     expected
        0          71.       67.668
        1         125.      135.335
        2         134.      135.335
        3          98.       90.224
        4          50.       45.112
        5          13.       18.045
  6 to INF          9.        8.282
 Chisquare with  6 d.o.f. =     3.64 p-value=  .274623
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  3 to 26   1.906
  duplicate       number       number 
  spacings       observed     expected
        0          72.       67.668
        1         141.      135.335
        2         144.      135.335
        3          78.       90.224
        4          43.       45.112
        5          16.       18.045
  6 to INF          6.        8.282
 Chisquare with  6 d.o.f. =     3.68 p-value=  .280719
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  4 to 27   2.012
  duplicate       number       number 
  spacings       observed     expected
        0          65.       67.668
        1         126.      135.335
        2         152.      135.335
        3          84.       90.224
        4          49.       45.112
        5          17.       18.045
  6 to INF          7.        8.282
 Chisquare with  6 d.o.f. =     3.82 p-value=  .299579
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  5 to 28   1.976
  duplicate       number       number 
  spacings       observed     expected
        0          64.       67.668
        1         135.      135.335
        2         140.      135.335
        3          99.       90.224
        4          42.       45.112
        5          14.       18.045
  6 to INF          6.        8.282
 Chisquare with  6 d.o.f. =     2.96 p-value=  .186659
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  6 to 29   2.118
  duplicate       number       number 
  spacings       observed     expected
        0          57.       67.668
        1         137.      135.335
        2         124.      135.335
        3         101.       90.224
        4          48.       45.112
        5          21.       18.045
  6 to INF         12.        8.282
 Chisquare with  6 d.o.f. =     6.28 p-value=  .607116
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  7 to 30   2.116
  duplicate       number       number 
  spacings       observed     expected
        0          54.       67.668
        1         141.      135.335
        2         128.      135.335
        3          93.       90.224
        4          50.       45.112
        5          25.       18.045
  6 to INF          9.        8.282
 Chisquare with  6 d.o.f. =     6.75 p-value=  .655765
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  8 to 31   2.056
  duplicate       number       number 
  spacings       observed     expected
        0          68.       67.668
        1         131.      135.335
        2         128.      135.335
        3          91.       90.224
        4          55.       45.112
        5          17.       18.045
  6 to INF         10.        8.282
 Chisquare with  6 d.o.f. =     3.13 p-value=  .207530
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  9 to 32   2.026
  duplicate       number       number 
  spacings       observed     expected
        0          61.       67.668
        1         139.      135.335
        2         133.      135.335
        3         100.       90.224
        4          40.       45.112
        5          20.       18.045
  6 to INF          7.        8.282
 Chisquare with  6 d.o.f. =     2.85 p-value=  .172013
  :::::::::::::::::::::::::::::::::::::::::
   The 9 p-values were
        .262950   .274623   .280719   .299579   .186659
        .607116   .655765   .207530   .172013
  A KSTEST for the 9 p-values yields  .950295

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            THE OVERLAPPING 5-PERMUTATION TEST                 ::        
     :: This is the OPERM5 test.  It looks at a sequence of one mill- ::        
     :: ion 32-bit random integers.  Each set of five consecutive     ::        
     :: integers can be in one of 120 states, for the 5! possible or- ::        
     :: derings of five numbers.  Thus the 5th, 6th, 7th,...numbers   ::        
     :: each provide a state. As many thousands of state transitions  ::        
     :: are observed,  cumulative counts are made of the number of    ::        
     :: occurences of each state.  Then the quadratic form in the     ::        
     :: weak inverse of the 120x120 covariance matrix yields a test   ::        
     :: equivalent to the likelihood ratio test that the 120 cell     ::        
     :: counts came from the specified (asymptotically) normal dis-   ::        
     :: tribution with the specified 120x120 covariance matrix (with  ::        
     :: rank 99).  This version uses 1,000,000 integers, twice.       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           OPERM5 test for file bin            
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom=126.930; p-value= .969281
           OPERM5 test for file bin            
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom= 79.951; p-value= .080178
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 31x31 matrices. The leftmost ::        
     :: 31 bits of 31 random integers from the test sequence are used ::        
     :: to form a 31x31 binary matrix over the field {0,1}. The rank  ::        
     :: is determined. That rank can be from 0 to 31, but ranks< 28   ::        
     :: are rare, and their counts are pooled with those for rank 28. ::        
     :: Ranks are found for 40,000 such random matrices and a chisqua-::        
     :: re test is performed on counts for ranks 31,30,29 and <=28.   ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for bin            
         Rank test for 31x31 binary matrices:
        rows from leftmost 31 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        28       208     211.4   .055259     .055
        29      5114    5134.0   .077992     .133
        30     23114   23103.0   .005193     .138
        31     11564   11551.5   .013474     .152
  chisquare=  .152 for 3 d. of f.; p-value= .363405
--------------------------------------------------------------
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 32x32 matrices. A random 32x ::        
     :: 32 binary matrix is formed, each row a 32-bit random integer. ::        
     :: The rank is determined. That rank can be from 0 to 32, ranks  ::        
     :: less than 29 are rare, and their counts are pooled with those ::        
     :: for rank 29.  Ranks are found for 40,000 such random matrices ::        
     :: and a chisquare test is performed on counts for ranks  32,31, ::        
     :: 30 and <=29.                                                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for bin            
         Rank test for 32x32 binary matrices:
        rows from leftmost 32 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        29       197     211.4   .983261     .983
        30      5155    5134.0   .085814    1.069
        31     23270   23103.0  1.206479    2.276
        32     11378   11551.5  2.606645    4.882
  chisquare= 4.882 for 3 d. of f.; p-value= .832939
--------------------------------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 6x8 matrices.  From each of  ::        
     :: six random 32-bit integers from the generator under test, a   ::        
     :: specified byte is chosen, and the resulting six bytes form a  ::        
     :: 6x8 binary matrix whose rank is determined.  That rank can be ::        
     :: from 0 to 6, but ranks 0,1,2,3 are rare; their counts are     ::        
     :: pooled with those for rank 4. Ranks are found for 100,000     ::        
     :: random matrices, and a chi-square test is performed on        ::        
     :: counts for ranks 6,5 and <=4.                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
         Binary Rank Test for bin            
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  1 to  8
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          934       944.3        .112        .112
          r =5        21945     21743.9       1.860       1.972
          r =6        77121     77311.8        .471       2.443
                        p=1-exp(-SUM/2)= .70524
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  2 to  9
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          949       944.3        .023        .023
          r =5        21864     21743.9        .663        .687
          r =6        77187     77311.8        .201        .888
                        p=1-exp(-SUM/2)= .35860
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  3 to 10
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          961       944.3        .295        .295
          r =5        21750     21743.9        .002        .297
          r =6        77289     77311.8        .007        .304
                        p=1-exp(-SUM/2)= .14090
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  4 to 11
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          954       944.3        .100        .100
          r =5        21531     21743.9       2.085       2.184
          r =6        77515     77311.8        .534       2.718
                        p=1-exp(-SUM/2)= .74311
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  5 to 12
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          894       944.3       2.679       2.679
          r =5        21728     21743.9        .012       2.691
          r =6        77378     77311.8        .057       2.748
                        p=1-exp(-SUM/2)= .74688
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  6 to 13
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          984       944.3       1.669       1.669
          r =5        21694     21743.9        .115       1.783
          r =6        77322     77311.8        .001       1.785
                        p=1-exp(-SUM/2)= .59033
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  7 to 14
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          927       944.3        .317        .317
          r =5        21732     21743.9        .007        .324
          r =6        77341     77311.8        .011        .335
                        p=1-exp(-SUM/2)= .15402
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  8 to 15
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          962       944.3        .332        .332
          r =5        21722     21743.9        .022        .354
          r =6        77316     77311.8        .000        .354
                        p=1-exp(-SUM/2)= .16222
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  9 to 16
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          934       944.3        .112        .112
          r =5        21970     21743.9       2.351       2.463
          r =6        77096     77311.8        .602       3.066
                        p=1-exp(-SUM/2)= .78409
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 10 to 17
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          965       944.3        .454        .454
          r =5        21798     21743.9        .135        .588
          r =6        77237     77311.8        .072        .661
                        p=1-exp(-SUM/2)= .28132
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 11 to 18
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          958       944.3        .199        .199
          r =5        21726     21743.9        .015        .213
          r =6        77316     77311.8        .000        .214
                        p=1-exp(-SUM/2)= .10133
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 12 to 19
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          918       944.3        .733        .733
          r =5        21687     21743.9        .149        .881
          r =6        77395     77311.8        .090        .971
                        p=1-exp(-SUM/2)= .38461
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 13 to 20
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          877       944.3       4.797       4.797
          r =5        21797     21743.9        .130       4.926
          r =6        77326     77311.8        .003       4.929
                        p=1-exp(-SUM/2)= .91494
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 14 to 21
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          882       944.3       4.110       4.110
          r =5        21926     21743.9       1.525       5.635
          r =6        77192     77311.8        .186       5.821
                        p=1-exp(-SUM/2)= .94555
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 15 to 22
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          903       944.3       1.806       1.806
          r =5        21959     21743.9       2.128       3.934
          r =6        77138     77311.8        .391       4.325
                        p=1-exp(-SUM/2)= .88496
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 16 to 23
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          937       944.3        .056        .056
          r =5        21487     21743.9       3.035       3.092
          r =6        77576     77311.8        .903       3.995
                        p=1-exp(-SUM/2)= .86429
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 17 to 24
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          891       944.3       3.009       3.009
          r =5        21660     21743.9        .324       3.332
          r =6        77449     77311.8        .243       3.576
                        p=1-exp(-SUM/2)= .83269
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 18 to 25
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          947       944.3        .008        .008
          r =5        21688     21743.9        .144        .151
          r =6        77365     77311.8        .037        .188
                        p=1-exp(-SUM/2)= .08973
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 19 to 26
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          915       944.3        .909        .909
          r =5        21637     21743.9        .526       1.435
          r =6        77448     77311.8        .240       1.675
                        p=1-exp(-SUM/2)= .56714
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 20 to 27
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          904       944.3       1.720       1.720
          r =5        21673     21743.9        .231       1.951
          r =6        77423     77311.8        .160       2.111
                        p=1-exp(-SUM/2)= .65200
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 21 to 28
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          932       944.3        .160        .160
          r =5        21653     21743.9        .380        .540
          r =6        77415     77311.8        .138        .678
                        p=1-exp(-SUM/2)= .28752
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 22 to 29
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          960       944.3        .261        .261
          r =5        21608     21743.9        .849       1.110
          r =6        77432     77311.8        .187       1.297
                        p=1-exp(-SUM/2)= .47723
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 23 to 30
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          946       944.3        .003        .003
          r =5        21699     21743.9        .093        .096
          r =6        77355     77311.8        .024        .120
                        p=1-exp(-SUM/2)= .05819
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 24 to 31
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          975       944.3        .998        .998
          r =5        21590     21743.9       1.089       2.087
          r =6        77435     77311.8        .196       2.284
                        p=1-exp(-SUM/2)= .68076
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 25 to 32
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          955       944.3        .121        .121
          r =5        21790     21743.9        .098        .219
          r =6        77255     77311.8        .042        .261
                        p=1-exp(-SUM/2)= .12221
   TEST SUMMARY, 25 tests on 100,000 random 6x8 matrices
 These should be 25 uniform [0,1] random variables:
     .705236     .358601     .140897     .743112     .746878
     .590330     .154024     .162223     .784093     .281324
     .101334     .384606     .914945     .945554     .884962
     .864293     .832689     .089729     .567142     .652000
     .287518     .477232     .058192     .680755     .122207
   brank test summary for bin            
       The KS test for those 25 supposed UNI's yields
                    KS p-value= .097131

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::                   THE BITSTREAM TEST                          ::        
     :: The file under test is viewed as a stream of bits. Call them  ::        
     :: b1,b2,... .  Consider an alphabet with two "letters", 0 and 1 ::        
     :: and think of the stream of bits as a succession of 20-letter  ::        
     :: "words", overlapping.  Thus the first word is b1b2...b20, the ::        
     :: second is b2b3...b21, and so on.  The bitstream test counts   ::        
     :: the number of missing 20-letter (20-bit) words in a string of ::        
     :: 2^21 overlapping 20-letter words.  There are 2^20 possible 20 ::        
     :: letter words.  For a truly random string of 2^21+19 bits, the ::        
     :: number of missing words j should be (very close to) normally  ::        
     :: distributed with mean 141,909 and sigma 428.  Thus            ::        
     ::  (j-141909)/428 should be a standard normal variate (z score) ::        
     :: that leads to a uniform [0,1) p value.  The test is repeated  ::        
     :: twenty times.                                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 THE OVERLAPPING 20-tuples BITSTREAM  TEST, 20 BITS PER WORD, N words
   This test uses N=2^21 and samples the bitstream 20 times.
  No. missing words should average  141909. with sigma=428.
---------------------------------------------------------
 tst no  1:  141463 missing words,   -1.04 sigmas from mean, p-value= .14852
 tst no  2:  140887 missing words,   -2.39 sigmas from mean, p-value= .00846
 tst no  3:  142274 missing words,     .85 sigmas from mean, p-value= .80290
 tst no  4:  141269 missing words,   -1.50 sigmas from mean, p-value= .06731
 tst no  5:  141834 missing words,    -.18 sigmas from mean, p-value= .43015
 tst no  6:  141609 missing words,    -.70 sigmas from mean, p-value= .24143
 tst no  7:  141720 missing words,    -.44 sigmas from mean, p-value= .32912
 tst no  8:  141945 missing words,     .08 sigmas from mean, p-value= .53321
 tst no  9:  141674 missing words,    -.55 sigmas from mean, p-value= .29122
 tst no 10:  141970 missing words,     .14 sigmas from mean, p-value= .55636
 tst no 11:  141616 missing words,    -.69 sigmas from mean, p-value= .24656
 tst no 12:  142304 missing words,     .92 sigmas from mean, p-value= .82177
 tst no 13:  142071 missing words,     .38 sigmas from mean, p-value= .64719
 tst no 14:  142577 missing words,    1.56 sigmas from mean, p-value= .94062
 tst no 15:  141535 missing words,    -.87 sigmas from mean, p-value= .19090
 tst no 16:  141792 missing words,    -.27 sigmas from mean, p-value= .39199
 tst no 17:  142060 missing words,     .35 sigmas from mean, p-value= .63759
 tst no 18:  141637 missing words,    -.64 sigmas from mean, p-value= .26230
 tst no 19:  142119 missing words,     .49 sigmas from mean, p-value= .68789
 tst no 20:  141245 missing words,   -1.55 sigmas from mean, p-value= .06031

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The tests OPSO, OQSO and DNA                      ::        
     ::         OPSO means Overlapping-Pairs-Sparse-Occupancy         ::        
     :: The OPSO test considers 2-letter words from an alphabet of    ::        
     :: 1024 letters.  Each letter is determined by a specified ten   ::        
     :: bits from a 32-bit integer in the sequence to be tested. OPSO ::        
     :: generates  2^21 (overlapping) 2-letter words  (from 2^21+1    ::        
     :: "keystrokes")  and counts the number of missing words---that  ::        
     :: is 2-letter words which do not appear in the entire sequence. ::        
     :: That count should be very close to normally distributed with  ::        
     :: mean 141,909, sigma 290. Thus (missingwrds-141909)/290 should ::        
     :: be a standard normal variable. The OPSO test takes 32 bits at ::        
     :: a time from the test file and uses a designated set of ten    ::        
     :: consecutive bits. It then restarts the file for the next de-  ::        
     :: signated 10 bits, and so on.                                  ::        
     ::                                                               ::        
     ::     OQSO means Overlapping-Quadruples-Sparse-Occupancy        ::        
     ::   The test OQSO is similar, except that it considers 4-letter ::        
     :: words from an alphabet of 32 letters, each letter determined  ::        
     :: by a designated string of 5 consecutive bits from the test    ::        
     :: file, elements of which are assumed 32-bit random integers.   ::        
     :: The mean number of missing words in a sequence of 2^21 four-  ::        
     :: letter words,  (2^21+3 "keystrokes"), is again 141909, with   ::        
     :: sigma = 295.  The mean is based on theory; sigma comes from   ::        
     :: extensive simulation.                                         ::        
     ::                                                               ::        
     ::    The DNA test considers an alphabet of 4 letters::  C,G,A,T,::        
     :: determined by two designated bits in the sequence of random   ::        
     :: integers being tested.  It considers 10-letter words, so that ::        
     :: as in OPSO and OQSO, there are 2^20 possible words, and the   ::        
     :: mean number of missing words from a string of 2^21  (over-    ::        
     :: lapping)  10-letter  words (2^21+9 "keystrokes") is 141909.   ::        
     :: The standard deviation sigma=339 was determined as for OQSO   ::        
     :: by simulation.  (Sigma for OPSO, 290, is the true value (to   ::        
     :: three places), not determined by simulation.                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 OPSO test for generator bin            
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OPSO for bin             using bits 23 to 32        142862  3.285  .9995
    OPSO for bin             using bits 22 to 31        142535  2.157  .9845
    OPSO for bin             using bits 21 to 30        142455  1.882  .9701
    OPSO for bin             using bits 20 to 29        142337  1.475  .9299
    OPSO for bin             using bits 19 to 28        142823  3.151  .9992
    OPSO for bin             using bits 18 to 27        142755  2.916  .9982
    OPSO for bin             using bits 17 to 26        142881  3.351  .9996
    OPSO for bin             using bits 16 to 25        142634  2.499  .9938
    OPSO for bin             using bits 15 to 24        142798  3.064  .9989
    OPSO for bin             using bits 14 to 23        142782  3.009  .9987
    OPSO for bin             using bits 13 to 22        142829  3.171  .9992
    OPSO for bin             using bits 12 to 21        142100   .657  .7446
    OPSO for bin             using bits 11 to 20        142775  2.985  .9986
    OPSO for bin             using bits 10 to 19        142679  2.654  .9960
    OPSO for bin             using bits  9 to 18        142406  1.713  .9566
    OPSO for bin             using bits  8 to 17        142527  2.130  .9834
    OPSO for bin             using bits  7 to 16        142852  3.251  .9994
    OPSO for bin             using bits  6 to 15        142738  2.857  .9979
    OPSO for bin             using bits  5 to 14        142545  2.192  .9858
    OPSO for bin             using bits  4 to 13        143435  5.261 1.0000
    OPSO for bin             using bits  3 to 12        142177   .923  .8220
    OPSO for bin             using bits  2 to 11        142591  2.351  .9906
    OPSO for bin             using bits  1 to 10        143196  4.437 1.0000
 OQSO test for generator bin            
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OQSO for bin             using bits 28 to 32        142089   .609  .7288
    OQSO for bin             using bits 27 to 31        142718  2.741  .9969
    OQSO for bin             using bits 26 to 30        142284  1.270  .8980
    OQSO for bin             using bits 25 to 29        142522  2.077  .9811
    OQSO for bin             using bits 24 to 28        142600  2.341  .9904
    OQSO for bin             using bits 23 to 27        142213  1.029  .8484
    OQSO for bin             using bits 22 to 26        142139   .779  .7819
    OQSO for bin             using bits 21 to 25        142004   .321  .6259
    OQSO for bin             using bits 20 to 24        142135   .765  .7779
    OQSO for bin             using bits 19 to 23        142039   .440  .6699
    OQSO for bin             using bits 18 to 22        142044   .457  .6760
    OQSO for bin             using bits 17 to 21        142502  2.009  .9777
    OQSO for bin             using bits 16 to 20        142577  2.263  .9882
    OQSO for bin             using bits 15 to 19        141976   .226  .5894
    OQSO for bin             using bits 14 to 18        142249  1.151  .8752
    OQSO for bin             using bits 13 to 17        141864  -.154  .4389
    OQSO for bin             using bits 12 to 16        141925   .053  .5212
    OQSO for bin             using bits 11 to 15        142363  1.538  .9380
    OQSO for bin             using bits 10 to 14        142322  1.399  .9191
    OQSO for bin             using bits  9 to 13        142446  1.819  .9656
    OQSO for bin             using bits  8 to 12        142304  1.338  .9095
    OQSO for bin             using bits  7 to 11        142576  2.260  .9881
    OQSO for bin             using bits  6 to 10        141949   .134  .5535
    OQSO for bin             using bits  5 to  9        142615  2.392  .9916
    OQSO for bin             using bits  4 to  8        142312  1.365  .9139
    OQSO for bin             using bits  3 to  7        142006   .328  .6284
    OQSO for bin             using bits  2 to  6        142530  2.104  .9823
    OQSO for bin             using bits  1 to  5        142339  1.457  .9274
  DNA test for generator bin            
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
     DNA for bin             using bits 31 to 32        142193   .837  .7986
     DNA for bin             using bits 30 to 31        142632  2.132  .9835
     DNA for bin             using bits 29 to 30        141877  -.095  .4620
     DNA for bin             using bits 28 to 29        142005   .282  .6111
     DNA for bin             using bits 27 to 28        142059   .442  .6706
     DNA for bin             using bits 26 to 27        141792  -.346  .3646
     DNA for bin             using bits 25 to 26        141593  -.933  .1754
     DNA for bin             using bits 24 to 25        142143   .689  .7547
     DNA for bin             using bits 23 to 24        142524  1.813  .9651
     DNA for bin             using bits 22 to 23        141316 -1.750  .0400
     DNA for bin             using bits 21 to 22        141305 -1.783  .0373
     DNA for bin             using bits 20 to 21        141882  -.081  .4679
     DNA for bin             using bits 19 to 20        142022   .332  .6302
     DNA for bin             using bits 18 to 19        142081   .506  .6937
     DNA for bin             using bits 17 to 18        141939   .088  .5349
     DNA for bin             using bits 16 to 17        141437 -1.393  .0818
     DNA for bin             using bits 15 to 16        141810  -.293  .3848
     DNA for bin             using bits 14 to 15        141943   .099  .5396
     DNA for bin             using bits 13 to 14        141828  -.240  .4052
     DNA for bin             using bits 12 to 13        142078   .498  .6906
     DNA for bin             using bits 11 to 12        142027   .347  .6357
     DNA for bin             using bits 10 to 11        141565 -1.016  .1549
     DNA for bin             using bits  9 to 10        142228   .940  .8264
     DNA for bin             using bits  8 to  9        141888  -.063  .4749
     DNA for bin             using bits  7 to  8        141426 -1.426  .0770
     DNA for bin             using bits  6 to  7        141723  -.550  .2913
     DNA for bin             using bits  5 to  6        141575  -.986  .1620
     DNA for bin             using bits  4 to  5        142251  1.008  .8432
     DNA for bin             using bits  3 to  4        142323  1.220  .8888
     DNA for bin             using bits  2 to  3        142389  1.415  .9215
     DNA for bin             using bits  1 to  2        142830  2.716  .9967

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST on a stream of bytes.      ::        
     :: Consider the file under test as a stream of bytes (four per   ::        
     :: 32 bit integer).  Each byte can contain from 0 to 8 1's,      ::        
     :: with probabilities 1,8,28,56,70,56,28,8,1 over 256.  Now let  ::        
     :: the stream of bytes provide a string of overlapping  5-letter ::        
     :: words, each "letter" taking values A,B,C,D,E. The letters are ::        
     :: determined by the number of 1's in a byte::  0,1,or 2 yield A,::        
     :: 3 yields B, 4 yields C, 5 yields D and 6,7 or 8 yield E. Thus ::        
     :: we have a monkey at a typewriter hitting five keys with vari- ::        
     :: ous probabilities (37,56,70,56,37 over 256).  There are 5^5   ::        
     :: possible 5-letter words, and from a string of 256,000 (over-  ::        
     :: lapping) 5-letter words, counts are made on the frequencies   ::        
     :: for each word.   The quadratic form in the weak inverse of    ::        
     :: the covariance matrix of the cell counts provides a chisquare ::        
     :: test::  Q5-Q4, the difference of the naive Pearson sums of    ::        
     :: (OBS-EXP)^2/EXP on counts for 5- and 4-letter cell counts.    ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
   Test results for bin            
 Chi-square with 5^5-5^4=2500 d.of f. for sample size:2560000
                               chisquare  equiv normal  p-value
  Results fo COUNT-THE-1's in successive bytes:
 byte stream for bin              2660.93      2.276      .988575
 byte stream for bin              2504.00       .057      .522534

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST for specific bytes.        ::        
     :: Consider the file under test as a stream of 32-bit integers.  ::        
     :: From each integer, a specific byte is chosen , say the left-  ::        
     :: most::  bits 1 to 8. Each byte can contain from 0 to 8 1's,   ::        
     :: with probabilitie 1,8,28,56,70,56,28,8,1 over 256.  Now let   ::        
     :: the specified bytes from successive integers provide a string ::        
     :: of (overlapping) 5-letter words, each "letter" taking values  ::        
     :: A,B,C,D,E. The letters are determined  by the number of 1's,  ::        
     :: in that byte::  0,1,or 2 ---> A, 3 ---> B, 4 ---> C, 5 ---> D,::        
     :: and  6,7 or 8 ---> E.  Thus we have a monkey at a typewriter  ::        
     :: hitting five keys with with various probabilities::  37,56,70,::        
     :: 56,37 over 256. There are 5^5 possible 5-letter words, and    ::        
     :: from a string of 256,000 (overlapping) 5-letter words, counts ::        
     :: are made on the frequencies for each word. The quadratic form ::        
     :: in the weak inverse of the covariance matrix of the cell      ::        
     :: counts provides a chisquare test::  Q5-Q4, the difference of  ::        
     :: the naive Pearson  sums of (OBS-EXP)^2/EXP on counts for 5-   ::        
     :: and 4-letter cell counts.                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 Chi-square with 5^5-5^4=2500 d.of f. for sample size: 256000
                      chisquare  equiv normal  p value
  Results for COUNT-THE-1's in specified bytes:
           bits  1 to  8  2529.59       .419      .662214
           bits  2 to  9  2565.31       .924      .822143
           bits  3 to 10  2703.84      2.883      .998029
           bits  4 to 11  2540.51       .573      .716631
           bits  5 to 12  2570.99      1.004      .842312
           bits  6 to 13  2563.51       .898      .815451
           bits  7 to 14  2528.62       .405      .657173
           bits  8 to 15  2468.41      -.447      .327540
           bits  9 to 16  2507.66       .108      .543143
           bits 10 to 17  2574.60      1.055      .854295
           bits 11 to 18  2521.30       .301      .618379
           bits 12 to 19  2483.45      -.234      .407465
           bits 13 to 20  2438.33      -.872      .191566
           bits 14 to 21  2492.01      -.113      .455042
           bits 15 to 22  2571.97      1.018      .845625
           bits 16 to 23  2348.72     -2.139      .016199
           bits 17 to 24  2440.27      -.845      .199134
           bits 18 to 25  2556.55       .800      .788054
           bits 19 to 26  2617.82      1.666      .952170
           bits 20 to 27  2537.19       .526      .700561
           bits 21 to 28  2551.84       .733      .768245
           bits 22 to 29  2625.94      1.781      .962544
           bits 23 to 30  2633.30      1.885      .970291
           bits 24 to 31  2594.52      1.337      .909332
           bits 25 to 32  2599.93      1.413      .921200

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THIS IS A PARKING LOT TEST                      ::        
     :: In a square of side 100, randomly "park" a car---a circle of  ::        
     :: radius 1.   Then try to park a 2nd, a 3rd, and so on, each    ::        
     :: time parking "by ear".  That is, if an attempt to park a car  ::        
     :: causes a crash with one already parked, try again at a new    ::        
     :: random location. (To avoid path problems, consider parking    ::        
     :: helicopters rather than cars.)   Each attempt leads to either ::        
     :: a crash or a success, the latter followed by an increment to  ::        
     :: the list of cars already parked. If we plot n:  the number of ::        
     :: attempts, versus k::  the number successfully parked, we get a::        
     :: curve that should be similar to those provided by a perfect   ::        
     :: random number generator.  Theory for the behavior of such a   ::        
     :: random curve seems beyond reach, and as graphics displays are ::        
     :: not available for this battery of tests, a simple characteriz ::        
     :: ation of the random experiment is used: k, the number of cars ::        
     :: successfully parked after n=12,000 attempts. Simulation shows ::        
     :: that k should average 3523 with sigma 21.9 and is very close  ::        
     :: to normally distributed.  Thus (k-3523)/21.9 should be a st-  ::        
     :: andard normal variable, which, converted to a uniform varia-  ::        
     :: ble, provides input to a KSTEST based on a sample of 10.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           CDPARK: result of ten tests on file bin            
            Of 12,000 tries, the average no. of successes
                 should be 3523 with sigma=21.9
            Successes: 3521    z-score:  -.091 p-value: .463618
            Successes: 3510    z-score:  -.594 p-value: .276387
            Successes: 3523    z-score:   .000 p-value: .500000
            Successes: 3511    z-score:  -.548 p-value: .291865
            Successes: 3556    z-score:  1.507 p-value: .934075
            Successes: 3543    z-score:   .913 p-value: .819442
            Successes: 3553    z-score:  1.370 p-value: .914635
            Successes: 3479    z-score: -2.009 p-value: .022262
            Successes: 3545    z-score:  1.005 p-value: .842447
            Successes: 3544    z-score:   .959 p-value: .831196
 
           square size   avg. no.  parked   sample sigma
             100.            3528.500       22.938
            KSTEST for the above 10: p=  .612286

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THE MINIMUM DISTANCE TEST                       ::        
     :: It does this 100 times::   choose n=8000 random points in a   ::        
     :: square of side 10000.  Find d, the minimum distance between   ::        
     :: the (n^2-n)/2 pairs of points.  If the points are truly inde- ::        
     :: pendent uniform, then d^2, the square of the minimum distance ::        
     :: should be (very close to) exponentially distributed with mean ::        
     :: .995 .  Thus 1-exp(-d^2/.995) should be uniform on [0,1) and  ::        
     :: a KSTEST on the resulting 100 values serves as a test of uni- ::        
     :: formity for random points in the square. Test numbers=0 mod 5 ::        
     :: are printed but the KSTEST is based on the full set of 100    ::        
     :: random choices of 8000 points in the 10000x10000 square.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               This is the MINIMUM DISTANCE test
              for random integers in the file bin            
     Sample no.    d^2     avg     equiv uni            
           5     .2038    .3696     .185222
          10     .7077   1.0628     .508996
          15     .0657    .9672     .063893
          20     .7379   1.1554     .523630
          25    1.2549   1.0602     .716683
          30    2.3781   1.0814     .908375
          35     .0497   1.1078     .048714
          40     .4585   1.0758     .369207
          45    1.3910   1.0560     .752898
          50     .5917   1.0543     .448242
          55     .7414   1.0367     .525303
          60     .9748   1.0554     .624578
          65     .9595   1.0134     .618755
          70     .6041   1.0465     .455117
          75     .2301   1.0373     .206454
          80    1.2492   1.0347     .715057
          85    1.3217   1.0176     .735082
          90     .7874   1.0473     .546754
          95     .8309   1.0283     .566179
         100     .2231   1.0009     .200896
     MINIMUM DISTANCE TEST for bin            
          Result of KS test on 20 transformed mindist^2's:
                                  p-value= .314313

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ 

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::              THE 3DSPHERES TEST                               ::        
     :: Choose  4000 random points in a cube of edge 1000.  At each   ::        
     :: point, center a sphere large enough to reach the next closest ::        
     :: point. Then the volume of the smallest such sphere is (very   ::        
     :: close to) exponentially distributed with mean 120pi/3.  Thus  ::        
     :: the radius cubed is exponential with mean 30. (The mean is    ::        
     :: obtained by extensive simulation).  The 3DSPHERES test gener- ::        
     :: ates 4000 such spheres 20 times.  Each min radius cubed leads ::        
     :: to a uniform variable by means of 1-exp(-r^3/30.), then a     ::        
     ::  KSTEST is done on the 20 p-values.                           ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               The 3DSPHERES test for file bin            
 sample no:  1     r^3=  18.529     p-value= .46078
 sample no:  2     r^3=   4.531     p-value= .14017
 sample no:  3     r^3=  19.012     p-value= .46939
 sample no:  4     r^3=   5.791     p-value= .17553
 sample no:  5     r^3=  55.269     p-value= .84155
 sample no:  6     r^3=  52.740     p-value= .82761
 sample no:  7     r^3=  28.872     p-value= .61802
 sample no:  8     r^3=   2.688     p-value= .08572
 sample no:  9     r^3=  13.936     p-value= .37157
 sample no: 10     r^3=  16.887     p-value= .43044
 sample no: 11     r^3=  10.696     p-value= .29990
 sample no: 12     r^3=   9.190     p-value= .26387
 sample no: 13     r^3=   9.750     p-value= .27748
 sample no: 14     r^3=  46.300     p-value= .78633
 sample no: 15     r^3=   9.267     p-value= .26574
 sample no: 16     r^3=   7.099     p-value= .21071
 sample no: 17     r^3=  25.913     p-value= .57843
 sample no: 18     r^3=  20.705     p-value= .49851
 sample no: 19     r^3=  49.520     p-value= .80808
 sample no: 20     r^3=  20.150     p-value= .48915
  A KS test is applied to those 20 p-values.
---------------------------------------------------------
       3DSPHERES test for file bin                  p-value= .656609
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::      This is the SQEEZE test                                  ::        
     ::  Random integers are floated to get uniforms on [0,1). Start- ::        
     ::  ing with k=2^31=2147483647, the test finds j, the number of  ::        
     ::  iterations necessary to reduce k to 1, using the reduction   ::        
     ::  k=ceiling(k*U), with U provided by floating integers from    ::        
     ::  the file being tested.  Such j's are found 100,000 times,    ::        
     ::  then counts for the number of times j was <=6,7,...,47,>=48  ::        
     ::  are used to provide a chi-square test for cell frequencies.  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
            RESULTS OF SQUEEZE TEST FOR bin            
         Table of standardized frequency counts
     ( (obs-exp)/sqrt(exp) )^2
        for j taking values <=6,7,8,...,47,>=48:
     -.1      .1     -.6    -1.0    -1.7     -.1
     -.9    -2.8    -1.6    -1.3    -1.3    -3.4
    -1.2    -5.2    -2.5    -2.3     -.7    -1.1
     -.2      .0      .7     3.3     3.6     5.2
      .9     5.1     1.4     4.5     1.8     1.9
     3.1     2.5     1.9     2.5     1.5     2.8
     1.0     3.0     1.7     1.0    -1.3    -1.0
     2.7
           Chi-square with 42 degrees of freedom:239.732
              z-score= 21.574  p-value=1.000000
______________________________________________________________

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The  OVERLAPPING SUMS test                        ::        
     :: Integers are floated to get a sequence U(1),U(2),... of uni-  ::        
     :: form [0,1) variables.  Then overlapping sums,                 ::        
     ::   S(1)=U(1)+...+U(100), S2=U(2)+...+U(101),... are formed.    ::        
     :: The S's are virtually normal with a certain covariance mat-   ::        
     :: rix.  A linear transformation of the S's converts them to a   ::        
     :: sequence of independent standard normals, which are converted ::        
     :: to uniform variables for a KSTEST. The  p-values from ten     ::        
     :: KSTESTs are given still another KSTEST.                       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Test no.  1      p-value  .523058
                Test no.  2      p-value  .566230
                Test no.  3      p-value  .805030
                Test no.  4      p-value  .207118
                Test no.  5      p-value  .792476
                Test no.  6      p-value  .016917
                Test no.  7      p-value  .774307
                Test no.  8      p-value  .903685
                Test no.  9      p-value  .005727
                Test no. 10      p-value  .713601
   Results of the OSUM test for bin            
        KSTEST on the above 10 p-values:  .669902

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the RUNS test.  It counts runs up, and runs down, ::        
     :: in a sequence of uniform [0,1) variables, obtained by float-  ::        
     :: ing the 32-bit integers in the specified file. This example   ::        
     :: shows how runs are counted:  .123,.357,.789,.425,.224,.416,.95::        
     :: contains an up-run of length 3, a down-run of length 2 and an ::        
     :: up-run of (at least) 2, depending on the next values.  The    ::        
     :: covariance matrices for the runs-up and runs-down are well    ::        
     :: known, leading to chisquare tests for quadratic forms in the  ::        
     :: weak inverses of the covariance matrices.  Runs are counted   ::        
     :: for sequences of length 10,000.  This is done ten times. Then ::        
     :: repeated.                                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           The RUNS test for file bin            
     Up and down runs in a sample of 10000
_________________________________________________ 
                 Run test for bin            :
       runs up; ks test for 10 p's: .116152
     runs down; ks test for 10 p's: .309088
                 Run test for bin            :
       runs up; ks test for 10 p's: .465725
     runs down; ks test for 10 p's: .099442

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the CRAPS TEST. It plays 200,000 games of craps, finds::        
     :: the number of wins and the number of throws necessary to end  ::        
     :: each game.  The number of wins should be (very close to) a    ::        
     :: normal with mean 200000p and variance 200000p(1-p), with      ::        
     :: p=244/495.  Throws necessary to complete the game can vary    ::        
     :: from 1 to infinity, but counts for all>21 are lumped with 21. ::        
     :: A chi-square test is made on the no.-of-throws cell counts.   ::        
     :: Each 32-bit integer from the test file provides the value for ::        
     :: the throw of a die, by floating to [0,1), multiplying by 6    ::        
     :: and taking 1 plus the integer part of the result.             ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Results of craps test for bin            
  No. of wins:  Observed Expected
                                98989    98585.86
                  98989= No. of wins, z-score= 1.803 pvalue= .96431
   Analysis of Throws-per-Game:
 Chisq=  17.57 for 20 degrees of freedom, p=  .38452
               Throws Observed Expected  Chisq     Sum
                  1    67123    66666.7   3.124    3.124
                  2    37328    37654.3   2.828    5.952
                  3    26800    26954.7    .888    6.840
                  4    19280    19313.5    .058    6.898
                  5    13840    13851.4    .009    6.907
                  6     9855     9943.5    .788    7.696
                  7     7121     7145.0    .081    7.776
                  8     5214     5139.1   1.092    8.869
                  9     3746     3699.9    .575    9.444
                 10     2732     2666.3   1.619   11.063
                 11     1899     1923.3    .308   11.371
                 12     1386     1388.7    .005   11.376
                 13     1017     1003.7    .176   11.552
                 14      770      726.1   2.649   14.201
                 15      538      525.8    .281   14.483
                 16      362      381.2    .962   15.445
                 17      259      276.5   1.112   16.557
                 18      205      200.8    .087   16.644
                 19      138      146.0    .437   17.081
                 20       99      106.2    .490   17.571
                 21      288      287.1    .003   17.573
            SUMMARY  FOR bin            
                p-value for no. of wins: .964312
                p-value for throws/game: .384518

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

 Results of DIEHARD battery of tests sent to file t.txt          
