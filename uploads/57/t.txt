       NOTE: Most of the tests in DIEHARD return a p-value, which               
       should be uniform on [0,1) if the input file contains truly              
       independent random bits.   Those p-values are obtained by                
       p=F(X), where F is the assumed distribution of the sample                
       random variable X---often normal. But that assumed F is just             
       an asymptotic approximation, for which the fit will be worst             
       in the tails. Thus you should not be surprised with                      
       occasional p-values near 0 or 1, such as .0012 or .9983.                 
       When a bit stream really FAILS BIG, you will get p's of 0 or             
       1 to six or more places.  By all means, do not, as a                     
       Statistician might, think that a p < .025 or p> .975 means               
       that the RNG has "failed the test at the .05 level".  Such               
       p's happen among the hundreds that DIEHARD produces, even                
       with good RNG's.  So keep in mind that " p happens".                     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            This is the BIRTHDAY SPACINGS TEST                 ::        
     :: Choose m birthdays in a year of n days.  List the spacings    ::        
     :: between the birthdays.  If j is the number of values that     ::        
     :: occur more than once in that list, then j is asymptotically   ::        
     :: Poisson distributed with mean m^3/(4n).  Experience shows n   ::        
     :: must be quite large, say n>=2^18, for comparing the results   ::        
     :: to the Poisson distribution with that mean.  This test uses   ::        
     :: n=2^24 and m=2^9,  so that the underlying distribution for j  ::        
     :: is taken to be Poisson with lambda=2^27/(2^26)=2.  A sample   ::        
     :: of 500 j's is taken, and a chi-square goodness of fit test    ::        
     :: provides a p value.  The first test uses bits 1-24 (counting  ::        
     :: from the left) from integers in the specified file.           ::        
     ::   Then the file is closed and reopened. Next, bits 2-25 are   ::        
     :: used to provide birthdays, then 3-26 and so on to bits 9-32.  ::        
     :: Each set of bits provides a p-value, and the nine p-values    ::        
     :: provide a sample for a KSTEST.                                ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 BIRTHDAY SPACINGS TEST, M= 512 N=2**24 LAMBDA=  2.0000
           Results for bin            
                   For a sample of size 500:     mean   
           bin             using bits  1 to 24   1.956
  duplicate       number       number 
  spacings       observed     expected
        0          70.       67.668
        1         137.      135.335
        2         132.      135.335
        3          95.       90.224
        4          45.       45.112
        5          15.       18.045
  6 to INF          6.        8.282
 Chisquare with  6 d.o.f. =     1.58 p-value=  .045899
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  2 to 25   1.964
  duplicate       number       number 
  spacings       observed     expected
        0          81.       67.668
        1         137.      135.335
        2         129.      135.335
        3          76.       90.224
        4          47.       45.112
        5          15.       18.045
  6 to INF         15.        8.282
 Chisquare with  6 d.o.f. =    11.23 p-value=  .918441
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  3 to 26   1.892
  duplicate       number       number 
  spacings       observed     expected
        0          78.       67.668
        1         156.      135.335
        2         114.      135.335
        3          89.       90.224
        4          34.       45.112
        5          17.       18.045
  6 to INF         12.        8.282
 Chisquare with  6 d.o.f. =    12.58 p-value=  .949786
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  4 to 27   1.890
  duplicate       number       number 
  spacings       observed     expected
        0          81.       67.668
        1         138.      135.335
        2         122.      135.335
        3          99.       90.224
        4          40.       45.112
        5          16.       18.045
  6 to INF          4.        8.282
 Chisquare with  6 d.o.f. =     7.87 p-value=  .752346
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  5 to 28   2.000
  duplicate       number       number 
  spacings       observed     expected
        0          67.       67.668
        1         129.      135.335
        2         138.      135.335
        3          96.       90.224
        4          48.       45.112
        5          18.       18.045
  6 to INF          4.        8.282
 Chisquare with  6 d.o.f. =     3.12 p-value=  .206900
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  6 to 29   1.920
  duplicate       number       number 
  spacings       observed     expected
        0          63.       67.668
        1         153.      135.335
        2         134.      135.335
        3          89.       90.224
        4          39.       45.112
        5          17.       18.045
  6 to INF          5.        8.282
 Chisquare with  6 d.o.f. =     4.85 p-value=  .436343
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  7 to 30   1.856
  duplicate       number       number 
  spacings       observed     expected
        0          78.       67.668
        1         152.      135.335
        2         123.      135.335
        3          88.       90.224
        4          37.       45.112
        5          16.       18.045
  6 to INF          6.        8.282
 Chisquare with  6 d.o.f. =     7.13 p-value=  .690811
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  8 to 31   2.010
  duplicate       number       number 
  spacings       observed     expected
        0          69.       67.668
        1         125.      135.335
        2         148.      135.335
        3          85.       90.224
        4          47.       45.112
        5          17.       18.045
  6 to INF          9.        8.282
 Chisquare with  6 d.o.f. =     2.50 p-value=  .132082
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  9 to 32   2.002
  duplicate       number       number 
  spacings       observed     expected
        0          59.       67.668
        1         138.      135.335
        2         144.      135.335
        3          97.       90.224
        4          35.       45.112
        5          20.       18.045
  6 to INF          7.        8.282
 Chisquare with  6 d.o.f. =     4.90 p-value=  .443718
  :::::::::::::::::::::::::::::::::::::::::
   The 9 p-values were
        .045899   .918441   .949786   .752346   .206900
        .436343   .690811   .132082   .443718
  A KSTEST for the 9 p-values yields  .032507

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            THE OVERLAPPING 5-PERMUTATION TEST                 ::        
     :: This is the OPERM5 test.  It looks at a sequence of one mill- ::        
     :: ion 32-bit random integers.  Each set of five consecutive     ::        
     :: integers can be in one of 120 states, for the 5! possible or- ::        
     :: derings of five numbers.  Thus the 5th, 6th, 7th,...numbers   ::        
     :: each provide a state. As many thousands of state transitions  ::        
     :: are observed,  cumulative counts are made of the number of    ::        
     :: occurences of each state.  Then the quadratic form in the     ::        
     :: weak inverse of the 120x120 covariance matrix yields a test   ::        
     :: equivalent to the likelihood ratio test that the 120 cell     ::        
     :: counts came from the specified (asymptotically) normal dis-   ::        
     :: tribution with the specified 120x120 covariance matrix (with  ::        
     :: rank 99).  This version uses 1,000,000 integers, twice.       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           OPERM5 test for file bin            
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom=102.103; p-value= .604726
           OPERM5 test for file bin            
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom=109.721; p-value= .783281
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 31x31 matrices. The leftmost ::        
     :: 31 bits of 31 random integers from the test sequence are used ::        
     :: to form a 31x31 binary matrix over the field {0,1}. The rank  ::        
     :: is determined. That rank can be from 0 to 31, but ranks< 28   ::        
     :: are rare, and their counts are pooled with those for rank 28. ::        
     :: Ranks are found for 40,000 such random matrices and a chisqua-::        
     :: re test is performed on counts for ranks 31,30,29 and <=28.   ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for bin            
         Rank test for 31x31 binary matrices:
        rows from leftmost 31 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        28       232     211.4  2.003699    2.004
        29      5088    5134.0   .412337    2.416
        30     23102   23103.0   .000047    2.416
        31     11578   11551.5   .060681    2.477
  chisquare= 2.477 for 3 d. of f.; p-value= .578265
--------------------------------------------------------------
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 32x32 matrices. A random 32x ::        
     :: 32 binary matrix is formed, each row a 32-bit random integer. ::        
     :: The rank is determined. That rank can be from 0 to 32, ranks  ::        
     :: less than 29 are rare, and their counts are pooled with those ::        
     :: for rank 29.  Ranks are found for 40,000 such random matrices ::        
     :: and a chisquare test is performed on counts for ranks  32,31, ::        
     :: 30 and <=29.                                                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for bin            
         Rank test for 32x32 binary matrices:
        rows from leftmost 32 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        29       241     211.4  4.139164    4.139
        30      5292    5134.0  4.861845    9.001
        31     23077   23103.0   .029366    9.030
        32     11390   11551.5  2.258588   11.289
  chisquare=11.289 for 3 d. of f.; p-value= .990128
--------------------------------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 6x8 matrices.  From each of  ::        
     :: six random 32-bit integers from the generator under test, a   ::        
     :: specified byte is chosen, and the resulting six bytes form a  ::        
     :: 6x8 binary matrix whose rank is determined.  That rank can be ::        
     :: from 0 to 6, but ranks 0,1,2,3 are rare; their counts are     ::        
     :: pooled with those for rank 4. Ranks are found for 100,000     ::        
     :: random matrices, and a chi-square test is performed on        ::        
     :: counts for ranks 6,5 and <=4.                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
         Binary Rank Test for bin            
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  1 to  8
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          994       944.3       2.616       2.616
          r =5        21822     21743.9        .281       2.896
          r =6        77184     77311.8        .211       3.107
                        p=1-exp(-SUM/2)= .78854
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  2 to  9
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          970       944.3        .699        .699
          r =5        21974     21743.9       2.435       3.134
          r =6        77056     77311.8        .846       3.981
                        p=1-exp(-SUM/2)= .86336
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  3 to 10
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          985       944.3       1.754       1.754
          r =5        21725     21743.9        .016       1.771
          r =6        77290     77311.8        .006       1.777
                        p=1-exp(-SUM/2)= .58866
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  4 to 11
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          969       944.3        .646        .646
          r =5        21773     21743.9        .039        .685
          r =6        77258     77311.8        .037        .722
                        p=1-exp(-SUM/2)= .30316
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  5 to 12
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          972       944.3        .812        .812
          r =5        21751     21743.9        .002        .815
          r =6        77277     77311.8        .016        .830
                        p=1-exp(-SUM/2)= .33981
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  6 to 13
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          956       944.3        .145        .145
          r =5        21543     21743.9       1.856       2.001
          r =6        77501     77311.8        .463       2.464
                        p=1-exp(-SUM/2)= .70831
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  7 to 14
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          954       944.3        .100        .100
          r =5        21725     21743.9        .016        .116
          r =6        77321     77311.8        .001        .117
                        p=1-exp(-SUM/2)= .05689
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  8 to 15
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          943       944.3        .002        .002
          r =5        21899     21743.9       1.106       1.108
          r =6        77158     77311.8        .306       1.414
                        p=1-exp(-SUM/2)= .50690
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  9 to 16
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          905       944.3       1.636       1.636
          r =5        21720     21743.9        .026       1.662
          r =6        77375     77311.8        .052       1.714
                        p=1-exp(-SUM/2)= .57549
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 10 to 17
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          967       944.3        .546        .546
          r =5        21723     21743.9        .020        .566
          r =6        77310     77311.8        .000        .566
                        p=1-exp(-SUM/2)= .24639
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 11 to 18
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          910       944.3       1.246       1.246
          r =5        21803     21743.9        .161       1.407
          r =6        77287     77311.8        .008       1.415
                        p=1-exp(-SUM/2)= .50702
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 12 to 19
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          903       944.3       1.806       1.806
          r =5        21575     21743.9       1.312       3.118
          r =6        77522     77311.8        .571       3.690
                        p=1-exp(-SUM/2)= .84196
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 13 to 20
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          877       944.3       4.797       4.797
          r =5        21692     21743.9        .124       4.921
          r =6        77431     77311.8        .184       5.104
                        p=1-exp(-SUM/2)= .92209
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 14 to 21
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          976       944.3       1.064       1.064
          r =5        21730     21743.9        .009       1.073
          r =6        77294     77311.8        .004       1.077
                        p=1-exp(-SUM/2)= .41640
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 15 to 22
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          922       944.3        .527        .527
          r =5        21706     21743.9        .066        .593
          r =6        77372     77311.8        .047        .640
                        p=1-exp(-SUM/2)= .27371
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 16 to 23
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4         1016       944.3       5.444       5.444
          r =5        21694     21743.9        .115       5.558
          r =6        77290     77311.8        .006       5.565
                        p=1-exp(-SUM/2)= .93810
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 17 to 24
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          949       944.3        .023        .023
          r =5        21765     21743.9        .020        .044
          r =6        77286     77311.8        .009        .052
                        p=1-exp(-SUM/2)= .02589
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 18 to 25
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          927       944.3        .317        .317
          r =5        21443     21743.9       4.164       4.481
          r =6        77630     77311.8       1.310       5.791
                        p=1-exp(-SUM/2)= .94472
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 19 to 26
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          969       944.3        .646        .646
          r =5        21803     21743.9        .161        .807
          r =6        77228     77311.8        .091        .897
                        p=1-exp(-SUM/2)= .36157
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 20 to 27
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          944       944.3        .000        .000
          r =5        21538     21743.9       1.950       1.950
          r =6        77518     77311.8        .550       2.500
                        p=1-exp(-SUM/2)= .71346
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 21 to 28
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          896       944.3       2.471       2.471
          r =5        21620     21743.9        .706       3.177
          r =6        77484     77311.8        .384       3.560
                        p=1-exp(-SUM/2)= .83138
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 22 to 29
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          905       944.3       1.636       1.636
          r =5        21739     21743.9        .001       1.637
          r =6        77356     77311.8        .025       1.662
                        p=1-exp(-SUM/2)= .56440
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 23 to 30
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          922       944.3        .527        .527
          r =5        21851     21743.9        .528       1.054
          r =6        77227     77311.8        .093       1.147
                        p=1-exp(-SUM/2)= .43651
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 24 to 31
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          906       944.3       1.554       1.554
          r =5        21882     21743.9        .877       2.431
          r =6        77212     77311.8        .129       2.559
                        p=1-exp(-SUM/2)= .72189
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 25 to 32
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          911       944.3       1.174       1.174
          r =5        21747     21743.9        .000       1.175
          r =6        77342     77311.8        .012       1.187
                        p=1-exp(-SUM/2)= .44750
   TEST SUMMARY, 25 tests on 100,000 random 6x8 matrices
 These should be 25 uniform [0,1] random variables:
     .788541     .863355     .588659     .303160     .339812
     .708309     .056886     .506904     .575487     .246388
     .507018     .841963     .922085     .416396     .273710
     .938104     .025893     .944717     .361569     .713463
     .831375     .564401     .436514     .721887     .447505
   brank test summary for bin            
       The KS test for those 25 supposed UNI's yields
                    KS p-value= .501499

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::                   THE BITSTREAM TEST                          ::        
     :: The file under test is viewed as a stream of bits. Call them  ::        
     :: b1,b2,... .  Consider an alphabet with two "letters", 0 and 1 ::        
     :: and think of the stream of bits as a succession of 20-letter  ::        
     :: "words", overlapping.  Thus the first word is b1b2...b20, the ::        
     :: second is b2b3...b21, and so on.  The bitstream test counts   ::        
     :: the number of missing 20-letter (20-bit) words in a string of ::        
     :: 2^21 overlapping 20-letter words.  There are 2^20 possible 20 ::        
     :: letter words.  For a truly random string of 2^21+19 bits, the ::        
     :: number of missing words j should be (very close to) normally  ::        
     :: distributed with mean 141,909 and sigma 428.  Thus            ::        
     ::  (j-141909)/428 should be a standard normal variate (z score) ::        
     :: that leads to a uniform [0,1) p value.  The test is repeated  ::        
     :: twenty times.                                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 THE OVERLAPPING 20-tuples BITSTREAM  TEST, 20 BITS PER WORD, N words
   This test uses N=2^21 and samples the bitstream 20 times.
  No. missing words should average  141909. with sigma=428.
---------------------------------------------------------
 tst no  1:  149420 missing words,   17.55 sigmas from mean, p-value=1.00000
 tst no  2:  142668 missing words,    1.77 sigmas from mean, p-value= .96185
 tst no  3:  141521 missing words,    -.91 sigmas from mean, p-value= .18212
 tst no  4:  141429 missing words,   -1.12 sigmas from mean, p-value= .13088
 tst no  5:  142062 missing words,     .36 sigmas from mean, p-value= .63935
 tst no  6:  141944 missing words,     .08 sigmas from mean, p-value= .53228
 tst no  7:  141632 missing words,    -.65 sigmas from mean, p-value= .25850
 tst no  8:  141818 missing words,    -.21 sigmas from mean, p-value= .41551
 tst no  9:  142878 missing words,    2.26 sigmas from mean, p-value= .98819
 tst no 10:  141772 missing words,    -.32 sigmas from mean, p-value= .37416
 tst no 11:  141742 missing words,    -.39 sigmas from mean, p-value= .34792
 tst no 12:  142013 missing words,     .24 sigmas from mean, p-value= .59570
 tst no 13:  142627 missing words,    1.68 sigmas from mean, p-value= .95321
 tst no 14:  141240 missing words,   -1.56 sigmas from mean, p-value= .05893
 tst no 15:  141643 missing words,    -.62 sigmas from mean, p-value= .26688
 tst no 16:  142197 missing words,     .67 sigmas from mean, p-value= .74925
 tst no 17:  141869 missing words,    -.09 sigmas from mean, p-value= .46247
 tst no 18:  141551 missing words,    -.84 sigmas from mean, p-value= .20124
 tst no 19:  142187 missing words,     .65 sigmas from mean, p-value= .74176
 tst no 20:  142698 missing words,    1.84 sigmas from mean, p-value= .96731

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The tests OPSO, OQSO and DNA                      ::        
     ::         OPSO means Overlapping-Pairs-Sparse-Occupancy         ::        
     :: The OPSO test considers 2-letter words from an alphabet of    ::        
     :: 1024 letters.  Each letter is determined by a specified ten   ::        
     :: bits from a 32-bit integer in the sequence to be tested. OPSO ::        
     :: generates  2^21 (overlapping) 2-letter words  (from 2^21+1    ::        
     :: "keystrokes")  and counts the number of missing words---that  ::        
     :: is 2-letter words which do not appear in the entire sequence. ::        
     :: That count should be very close to normally distributed with  ::        
     :: mean 141,909, sigma 290. Thus (missingwrds-141909)/290 should ::        
     :: be a standard normal variable. The OPSO test takes 32 bits at ::        
     :: a time from the test file and uses a designated set of ten    ::        
     :: consecutive bits. It then restarts the file for the next de-  ::        
     :: signated 10 bits, and so on.                                  ::        
     ::                                                               ::        
     ::     OQSO means Overlapping-Quadruples-Sparse-Occupancy        ::        
     ::   The test OQSO is similar, except that it considers 4-letter ::        
     :: words from an alphabet of 32 letters, each letter determined  ::        
     :: by a designated string of 5 consecutive bits from the test    ::        
     :: file, elements of which are assumed 32-bit random integers.   ::        
     :: The mean number of missing words in a sequence of 2^21 four-  ::        
     :: letter words,  (2^21+3 "keystrokes"), is again 141909, with   ::        
     :: sigma = 295.  The mean is based on theory; sigma comes from   ::        
     :: extensive simulation.                                         ::        
     ::                                                               ::        
     ::    The DNA test considers an alphabet of 4 letters::  C,G,A,T,::        
     :: determined by two designated bits in the sequence of random   ::        
     :: integers being tested.  It considers 10-letter words, so that ::        
     :: as in OPSO and OQSO, there are 2^20 possible words, and the   ::        
     :: mean number of missing words from a string of 2^21  (over-    ::        
     :: lapping)  10-letter  words (2^21+9 "keystrokes") is 141909.   ::        
     :: The standard deviation sigma=339 was determined as for OQSO   ::        
     :: by simulation.  (Sigma for OPSO, 290, is the true value (to   ::        
     :: three places), not determined by simulation.                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 OPSO test for generator bin            
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OPSO for bin             using bits 23 to 32        151874 34.361 1.0000
    OPSO for bin             using bits 22 to 31        151507 33.095 1.0000
    OPSO for bin             using bits 21 to 30        151232 32.147 1.0000
    OPSO for bin             using bits 20 to 29        151396 32.713 1.0000
    OPSO for bin             using bits 19 to 28        151350 32.554 1.0000
    OPSO for bin             using bits 18 to 27        151617 33.475 1.0000
    OPSO for bin             using bits 17 to 26        151424 32.809 1.0000
    OPSO for bin             using bits 16 to 25        151409 32.757 1.0000
    OPSO for bin             using bits 15 to 24        151108 31.720 1.0000
    OPSO for bin             using bits 14 to 23        151241 32.178 1.0000
    OPSO for bin             using bits 13 to 22        151101 31.695 1.0000
    OPSO for bin             using bits 12 to 21        151462 32.940 1.0000
    OPSO for bin             using bits 11 to 20        150658 30.168 1.0000
    OPSO for bin             using bits 10 to 19        150810 30.692 1.0000
    OPSO for bin             using bits  9 to 18        151045 31.502 1.0000
    OPSO for bin             using bits  8 to 17        151058 31.547 1.0000
    OPSO for bin             using bits  7 to 16        151088 31.651 1.0000
    OPSO for bin             using bits  6 to 15        151812 34.147 1.0000
    OPSO for bin             using bits  5 to 14        151282 32.320 1.0000
    OPSO for bin             using bits  4 to 13        151068 31.582 1.0000
    OPSO for bin             using bits  3 to 12        150776 30.575 1.0000
    OPSO for bin             using bits  2 to 11        151300 32.382 1.0000
    OPSO for bin             using bits  1 to 10        151224 32.120 1.0000
 OQSO test for generator bin            
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OQSO for bin             using bits 28 to 32        146479 15.490 1.0000
    OQSO for bin             using bits 27 to 31        145875 13.443 1.0000
    OQSO for bin             using bits 26 to 30        146182 14.484 1.0000
    OQSO for bin             using bits 25 to 29        145939 13.660 1.0000
    OQSO for bin             using bits 24 to 28        146577 15.823 1.0000
    OQSO for bin             using bits 23 to 27        146219 14.609 1.0000
    OQSO for bin             using bits 22 to 26        145571 12.412 1.0000
    OQSO for bin             using bits 21 to 25        145704 12.863 1.0000
    OQSO for bin             using bits 20 to 24        145620 12.579 1.0000
    OQSO for bin             using bits 19 to 23        145534 12.287 1.0000
    OQSO for bin             using bits 18 to 22        145863 13.402 1.0000
    OQSO for bin             using bits 17 to 21        145897 13.518 1.0000
    OQSO for bin             using bits 16 to 20        145369 11.728 1.0000
    OQSO for bin             using bits 15 to 19        146027 13.958 1.0000
    OQSO for bin             using bits 14 to 18        145890 13.494 1.0000
    OQSO for bin             using bits 13 to 17        145876 13.446 1.0000
    OQSO for bin             using bits 12 to 16        145747 13.009 1.0000
    OQSO for bin             using bits 11 to 15        145935 13.646 1.0000
    OQSO for bin             using bits 10 to 14        145873 13.436 1.0000
    OQSO for bin             using bits  9 to 13        145546 12.328 1.0000
    OQSO for bin             using bits  8 to 12        145436 11.955 1.0000
    OQSO for bin             using bits  7 to 11        145450 12.002 1.0000
    OQSO for bin             using bits  6 to 10        145950 13.697 1.0000
    OQSO for bin             using bits  5 to  9        145158 11.012 1.0000
    OQSO for bin             using bits  4 to  8        145565 12.392 1.0000
    OQSO for bin             using bits  3 to  7        145622 12.585 1.0000
    OQSO for bin             using bits  2 to  6        145470 12.070 1.0000
    OQSO for bin             using bits  1 to  5        145501 12.175 1.0000
  DNA test for generator bin            
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
     DNA for bin             using bits 31 to 32        142331  1.244  .8932
     DNA for bin             using bits 30 to 31        141831  -.231  .4086
     DNA for bin             using bits 29 to 30        142697  2.324  .9899
     DNA for bin             using bits 28 to 29        142341  1.273  .8986
     DNA for bin             using bits 27 to 28        141907  -.007  .4973
     DNA for bin             using bits 26 to 27        142699  2.329  .9901
     DNA for bin             using bits 25 to 26        141805  -.308  .3791
     DNA for bin             using bits 24 to 25        142463  1.633  .9488
     DNA for bin             using bits 23 to 24        142909  2.949  .9984
     DNA for bin             using bits 22 to 23        142036   .374  .6457
     DNA for bin             using bits 21 to 22        142259  1.031  .8488
     DNA for bin             using bits 20 to 21        141842  -.199  .4213
     DNA for bin             using bits 19 to 20        142188   .822  .7945
     DNA for bin             using bits 18 to 19        142128   .645  .7406
     DNA for bin             using bits 17 to 18        142053   .424  .6641
     DNA for bin             using bits 16 to 17        142806  2.645  .9959
     DNA for bin             using bits 15 to 16        142788  2.592  .9952
     DNA for bin             using bits 14 to 15        142345  1.285  .9006
     DNA for bin             using bits 13 to 14        141514 -1.166  .1218
     DNA for bin             using bits 12 to 13        142129   .648  .7415
     DNA for bin             using bits 11 to 12        142477  1.675  .9530
     DNA for bin             using bits 10 to 11        141907  -.007  .4973
     DNA for bin             using bits  9 to 10        141963   .158  .5629
     DNA for bin             using bits  8 to  9        141777  -.390  .3481
     DNA for bin             using bits  7 to  8        141865  -.131  .4480
     DNA for bin             using bits  6 to  7        142345  1.285  .9006
     DNA for bin             using bits  5 to  6        142946  3.058  .9989
     DNA for bin             using bits  4 to  5        142025   .341  .6335
     DNA for bin             using bits  3 to  4        142684  2.285  .9888
     DNA for bin             using bits  2 to  3        142446  1.583  .9433
     DNA for bin             using bits  1 to  2        141758  -.446  .3277

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST on a stream of bytes.      ::        
     :: Consider the file under test as a stream of bytes (four per   ::        
     :: 32 bit integer).  Each byte can contain from 0 to 8 1's,      ::        
     :: with probabilities 1,8,28,56,70,56,28,8,1 over 256.  Now let  ::        
     :: the stream of bytes provide a string of overlapping  5-letter ::        
     :: words, each "letter" taking values A,B,C,D,E. The letters are ::        
     :: determined by the number of 1's in a byte::  0,1,or 2 yield A,::        
     :: 3 yields B, 4 yields C, 5 yields D and 6,7 or 8 yield E. Thus ::        
     :: we have a monkey at a typewriter hitting five keys with vari- ::        
     :: ous probabilities (37,56,70,56,37 over 256).  There are 5^5   ::        
     :: possible 5-letter words, and from a string of 256,000 (over-  ::        
     :: lapping) 5-letter words, counts are made on the frequencies   ::        
     :: for each word.   The quadratic form in the weak inverse of    ::        
     :: the covariance matrix of the cell counts provides a chisquare ::        
     :: test::  Q5-Q4, the difference of the naive Pearson sums of    ::        
     :: (OBS-EXP)^2/EXP on counts for 5- and 4-letter cell counts.    ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
   Test results for bin            
 Chi-square with 5^5-5^4=2500 d.of f. for sample size:2560000
                               chisquare  equiv normal  p-value
  Results fo COUNT-THE-1's in successive bytes:
 byte stream for bin              2544.20       .625      .734064
 byte stream for bin              2562.84       .889      .812906

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST for specific bytes.        ::        
     :: Consider the file under test as a stream of 32-bit integers.  ::        
     :: From each integer, a specific byte is chosen , say the left-  ::        
     :: most::  bits 1 to 8. Each byte can contain from 0 to 8 1's,   ::        
     :: with probabilitie 1,8,28,56,70,56,28,8,1 over 256.  Now let   ::        
     :: the specified bytes from successive integers provide a string ::        
     :: of (overlapping) 5-letter words, each "letter" taking values  ::        
     :: A,B,C,D,E. The letters are determined  by the number of 1's,  ::        
     :: in that byte::  0,1,or 2 ---> A, 3 ---> B, 4 ---> C, 5 ---> D,::        
     :: and  6,7 or 8 ---> E.  Thus we have a monkey at a typewriter  ::        
     :: hitting five keys with with various probabilities::  37,56,70,::        
     :: 56,37 over 256. There are 5^5 possible 5-letter words, and    ::        
     :: from a string of 256,000 (overlapping) 5-letter words, counts ::        
     :: are made on the frequencies for each word. The quadratic form ::        
     :: in the weak inverse of the covariance matrix of the cell      ::        
     :: counts provides a chisquare test::  Q5-Q4, the difference of  ::        
     :: the naive Pearson  sums of (OBS-EXP)^2/EXP on counts for 5-   ::        
     :: and 4-letter cell counts.                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 Chi-square with 5^5-5^4=2500 d.of f. for sample size: 256000
                      chisquare  equiv normal  p value
  Results for COUNT-THE-1's in specified bytes:
           bits  1 to  8  2494.92      -.072      .471355
           bits  2 to  9  2601.70      1.438      .924824
           bits  3 to 10  2569.39       .981      .836776
           bits  4 to 11  2507.47       .106      .542089
           bits  5 to 12  2520.15       .285      .612177
           bits  6 to 13  2636.05      1.924      .972828
           bits  7 to 14  2541.14       .582      .719628
           bits  8 to 15  2388.73     -1.574      .057793
           bits  9 to 16  2623.29      1.744      .959380
           bits 10 to 17  2492.56      -.105      .458125
           bits 11 to 18  2510.22       .145      .557449
           bits 12 to 19  2572.04      1.019      .845859
           bits 13 to 20  2513.55       .192      .575981
           bits 14 to 21  2517.04       .241      .595227
           bits 15 to 22  2611.54      1.577      .942649
           bits 16 to 23  2461.84      -.540      .294716
           bits 17 to 24  2469.70      -.429      .334120
           bits 18 to 25  2594.00      1.329      .908132
           bits 19 to 26  2493.55      -.091      .463656
           bits 20 to 27  2549.85       .705      .759599
           bits 21 to 28  2558.74       .831      .796927
           bits 22 to 29  2386.57     -1.604      .054336
           bits 23 to 30  2409.29     -1.283      .099777
           bits 24 to 31  2417.26     -1.170      .120986
           bits 25 to 32  2403.32     -1.367      .085769

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THIS IS A PARKING LOT TEST                      ::        
     :: In a square of side 100, randomly "park" a car---a circle of  ::        
     :: radius 1.   Then try to park a 2nd, a 3rd, and so on, each    ::        
     :: time parking "by ear".  That is, if an attempt to park a car  ::        
     :: causes a crash with one already parked, try again at a new    ::        
     :: random location. (To avoid path problems, consider parking    ::        
     :: helicopters rather than cars.)   Each attempt leads to either ::        
     :: a crash or a success, the latter followed by an increment to  ::        
     :: the list of cars already parked. If we plot n:  the number of ::        
     :: attempts, versus k::  the number successfully parked, we get a::        
     :: curve that should be similar to those provided by a perfect   ::        
     :: random number generator.  Theory for the behavior of such a   ::        
     :: random curve seems beyond reach, and as graphics displays are ::        
     :: not available for this battery of tests, a simple characteriz ::        
     :: ation of the random experiment is used: k, the number of cars ::        
     :: successfully parked after n=12,000 attempts. Simulation shows ::        
     :: that k should average 3523 with sigma 21.9 and is very close  ::        
     :: to normally distributed.  Thus (k-3523)/21.9 should be a st-  ::        
     :: andard normal variable, which, converted to a uniform varia-  ::        
     :: ble, provides input to a KSTEST based on a sample of 10.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           CDPARK: result of ten tests on file bin            
            Of 12,000 tries, the average no. of successes
                 should be 3523 with sigma=21.9
            Successes: 3531    z-score:   .365 p-value: .642555
            Successes: 3555    z-score:  1.461 p-value: .928018
            Successes: 3558    z-score:  1.598 p-value: .944998
            Successes: 3488    z-score: -1.598 p-value: .055002
            Successes: 3507    z-score:  -.731 p-value: .232514
            Successes: 3475    z-score: -2.192 p-value: .014198
            Successes: 3533    z-score:   .457 p-value: .676028
            Successes: 3505    z-score:  -.822 p-value: .205562
            Successes: 3510    z-score:  -.594 p-value: .276387
            Successes: 3501    z-score: -1.005 p-value: .157553
 
           square size   avg. no.  parked   sample sigma
             100.            3516.300       25.921
            KSTEST for the above 10: p=  .680472

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THE MINIMUM DISTANCE TEST                       ::        
     :: It does this 100 times::   choose n=8000 random points in a   ::        
     :: square of side 10000.  Find d, the minimum distance between   ::        
     :: the (n^2-n)/2 pairs of points.  If the points are truly inde- ::        
     :: pendent uniform, then d^2, the square of the minimum distance ::        
     :: should be (very close to) exponentially distributed with mean ::        
     :: .995 .  Thus 1-exp(-d^2/.995) should be uniform on [0,1) and  ::        
     :: a KSTEST on the resulting 100 values serves as a test of uni- ::        
     :: formity for random points in the square. Test numbers=0 mod 5 ::        
     :: are printed but the KSTEST is based on the full set of 100    ::        
     :: random choices of 8000 points in the 10000x10000 square.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               This is the MINIMUM DISTANCE test
              for random integers in the file bin            
     Sample no.    d^2     avg     equiv uni            
           5     .3084    .7623     .266515
          10     .3778   1.1769     .315899
          15     .1523   1.0845     .141910
          20     .4866   1.1333     .386786
          25     .3139   1.1086     .270584
          30    1.4070   1.0231     .756851
          35     .0746    .9314     .072230
          40     .1199    .8574     .113567
          45     .8045    .8600     .554500
          50     .1301    .9391     .122588
          55     .8614    .9303     .579246
          60     .4006    .9550     .331442
          65     .3700    .9172     .310575
          70     .5132    .9049     .402987
          75    2.8782    .9292     .944570
          80     .6241    .9432     .465949
          85    1.1882    .9980     .697037
          90    6.8590   1.0926     .998986
          95     .3957   1.0987     .328112
         100    1.9566   1.0882     .860038
     MINIMUM DISTANCE TEST for bin            
          Result of KS test on 20 transformed mindist^2's:
                                  p-value= .301002

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ 

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::              THE 3DSPHERES TEST                               ::        
     :: Choose  4000 random points in a cube of edge 1000.  At each   ::        
     :: point, center a sphere large enough to reach the next closest ::        
     :: point. Then the volume of the smallest such sphere is (very   ::        
     :: close to) exponentially distributed with mean 120pi/3.  Thus  ::        
     :: the radius cubed is exponential with mean 30. (The mean is    ::        
     :: obtained by extensive simulation).  The 3DSPHERES test gener- ::        
     :: ates 4000 such spheres 20 times.  Each min radius cubed leads ::        
     :: to a uniform variable by means of 1-exp(-r^3/30.), then a     ::        
     ::  KSTEST is done on the 20 p-values.                           ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               The 3DSPHERES test for file bin            
 sample no:  1     r^3=  17.918     p-value= .44969
 sample no:  2     r^3=   2.394     p-value= .07670
 sample no:  3     r^3=  77.012     p-value= .92324
 sample no:  4     r^3=  82.282     p-value= .93560
 sample no:  5     r^3=  36.302     p-value= .70182
 sample no:  6     r^3=  22.005     p-value= .51978
 sample no:  7     r^3=   9.126     p-value= .26229
 sample no:  8     r^3= 116.963     p-value= .97973
 sample no:  9     r^3=  82.891     p-value= .93690
 sample no: 10     r^3=  20.419     p-value= .49371
 sample no: 11     r^3=    .409     p-value= .01354
 sample no: 12     r^3=  72.960     p-value= .91214
 sample no: 13     r^3=   4.922     p-value= .15131
 sample no: 14     r^3=   1.983     p-value= .06397
 sample no: 15     r^3=   1.298     p-value= .04233
 sample no: 16     r^3=   5.453     p-value= .16620
 sample no: 17     r^3=  92.403     p-value= .95405
 sample no: 18     r^3=  33.180     p-value= .66912
 sample no: 19     r^3=  20.073     p-value= .48784
 sample no: 20     r^3=  24.054     p-value= .55148
  A KS test is applied to those 20 p-values.
---------------------------------------------------------
       3DSPHERES test for file bin                  p-value= .704389
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::      This is the SQEEZE test                                  ::        
     ::  Random integers are floated to get uniforms on [0,1). Start- ::        
     ::  ing with k=2^31=2147483647, the test finds j, the number of  ::        
     ::  iterations necessary to reduce k to 1, using the reduction   ::        
     ::  k=ceiling(k*U), with U provided by floating integers from    ::        
     ::  the file being tested.  Such j's are found 100,000 times,    ::        
     ::  then counts for the number of times j was <=6,7,...,47,>=48  ::        
     ::  are used to provide a chi-square test for cell frequencies.  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
            RESULTS OF SQUEEZE TEST FOR bin            
         Table of standardized frequency counts
     ( (obs-exp)/sqrt(exp) )^2
        for j taking values <=6,7,8,...,47,>=48:
     1.3     -.3      .6      .8      .9     1.5
     -.2     -.4     1.2     1.9     -.2    -1.1
      .3      .4    -1.1     -.7      .7     -.2
      .7     -.1     -.5      .9      .3     -.1
    -1.3     -.9      .4     -.4     1.5    -1.5
    -1.7    -1.1    -1.1     2.7      .3      .6
     1.0    -1.0     1.3      .4      .9     1.0
    -1.1
           Chi-square with 42 degrees of freedom: 43.590
              z-score=   .173  p-value= .596412
______________________________________________________________

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The  OVERLAPPING SUMS test                        ::        
     :: Integers are floated to get a sequence U(1),U(2),... of uni-  ::        
     :: form [0,1) variables.  Then overlapping sums,                 ::        
     ::   S(1)=U(1)+...+U(100), S2=U(2)+...+U(101),... are formed.    ::        
     :: The S's are virtually normal with a certain covariance mat-   ::        
     :: rix.  A linear transformation of the S's converts them to a   ::        
     :: sequence of independent standard normals, which are converted ::        
     :: to uniform variables for a KSTEST. The  p-values from ten     ::        
     :: KSTESTs are given still another KSTEST.                       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Test no.  1      p-value  .979035
                Test no.  2      p-value  .177201
                Test no.  3      p-value  .811176
                Test no.  4      p-value  .769478
                Test no.  5      p-value  .431054
                Test no.  6      p-value  .927133
                Test no.  7      p-value  .454619
                Test no.  8      p-value  .988660
                Test no.  9      p-value  .805663
                Test no. 10      p-value  .751077
   Results of the OSUM test for bin            
        KSTEST on the above 10 p-values:  .977173

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the RUNS test.  It counts runs up, and runs down, ::        
     :: in a sequence of uniform [0,1) variables, obtained by float-  ::        
     :: ing the 32-bit integers in the specified file. This example   ::        
     :: shows how runs are counted:  .123,.357,.789,.425,.224,.416,.95::        
     :: contains an up-run of length 3, a down-run of length 2 and an ::        
     :: up-run of (at least) 2, depending on the next values.  The    ::        
     :: covariance matrices for the runs-up and runs-down are well    ::        
     :: known, leading to chisquare tests for quadratic forms in the  ::        
     :: weak inverses of the covariance matrices.  Runs are counted   ::        
     :: for sequences of length 10,000.  This is done ten times. Then ::        
     :: repeated.                                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           The RUNS test for file bin            
     Up and down runs in a sample of 10000
_________________________________________________ 
                 Run test for bin            :
       runs up; ks test for 10 p's: .798379
     runs down; ks test for 10 p's: .248976
                 Run test for bin            :
       runs up; ks test for 10 p's: .031774
     runs down; ks test for 10 p's: .176974

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the CRAPS TEST. It plays 200,000 games of craps, finds::        
     :: the number of wins and the number of throws necessary to end  ::        
     :: each game.  The number of wins should be (very close to) a    ::        
     :: normal with mean 200000p and variance 200000p(1-p), with      ::        
     :: p=244/495.  Throws necessary to complete the game can vary    ::        
     :: from 1 to infinity, but counts for all>21 are lumped with 21. ::        
     :: A chi-square test is made on the no.-of-throws cell counts.   ::        
     :: Each 32-bit integer from the test file provides the value for ::        
     :: the throw of a die, by floating to [0,1), multiplying by 6    ::        
     :: and taking 1 plus the integer part of the result.             ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Results of craps test for bin            
  No. of wins:  Observed Expected
                                98765    98585.86
                  98765= No. of wins, z-score=  .801 pvalue= .78850
   Analysis of Throws-per-Game:
 Chisq=  21.55 for 20 degrees of freedom, p=  .63465
               Throws Observed Expected  Chisq     Sum
                  1    67044    66666.7   2.136    2.136
                  2    37311    37654.3   3.130    5.266
                  3    26948    26954.7    .002    5.268
                  4    19238    19313.5    .295    5.563
                  5    13981    13851.4   1.212    6.775
                  6     9827     9943.5   1.366    8.141
                  7     7154     7145.0    .011    8.152
                  8     5288     5139.1   4.316   12.468
                  9     3701     3699.9    .000   12.468
                 10     2643     2666.3    .204   12.672
                 11     1878     1923.3   1.068   13.740
                 12     1327     1388.7   2.745   16.485
                 13      983     1003.7    .428   16.912
                 14      742      726.1    .346   17.259
                 15      527      525.8    .003   17.261
                 16      376      381.2    .070   17.331
                 17      275      276.5    .009   17.340
                 18      213      200.8    .738   18.077
                 19      140      146.0    .245   18.322
                 20       94      106.2   1.405   19.727
                 21      310      287.1   1.824   21.551
            SUMMARY  FOR bin            
                p-value for no. of wins: .788498
                p-value for throws/game: .634646

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

 Results of DIEHARD battery of tests sent to file t.txt          
