       NOTE: Most of the tests in DIEHARD return a p-value, which               
       should be uniform on [0,1) if the input file contains truly              
       independent random bits.   Those p-values are obtained by                
       p=F(X), where F is the assumed distribution of the sample                
       random variable X---often normal. But that assumed F is just             
       an asymptotic approximation, for which the fit will be worst             
       in the tails. Thus you should not be surprised with                      
       occasional p-values near 0 or 1, such as .0012 or .9983.                 
       When a bit stream really FAILS BIG, you will get p's of 0 or             
       1 to six or more places.  By all means, do not, as a                     
       Statistician might, think that a p < .025 or p> .975 means               
       that the RNG has "failed the test at the .05 level".  Such               
       p's happen among the hundreds that DIEHARD produces, even                
       with good RNG's.  So keep in mind that " p happens".                     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            This is the BIRTHDAY SPACINGS TEST                 ::        
     :: Choose m birthdays in a year of n days.  List the spacings    ::        
     :: between the birthdays.  If j is the number of values that     ::        
     :: occur more than once in that list, then j is asymptotically   ::        
     :: Poisson distributed with mean m^3/(4n).  Experience shows n   ::        
     :: must be quite large, say n>=2^18, for comparing the results   ::        
     :: to the Poisson distribution with that mean.  This test uses   ::        
     :: n=2^24 and m=2^9,  so that the underlying distribution for j  ::        
     :: is taken to be Poisson with lambda=2^27/(2^26)=2.  A sample   ::        
     :: of 500 j's is taken, and a chi-square goodness of fit test    ::        
     :: provides a p value.  The first test uses bits 1-24 (counting  ::        
     :: from the left) from integers in the specified file.           ::        
     ::   Then the file is closed and reopened. Next, bits 2-25 are   ::        
     :: used to provide birthdays, then 3-26 and so on to bits 9-32.  ::        
     :: Each set of bits provides a p-value, and the nine p-values    ::        
     :: provide a sample for a KSTEST.                                ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 BIRTHDAY SPACINGS TEST, M= 512 N=2**24 LAMBDA=  2.0000
           Results for bin            
                   For a sample of size 500:     mean   
           bin             using bits  1 to 24   2.144
  duplicate       number       number 
  spacings       observed     expected
        0          51.       67.668
        1         128.      135.335
        2         146.      135.335
        3          87.       90.224
        4          59.       45.112
        5          21.       18.045
  6 to INF          8.        8.282
 Chisquare with  6 d.o.f. =    10.23 p-value=  .884624
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  2 to 25   2.078
  duplicate       number       number 
  spacings       observed     expected
        0          59.       67.668
        1         153.      135.335
        2         122.      135.335
        3          78.       90.224
        4          47.       45.112
        5          28.       18.045
  6 to INF         13.        8.282
 Chisquare with  6 d.o.f. =    14.65 p-value=  .976798
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  3 to 26   2.078
  duplicate       number       number 
  spacings       observed     expected
        0          72.       67.668
        1         132.      135.335
        2         123.      135.335
        3          87.       90.224
        4          44.       45.112
        5          32.       18.045
  6 to INF         10.        8.282
 Chisquare with  6 d.o.f. =    12.78 p-value=  .953258
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  4 to 27   2.168
  duplicate       number       number 
  spacings       observed     expected
        0          52.       67.668
        1         135.      135.335
        2         134.      135.335
        3          86.       90.224
        4          60.       45.112
        5          20.       18.045
  6 to INF         13.        8.282
 Chisquare with  6 d.o.f. =    11.65 p-value=  .929822
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  5 to 28   2.208
  duplicate       number       number 
  spacings       observed     expected
        0          57.       67.668
        1         113.      135.335
        2         151.      135.335
        3          92.       90.224
        4          49.       45.112
        5          19.       18.045
  6 to INF         19.        8.282
 Chisquare with  6 d.o.f. =    21.47 p-value=  .998492
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  6 to 29   2.124
  duplicate       number       number 
  spacings       observed     expected
        0          59.       67.668
        1         117.      135.335
        2         150.      135.335
        3          97.       90.224
        4          44.       45.112
        5          23.       18.045
  6 to INF         10.        8.282
 Chisquare with  6 d.o.f. =     7.44 p-value=  .717683
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  7 to 30   2.152
  duplicate       number       number 
  spacings       observed     expected
        0          66.       67.668
        1         120.      135.335
        2         129.      135.335
        3          98.       90.224
        4          48.       45.112
        5          23.       18.045
  6 to INF         16.        8.282
 Chisquare with  6 d.o.f. =    11.48 p-value=  .925485
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  8 to 31   2.122
  duplicate       number       number 
  spacings       observed     expected
        0          57.       67.668
        1         136.      135.335
        2         142.      135.335
        3          75.       90.224
        4          53.       45.112
        5          22.       18.045
  6 to INF         15.        8.282
 Chisquare with  6 d.o.f. =    12.28 p-value=  .943953
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  9 to 32   2.110
  duplicate       number       number 
  spacings       observed     expected
        0          57.       67.668
        1         135.      135.335
        2         131.      135.335
        3          94.       90.224
        4          51.       45.112
        5          23.       18.045
  6 to INF          9.        8.282
 Chisquare with  6 d.o.f. =     4.17 p-value=  .346471
  :::::::::::::::::::::::::::::::::::::::::
   The 9 p-values were
        .884624   .976798   .953258   .929822   .998492
        .717683   .925485   .943953   .346471
  A KSTEST for the 9 p-values yields  .999974

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            THE OVERLAPPING 5-PERMUTATION TEST                 ::        
     :: This is the OPERM5 test.  It looks at a sequence of one mill- ::        
     :: ion 32-bit random integers.  Each set of five consecutive     ::        
     :: integers can be in one of 120 states, for the 5! possible or- ::        
     :: derings of five numbers.  Thus the 5th, 6th, 7th,...numbers   ::        
     :: each provide a state. As many thousands of state transitions  ::        
     :: are observed,  cumulative counts are made of the number of    ::        
     :: occurences of each state.  Then the quadratic form in the     ::        
     :: weak inverse of the 120x120 covariance matrix yields a test   ::        
     :: equivalent to the likelihood ratio test that the 120 cell     ::        
     :: counts came from the specified (asymptotically) normal dis-   ::        
     :: tribution with the specified 120x120 covariance matrix (with  ::        
     :: rank 99).  This version uses 1,000,000 integers, twice.       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           OPERM5 test for file bin            
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom=126.384; p-value= .966921
           OPERM5 test for file bin            
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom=129.956; p-value= .979871
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 31x31 matrices. The leftmost ::        
     :: 31 bits of 31 random integers from the test sequence are used ::        
     :: to form a 31x31 binary matrix over the field {0,1}. The rank  ::        
     :: is determined. That rank can be from 0 to 31, but ranks< 28   ::        
     :: are rare, and their counts are pooled with those for rank 28. ::        
     :: Ranks are found for 40,000 such random matrices and a chisqua-::        
     :: re test is performed on counts for ranks 31,30,29 and <=28.   ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for bin            
         Rank test for 31x31 binary matrices:
        rows from leftmost 31 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        28       188     211.4  2.593929    2.594
        29      5206    5134.0  1.009449    3.603
        30     23007   23103.0   .399298    4.003
        31     11599   11551.5   .195120    4.198
  chisquare= 4.198 for 3 d. of f.; p-value= .779356
--------------------------------------------------------------
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 32x32 matrices. A random 32x ::        
     :: 32 binary matrix is formed, each row a 32-bit random integer. ::        
     :: The rank is determined. That rank can be from 0 to 32, ranks  ::        
     :: less than 29 are rare, and their counts are pooled with those ::        
     :: for rank 29.  Ranks are found for 40,000 such random matrices ::        
     :: and a chisquare test is performed on counts for ranks  32,31, ::        
     :: 30 and <=29.                                                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for bin            
         Rank test for 32x32 binary matrices:
        rows from leftmost 32 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        29       212     211.4   .001602     .002
        30      5118    5134.0   .049927     .052
        31     23182   23103.0   .269817     .321
        32     11488   11551.5   .349335     .671
  chisquare=  .671 for 3 d. of f.; p-value= .326330
--------------------------------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 6x8 matrices.  From each of  ::        
     :: six random 32-bit integers from the generator under test, a   ::        
     :: specified byte is chosen, and the resulting six bytes form a  ::        
     :: 6x8 binary matrix whose rank is determined.  That rank can be ::        
     :: from 0 to 6, but ranks 0,1,2,3 are rare; their counts are     ::        
     :: pooled with those for rank 4. Ranks are found for 100,000     ::        
     :: random matrices, and a chi-square test is performed on        ::        
     :: counts for ranks 6,5 and <=4.                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
         Binary Rank Test for bin            
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  1 to  8
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          884       944.3       3.851       3.851
          r =5        21654     21743.9        .372       4.222
          r =6        77462     77311.8        .292       4.514
                        p=1-exp(-SUM/2)= .89535
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  2 to  9
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          939       944.3        .030        .030
          r =5        21610     21743.9        .825        .854
          r =6        77451     77311.8        .251       1.105
                        p=1-exp(-SUM/2)= .42447
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  3 to 10
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4         1030       944.3       7.777       7.777
          r =5        22100     21743.9       5.832      13.609
          r =6        76870     77311.8       2.525      16.134
                        p=1-exp(-SUM/2)= .99969
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  4 to 11
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4         1063       944.3      14.920      14.920
          r =5        22512     21743.9      27.133      42.053
          r =6        76425     77311.8      10.172      52.226
                        p=1-exp(-SUM/2)=1.00000
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  5 to 12
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          923       944.3        .481        .481
          r =5        21889     21743.9        .968       1.449
          r =6        77188     77311.8        .198       1.647
                        p=1-exp(-SUM/2)= .56111
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  6 to 13
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          909       944.3       1.320       1.320
          r =5        21848     21743.9        .498       1.818
          r =6        77243     77311.8        .061       1.879
                        p=1-exp(-SUM/2)= .60924
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  7 to 14
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          993       944.3       2.511       2.511
          r =5        22213     21743.9      10.120      12.632
          r =6        76794     77311.8       3.468      16.100
                        p=1-exp(-SUM/2)= .99968
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  8 to 15
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4         1051       944.3      12.056      12.056
          r =5        22418     21743.9      20.898      32.954
          r =6        76531     77311.8       7.886      40.840
                        p=1-exp(-SUM/2)=1.00000
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  9 to 16
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          972       944.3        .812        .812
          r =5        21575     21743.9       1.312       2.124
          r =6        77453     77311.8        .258       2.382
                        p=1-exp(-SUM/2)= .69613
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 10 to 17
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          901       944.3       1.986       1.986
          r =5        21688     21743.9        .144       2.129
          r =6        77411     77311.8        .127       2.257
                        p=1-exp(-SUM/2)= .67641
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 11 to 18
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          938       944.3        .042        .042
          r =5        21979     21743.9       2.542       2.584
          r =6        77083     77311.8        .677       3.261
                        p=1-exp(-SUM/2)= .80418
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 12 to 19
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4         1045       944.3      10.738      10.738
          r =5        22410     21743.9      20.405      31.144
          r =6        76545     77311.8       7.605      38.749
                        p=1-exp(-SUM/2)=1.00000
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 13 to 20
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          929       944.3        .248        .248
          r =5        21777     21743.9        .050        .298
          r =6        77294     77311.8        .004        .302
                        p=1-exp(-SUM/2)= .14033
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 14 to 21
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          990       944.3       2.212       2.212
          r =5        21528     21743.9       2.144       4.355
          r =6        77482     77311.8        .375       4.730
                        p=1-exp(-SUM/2)= .90605
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 15 to 22
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          987       944.3       1.931       1.931
          r =5        21754     21743.9        .005       1.935
          r =6        77259     77311.8        .036       1.971
                        p=1-exp(-SUM/2)= .62684
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 16 to 23
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4         1071       944.3      16.999      16.999
          r =5        22266     21743.9      12.536      29.536
          r =6        76663     77311.8       5.445      34.981
                        p=1-exp(-SUM/2)=1.00000
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 17 to 24
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          945       944.3        .001        .001
          r =5        21739     21743.9        .001        .002
          r =6        77316     77311.8        .000        .002
                        p=1-exp(-SUM/2)= .00092
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 18 to 25
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          926       944.3        .355        .355
          r =5        21688     21743.9        .144        .498
          r =6        77386     77311.8        .071        .570
                        p=1-exp(-SUM/2)= .24784
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 19 to 26
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          936       944.3        .073        .073
          r =5        21795     21743.9        .120        .193
          r =6        77269     77311.8        .024        .217
                        p=1-exp(-SUM/2)= .10271
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 20 to 27
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          954       944.3        .100        .100
          r =5        22154     21743.9       7.735       7.834
          r =6        76892     77311.8       2.280      10.114
                        p=1-exp(-SUM/2)= .99363
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 21 to 28
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          942       944.3        .006        .006
          r =5        21688     21743.9        .144        .149
          r =6        77370     77311.8        .044        .193
                        p=1-exp(-SUM/2)= .09205
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 22 to 29
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          885       944.3       3.724       3.724
          r =5        21320     21743.9       8.264      11.988
          r =6        77795     77311.8       3.020      15.008
                        p=1-exp(-SUM/2)= .99945
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 23 to 30
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          844       944.3      10.654      10.654
          r =5        21586     21743.9       1.147      11.800
          r =6        77570     77311.8        .862      12.663
                        p=1-exp(-SUM/2)= .99822
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 24 to 31
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          927       944.3        .317        .317
          r =5        21839     21743.9        .416        .733
          r =6        77234     77311.8        .078        .811
                        p=1-exp(-SUM/2)= .33343
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 25 to 32
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          957       944.3        .171        .171
          r =5        21500     21743.9       2.736       2.907
          r =6        77543     77311.8        .691       3.598
                        p=1-exp(-SUM/2)= .83453
   TEST SUMMARY, 25 tests on 100,000 random 6x8 matrices
 These should be 25 uniform [0,1] random variables:
     .895347     .424474     .999686    1.000000     .561114
     .609235     .999681    1.000000     .696130     .676414
     .804182    1.000000     .140335     .906048     .626837
    1.000000     .000924     .247839     .102715     .993635
     .092047     .999449     .998220     .333430     .834533
   brank test summary for bin            
       The KS test for those 25 supposed UNI's yields
                    KS p-value=1.000000

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::                   THE BITSTREAM TEST                          ::        
     :: The file under test is viewed as a stream of bits. Call them  ::        
     :: b1,b2,... .  Consider an alphabet with two "letters", 0 and 1 ::        
     :: and think of the stream of bits as a succession of 20-letter  ::        
     :: "words", overlapping.  Thus the first word is b1b2...b20, the ::        
     :: second is b2b3...b21, and so on.  The bitstream test counts   ::        
     :: the number of missing 20-letter (20-bit) words in a string of ::        
     :: 2^21 overlapping 20-letter words.  There are 2^20 possible 20 ::        
     :: letter words.  For a truly random string of 2^21+19 bits, the ::        
     :: number of missing words j should be (very close to) normally  ::        
     :: distributed with mean 141,909 and sigma 428.  Thus            ::        
     ::  (j-141909)/428 should be a standard normal variate (z score) ::        
     :: that leads to a uniform [0,1) p value.  The test is repeated  ::        
     :: twenty times.                                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 THE OVERLAPPING 20-tuples BITSTREAM  TEST, 20 BITS PER WORD, N words
   This test uses N=2^21 and samples the bitstream 20 times.
  No. missing words should average  141909. with sigma=428.
---------------------------------------------------------
 tst no  1:  161428 missing words,   45.60 sigmas from mean, p-value=1.00000
 tst no  2:  161367 missing words,   45.46 sigmas from mean, p-value=1.00000
 tst no  3:  161926 missing words,   46.77 sigmas from mean, p-value=1.00000
 tst no  4:  160695 missing words,   43.89 sigmas from mean, p-value=1.00000
 tst no  5:  161202 missing words,   45.08 sigmas from mean, p-value=1.00000
 tst no  6:  160308 missing words,   42.99 sigmas from mean, p-value=1.00000
 tst no  7:  161278 missing words,   45.25 sigmas from mean, p-value=1.00000
 tst no  8:  160336 missing words,   43.05 sigmas from mean, p-value=1.00000
 tst no  9:  160953 missing words,   44.49 sigmas from mean, p-value=1.00000
 tst no 10:  160057 missing words,   42.40 sigmas from mean, p-value=1.00000
 tst no 11:  161248 missing words,   45.18 sigmas from mean, p-value=1.00000
 tst no 12:  161759 missing words,   46.38 sigmas from mean, p-value=1.00000
 tst no 13:  161143 missing words,   44.94 sigmas from mean, p-value=1.00000
 tst no 14:  160782 missing words,   44.10 sigmas from mean, p-value=1.00000
 tst no 15:  161909 missing words,   46.73 sigmas from mean, p-value=1.00000
 tst no 16:  161315 missing words,   45.34 sigmas from mean, p-value=1.00000
 tst no 17:  161132 missing words,   44.91 sigmas from mean, p-value=1.00000
 tst no 18:  160331 missing words,   43.04 sigmas from mean, p-value=1.00000
 tst no 19:  161109 missing words,   44.86 sigmas from mean, p-value=1.00000
 tst no 20:  162534 missing words,   48.19 sigmas from mean, p-value=1.00000

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The tests OPSO, OQSO and DNA                      ::        
     ::         OPSO means Overlapping-Pairs-Sparse-Occupancy         ::        
     :: The OPSO test considers 2-letter words from an alphabet of    ::        
     :: 1024 letters.  Each letter is determined by a specified ten   ::        
     :: bits from a 32-bit integer in the sequence to be tested. OPSO ::        
     :: generates  2^21 (overlapping) 2-letter words  (from 2^21+1    ::        
     :: "keystrokes")  and counts the number of missing words---that  ::        
     :: is 2-letter words which do not appear in the entire sequence. ::        
     :: That count should be very close to normally distributed with  ::        
     :: mean 141,909, sigma 290. Thus (missingwrds-141909)/290 should ::        
     :: be a standard normal variable. The OPSO test takes 32 bits at ::        
     :: a time from the test file and uses a designated set of ten    ::        
     :: consecutive bits. It then restarts the file for the next de-  ::        
     :: signated 10 bits, and so on.                                  ::        
     ::                                                               ::        
     ::     OQSO means Overlapping-Quadruples-Sparse-Occupancy        ::        
     ::   The test OQSO is similar, except that it considers 4-letter ::        
     :: words from an alphabet of 32 letters, each letter determined  ::        
     :: by a designated string of 5 consecutive bits from the test    ::        
     :: file, elements of which are assumed 32-bit random integers.   ::        
     :: The mean number of missing words in a sequence of 2^21 four-  ::        
     :: letter words,  (2^21+3 "keystrokes"), is again 141909, with   ::        
     :: sigma = 295.  The mean is based on theory; sigma comes from   ::        
     :: extensive simulation.                                         ::        
     ::                                                               ::        
     ::    The DNA test considers an alphabet of 4 letters::  C,G,A,T,::        
     :: determined by two designated bits in the sequence of random   ::        
     :: integers being tested.  It considers 10-letter words, so that ::        
     :: as in OPSO and OQSO, there are 2^20 possible words, and the   ::        
     :: mean number of missing words from a string of 2^21  (over-    ::        
     :: lapping)  10-letter  words (2^21+9 "keystrokes") is 141909.   ::        
     :: The standard deviation sigma=339 was determined as for OQSO   ::        
     :: by simulation.  (Sigma for OPSO, 290, is the true value (to   ::        
     :: three places), not determined by simulation.                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 OPSO test for generator bin            
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OPSO for bin             using bits 23 to 32        167848 89.444 1.0000
    OPSO for bin             using bits 22 to 31        172143104.254 1.0000
    OPSO for bin             using bits 21 to 30        179585129.916 1.0000
    OPSO for bin             using bits 20 to 29        179627130.061 1.0000
    OPSO for bin             using bits 19 to 28        184358146.375 1.0000
    OPSO for bin             using bits 18 to 27        191241170.109 1.0000
    OPSO for bin             using bits 17 to 26        201066203.989 1.0000
    OPSO for bin             using bits 16 to 25        201829206.620 1.0000
    OPSO for bin             using bits 15 to 24        205766220.195 1.0000
    OPSO for bin             using bits 14 to 23        212059241.895 1.0000
    OPSO for bin             using bits 13 to 22        223582281.630 1.0000
    OPSO for bin             using bits 12 to 21        222116276.575 1.0000
    OPSO for bin             using bits 11 to 20        224747285.647 1.0000
    OPSO for bin             using bits 10 to 19        228248297.720 1.0000
    OPSO for bin             using bits  9 to 18        240416339.678 1.0000
    OPSO for bin             using bits  8 to 17        235681323.351 1.0000
    OPSO for bin             using bits  7 to 16        235854323.947 1.0000
    OPSO for bin             using bits  6 to 15        237185328.537 1.0000
    OPSO for bin             using bits  5 to 14        249715371.744 1.0000
    OPSO for bin             using bits  4 to 13        243125349.020 1.0000
    OPSO for bin             using bits  3 to 12        240155338.778 1.0000
    OPSO for bin             using bits  2 to 11        239253335.668 1.0000
    OPSO for bin             using bits  1 to 10        249979372.654 1.0000
 OQSO test for generator bin            
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OQSO for bin             using bits 28 to 32        158786 57.209 1.0000
    OQSO for bin             using bits 27 to 31        160250 62.172 1.0000
    OQSO for bin             using bits 26 to 30        163915 74.595 1.0000
    OQSO for bin             using bits 25 to 29        169069 92.067 1.0000
    OQSO for bin             using bits 24 to 28        168581 90.412 1.0000
    OQSO for bin             using bits 23 to 27        169987 95.179 1.0000
    OQSO for bin             using bits 22 to 26        180063129.334 1.0000
    OQSO for bin             using bits 21 to 25        190880166.002 1.0000
    OQSO for bin             using bits 20 to 24        189257160.501 1.0000
    OQSO for bin             using bits 19 to 23        189098159.962 1.0000
    OQSO for bin             using bits 18 to 22        205175214.460 1.0000
    OQSO for bin             using bits 17 to 21        220763267.301 1.0000
    OQSO for bin             using bits 16 to 20        214316245.446 1.0000
    OQSO for bin             using bits 15 to 19        209927230.568 1.0000
    OQSO for bin             using bits 14 to 18        229206295.921 1.0000
    OQSO for bin             using bits 13 to 17        244203346.758 1.0000
    OQSO for bin             using bits 12 to 16        231817304.772 1.0000
    OQSO for bin             using bits 11 to 15        222048271.657 1.0000
    OQSO for bin             using bits 10 to 14        243569344.609 1.0000
    OQSO for bin             using bits  9 to 13        256937389.924 1.0000
    OQSO for bin             using bits  8 to 12        240607334.568 1.0000
    OQSO for bin             using bits  7 to 11        228025291.918 1.0000
    OQSO for bin             using bits  6 to 10        249380364.307 1.0000
    OQSO for bin             using bits  5 to  9        261152404.212 1.0000
    OQSO for bin             using bits  4 to  8        242600341.324 1.0000
    OQSO for bin             using bits  3 to  7        230514300.355 1.0000
    OQSO for bin             using bits  2 to  6        249188363.657 1.0000
    OQSO for bin             using bits  1 to  5        257063390.351 1.0000
  DNA test for generator bin            
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
     DNA for bin             using bits 31 to 32        157008 44.539 1.0000
     DNA for bin             using bits 30 to 31        157213 45.144 1.0000
     DNA for bin             using bits 29 to 30        158173 47.975 1.0000
     DNA for bin             using bits 28 to 29        158171 47.970 1.0000
     DNA for bin             using bits 27 to 28        159560 52.067 1.0000
     DNA for bin             using bits 26 to 27        161761 58.560 1.0000
     DNA for bin             using bits 25 to 26        170219 83.509 1.0000
     DNA for bin             using bits 24 to 25        164716 67.276 1.0000
     DNA for bin             using bits 23 to 24        168036 77.070 1.0000
     DNA for bin             using bits 22 to 23        173073 91.928 1.0000
     DNA for bin             using bits 21 to 22        195425157.863 1.0000
     DNA for bin             using bits 20 to 21        178956109.282 1.0000
     DNA for bin             using bits 19 to 20        180991115.285 1.0000
     DNA for bin             using bits 18 to 19        188610137.760 1.0000
     DNA for bin             using bits 17 to 18        226963250.896 1.0000
     DNA for bin             using bits 16 to 17        194664155.618 1.0000
     DNA for bin             using bits 15 to 16        191880147.406 1.0000
     DNA for bin             using bits 14 to 15        199770170.680 1.0000
     DNA for bin             using bits 13 to 14        250416320.079 1.0000
     DNA for bin             using bits 12 to 13        206315189.987 1.0000
     DNA for bin             using bits 11 to 12        196901162.217 1.0000
     DNA for bin             using bits 10 to 11        205491187.557 1.0000
     DNA for bin             using bits  9 to 10        263067357.397 1.0000
     DNA for bin             using bits  8 to  9        211600205.577 1.0000
     DNA for bin             using bits  7 to  8        199338169.406 1.0000
     DNA for bin             using bits  6 to  7        207700194.073 1.0000
     DNA for bin             using bits  5 to  6        268000371.949 1.0000
     DNA for bin             using bits  4 to  5        215544217.211 1.0000
     DNA for bin             using bits  3 to  4        200382172.486 1.0000
     DNA for bin             using bits  2 to  3        201522175.849 1.0000
     DNA for bin             using bits  1 to  2        248484314.380 1.0000

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST on a stream of bytes.      ::        
     :: Consider the file under test as a stream of bytes (four per   ::        
     :: 32 bit integer).  Each byte can contain from 0 to 8 1's,      ::        
     :: with probabilities 1,8,28,56,70,56,28,8,1 over 256.  Now let  ::        
     :: the stream of bytes provide a string of overlapping  5-letter ::        
     :: words, each "letter" taking values A,B,C,D,E. The letters are ::        
     :: determined by the number of 1's in a byte::  0,1,or 2 yield A,::        
     :: 3 yields B, 4 yields C, 5 yields D and 6,7 or 8 yield E. Thus ::        
     :: we have a monkey at a typewriter hitting five keys with vari- ::        
     :: ous probabilities (37,56,70,56,37 over 256).  There are 5^5   ::        
     :: possible 5-letter words, and from a string of 256,000 (over-  ::        
     :: lapping) 5-letter words, counts are made on the frequencies   ::        
     :: for each word.   The quadratic form in the weak inverse of    ::        
     :: the covariance matrix of the cell counts provides a chisquare ::        
     :: test::  Q5-Q4, the difference of the naive Pearson sums of    ::        
     :: (OBS-EXP)^2/EXP on counts for 5- and 4-letter cell counts.    ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
   Test results for bin            
 Chi-square with 5^5-5^4=2500 d.of f. for sample size:2560000
                               chisquare  equiv normal  p-value
  Results fo COUNT-THE-1's in successive bytes:
 byte stream for bin             53741.52    724.664     1.000000
 byte stream for bin             53711.91    724.246     1.000000

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST for specific bytes.        ::        
     :: Consider the file under test as a stream of 32-bit integers.  ::        
     :: From each integer, a specific byte is chosen , say the left-  ::        
     :: most::  bits 1 to 8. Each byte can contain from 0 to 8 1's,   ::        
     :: with probabilitie 1,8,28,56,70,56,28,8,1 over 256.  Now let   ::        
     :: the specified bytes from successive integers provide a string ::        
     :: of (overlapping) 5-letter words, each "letter" taking values  ::        
     :: A,B,C,D,E. The letters are determined  by the number of 1's,  ::        
     :: in that byte::  0,1,or 2 ---> A, 3 ---> B, 4 ---> C, 5 ---> D,::        
     :: and  6,7 or 8 ---> E.  Thus we have a monkey at a typewriter  ::        
     :: hitting five keys with with various probabilities::  37,56,70,::        
     :: 56,37 over 256. There are 5^5 possible 5-letter words, and    ::        
     :: from a string of 256,000 (overlapping) 5-letter words, counts ::        
     :: are made on the frequencies for each word. The quadratic form ::        
     :: in the weak inverse of the covariance matrix of the cell      ::        
     :: counts provides a chisquare test::  Q5-Q4, the difference of  ::        
     :: the naive Pearson  sums of (OBS-EXP)^2/EXP on counts for 5-   ::        
     :: and 4-letter cell counts.                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 Chi-square with 5^5-5^4=2500 d.of f. for sample size: 256000
                      chisquare  equiv normal  p value
  Results for COUNT-THE-1's in specified bytes:
           bits  1 to  8 12704.88    144.319     1.000000
           bits  2 to  9 13168.16    150.871     1.000000
           bits  3 to 10 13431.05    154.588     1.000000
           bits  4 to 11 14636.77    171.640     1.000000
           bits  5 to 12 14798.38    173.925     1.000000
           bits  6 to 13 13416.16    154.378     1.000000
           bits  7 to 14 13169.42    150.888     1.000000
           bits  8 to 15 14109.43    164.182     1.000000
           bits  9 to 16 14126.95    164.430     1.000000
           bits 10 to 17 12880.08    146.796     1.000000
           bits 11 to 18 11834.03    132.003     1.000000
           bits 12 to 19 12596.24    142.782     1.000000
           bits 13 to 20 12827.74    146.056     1.000000
           bits 14 to 21 10753.92    116.728     1.000000
           bits 15 to 22  9363.33     97.062     1.000000
           bits 16 to 23  9645.65    101.055     1.000000
           bits 17 to 24  9834.95    103.732     1.000000
           bits 18 to 25  8019.24     78.054     1.000000
           bits 19 to 26  6598.32     57.959     1.000000
           bits 20 to 27  6549.78     57.273     1.000000
           bits 21 to 28  7182.14     66.215     1.000000
           bits 22 to 29  5956.17     48.878     1.000000
           bits 23 to 30  5257.71     39.000     1.000000
           bits 24 to 31  5251.09     38.906     1.000000
           bits 25 to 32  4793.81     32.439     1.000000

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THIS IS A PARKING LOT TEST                      ::        
     :: In a square of side 100, randomly "park" a car---a circle of  ::        
     :: radius 1.   Then try to park a 2nd, a 3rd, and so on, each    ::        
     :: time parking "by ear".  That is, if an attempt to park a car  ::        
     :: causes a crash with one already parked, try again at a new    ::        
     :: random location. (To avoid path problems, consider parking    ::        
     :: helicopters rather than cars.)   Each attempt leads to either ::        
     :: a crash or a success, the latter followed by an increment to  ::        
     :: the list of cars already parked. If we plot n:  the number of ::        
     :: attempts, versus k::  the number successfully parked, we get a::        
     :: curve that should be similar to those provided by a perfect   ::        
     :: random number generator.  Theory for the behavior of such a   ::        
     :: random curve seems beyond reach, and as graphics displays are ::        
     :: not available for this battery of tests, a simple characteriz ::        
     :: ation of the random experiment is used: k, the number of cars ::        
     :: successfully parked after n=12,000 attempts. Simulation shows ::        
     :: that k should average 3523 with sigma 21.9 and is very close  ::        
     :: to normally distributed.  Thus (k-3523)/21.9 should be a st-  ::        
     :: andard normal variable, which, converted to a uniform varia-  ::        
     :: ble, provides input to a KSTEST based on a sample of 10.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           CDPARK: result of ten tests on file bin            
            Of 12,000 tries, the average no. of successes
                 should be 3523 with sigma=21.9
            Successes: 3391    z-score: -6.027 p-value: .000000
            Successes: 3338    z-score: -8.447 p-value: .000000
            Successes: 3367    z-score: -7.123 p-value: .000000
            Successes: 3365    z-score: -7.215 p-value: .000000
            Successes: 3342    z-score: -8.265 p-value: .000000
            Successes: 3340    z-score: -8.356 p-value: .000000
            Successes: 3395    z-score: -5.845 p-value: .000000
            Successes: 3391    z-score: -6.027 p-value: .000000
            Successes: 3358    z-score: -7.534 p-value: .000000
            Successes: 3381    z-score: -6.484 p-value: .000000
 
           square size   avg. no.  parked   sample sigma
             100.            3366.800       20.999
            KSTEST for the above 10: p= 1.000000

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THE MINIMUM DISTANCE TEST                       ::        
     :: It does this 100 times::   choose n=8000 random points in a   ::        
     :: square of side 10000.  Find d, the minimum distance between   ::        
     :: the (n^2-n)/2 pairs of points.  If the points are truly inde- ::        
     :: pendent uniform, then d^2, the square of the minimum distance ::        
     :: should be (very close to) exponentially distributed with mean ::        
     :: .995 .  Thus 1-exp(-d^2/.995) should be uniform on [0,1) and  ::        
     :: a KSTEST on the resulting 100 values serves as a test of uni- ::        
     :: formity for random points in the square. Test numbers=0 mod 5 ::        
     :: are printed but the KSTEST is based on the full set of 100    ::        
     :: random choices of 8000 points in the 10000x10000 square.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               This is the MINIMUM DISTANCE test
              for random integers in the file bin            
     Sample no.    d^2     avg     equiv uni            
           5     .6764    .2715     .493263
          10     .2185    .2894     .197189
          15     .1962    .2776     .178973
          20     .6239    .3167     .465849
          25     .0202    .2877     .020143
          30     .4093    .3247     .337216
          35     .0958    .3012     .091780
          40     .3712    .2932     .311357
          45     .3204    .3182     .275276
          50     .0940    .3298     .090103
          55     .0115    .3396     .011479
          60     .5198    .3497     .406913
          65     .1148    .3633     .108961
          70     .0058    .3520     .005764
          75     .0461    .3507     .045319
          80     .0072    .3527     .007180
          85     .0643    .3440     .062542
          90     .0444    .3346     .043674
          95     .4092    .3366     .337196
         100     .0007    .3351     .000703
     MINIMUM DISTANCE TEST for bin            
          Result of KS test on 20 transformed mindist^2's:
                                  p-value=1.000000

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ 

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::              THE 3DSPHERES TEST                               ::        
     :: Choose  4000 random points in a cube of edge 1000.  At each   ::        
     :: point, center a sphere large enough to reach the next closest ::        
     :: point. Then the volume of the smallest such sphere is (very   ::        
     :: close to) exponentially distributed with mean 120pi/3.  Thus  ::        
     :: the radius cubed is exponential with mean 30. (The mean is    ::        
     :: obtained by extensive simulation).  The 3DSPHERES test gener- ::        
     :: ates 4000 such spheres 20 times.  Each min radius cubed leads ::        
     :: to a uniform variable by means of 1-exp(-r^3/30.), then a     ::        
     ::  KSTEST is done on the 20 p-values.                           ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               The 3DSPHERES test for file bin            
 sample no:  1     r^3=  78.601     p-value= .92720
 sample no:  2     r^3=  55.287     p-value= .84164
 sample no:  3     r^3=  12.306     p-value= .33648
 sample no:  4     r^3=  12.906     p-value= .34963
 sample no:  5     r^3=  16.987     p-value= .43234
 sample no:  6     r^3=  97.851     p-value= .96168
 sample no:  7     r^3=  32.299     p-value= .65926
 sample no:  8     r^3=   1.457     p-value= .04741
 sample no:  9     r^3=  17.879     p-value= .44896
 sample no: 10     r^3=  48.526     p-value= .80162
 sample no: 11     r^3=   6.283     p-value= .18896
 sample no: 12     r^3=  17.482     p-value= .44164
 sample no: 13     r^3=  23.141     p-value= .53762
 sample no: 14     r^3=  10.774     p-value= .30171
 sample no: 15     r^3=   1.118     p-value= .03657
 sample no: 16     r^3=   7.582     p-value= .22333
 sample no: 17     r^3=  19.607     p-value= .47981
 sample no: 18     r^3=   2.464     p-value= .07885
 sample no: 19     r^3=   9.846     p-value= .27978
 sample no: 20     r^3=  15.458     p-value= .40266
  A KS test is applied to those 20 p-values.
---------------------------------------------------------
       3DSPHERES test for file bin                  p-value= .489206
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::      This is the SQEEZE test                                  ::        
     ::  Random integers are floated to get uniforms on [0,1). Start- ::        
     ::  ing with k=2^31=2147483647, the test finds j, the number of  ::        
     ::  iterations necessary to reduce k to 1, using the reduction   ::        
     ::  k=ceiling(k*U), with U provided by floating integers from    ::        
     ::  the file being tested.  Such j's are found 100,000 times,    ::        
     ::  then counts for the number of times j was <=6,7,...,47,>=48  ::        
     ::  are used to provide a chi-square test for cell frequencies.  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
            RESULTS OF SQUEEZE TEST FOR bin            
         Table of standardized frequency counts
     ( (obs-exp)/sqrt(exp) )^2
        for j taking values <=6,7,8,...,47,>=48:
     -.1     1.8    -1.6      .5    -3.1    -4.3
    -6.3    -7.1    -8.6   -10.9   -12.0   -14.2
   -14.6   -13.0    -8.5    -9.9    -7.8    -3.2
     -.9     4.5     7.1     8.0    12.8    16.3
    17.5    16.9    13.5    15.7    15.7    13.4
    12.1    11.7     8.4     7.6     8.6     4.8
     6.2     1.8     1.7     2.1     1.6      .0
     -.1
           Chi-square with 42 degrees of freedom:*******
              z-score=415.992  p-value=1.000000
______________________________________________________________

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The  OVERLAPPING SUMS test                        ::        
     :: Integers are floated to get a sequence U(1),U(2),... of uni-  ::        
     :: form [0,1) variables.  Then overlapping sums,                 ::        
     ::   S(1)=U(1)+...+U(100), S2=U(2)+...+U(101),... are formed.    ::        
     :: The S's are virtually normal with a certain covariance mat-   ::        
     :: rix.  A linear transformation of the S's converts them to a   ::        
     :: sequence of independent standard normals, which are converted ::        
     :: to uniform variables for a KSTEST. The  p-values from ten     ::        
     :: KSTESTs are given still another KSTEST.                       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Test no.  1      p-value  .461053
                Test no.  2      p-value  .981282
                Test no.  3      p-value  .986796
                Test no.  4      p-value  .314190
                Test no.  5      p-value  .929499
                Test no.  6      p-value  .164608
                Test no.  7      p-value  .933594
                Test no.  8      p-value  .992167
                Test no.  9      p-value  .687454
                Test no. 10      p-value  .995821
   Results of the OSUM test for bin            
        KSTEST on the above 10 p-values:  .999708

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the RUNS test.  It counts runs up, and runs down, ::        
     :: in a sequence of uniform [0,1) variables, obtained by float-  ::        
     :: ing the 32-bit integers in the specified file. This example   ::        
     :: shows how runs are counted:  .123,.357,.789,.425,.224,.416,.95::        
     :: contains an up-run of length 3, a down-run of length 2 and an ::        
     :: up-run of (at least) 2, depending on the next values.  The    ::        
     :: covariance matrices for the runs-up and runs-down are well    ::        
     :: known, leading to chisquare tests for quadratic forms in the  ::        
     :: weak inverses of the covariance matrices.  Runs are counted   ::        
     :: for sequences of length 10,000.  This is done ten times. Then ::        
     :: repeated.                                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           The RUNS test for file bin            
     Up and down runs in a sample of 10000
_________________________________________________ 
                 Run test for bin            :
       runs up; ks test for 10 p's: .663315
     runs down; ks test for 10 p's: .684237
                 Run test for bin            :
       runs up; ks test for 10 p's: .728055
     runs down; ks test for 10 p's: .611526

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the CRAPS TEST. It plays 200,000 games of craps, finds::        
     :: the number of wins and the number of throws necessary to end  ::        
     :: each game.  The number of wins should be (very close to) a    ::        
     :: normal with mean 200000p and variance 200000p(1-p), with      ::        
     :: p=244/495.  Throws necessary to complete the game can vary    ::        
     :: from 1 to infinity, but counts for all>21 are lumped with 21. ::        
     :: A chi-square test is made on the no.-of-throws cell counts.   ::        
     :: Each 32-bit integer from the test file provides the value for ::        
     :: the throw of a die, by floating to [0,1), multiplying by 6    ::        
     :: and taking 1 plus the integer part of the result.             ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Results of craps test for bin            
  No. of wins:  Observed Expected
                               101364    98585.86
                 101364= No. of wins, z-score=12.425 pvalue=1.00000
   Analysis of Throws-per-Game:
 Chisq=1306.10 for 20 degrees of freedom, p=  .98836
               Throws Observed Expected  Chisq     Sum
                  1    59274    66666.7 819.774  819.774
                  2    40514    37654.3 217.179 1036.953
                  3    28841    26954.7 132.000 1168.953
                  4    20367    19313.5  57.470 1226.423
                  5    14395    13851.4  21.332 1247.755
                  6    10466     9943.5  27.451 1275.206
                  7     7478     7145.0  15.517 1290.724
                  8     5311     5139.1   5.752 1296.476
                  9     3705     3699.9    .007 1296.483
                 10     2745     2666.3   2.323 1298.806
                 11     1959     1923.3    .662 1299.467
                 12     1366     1388.7    .372 1299.840
                 13     1013     1003.7    .086 1299.926
                 14      693      726.1   1.513 1301.438
                 15      498      525.8   1.474 1302.912
                 16      375      381.2    .099 1303.011
                 17      272      276.5    .075 1303.085
                 18      213      200.8    .738 1303.823
                 19      133      146.0   1.155 1304.978
                 20      111      106.2    .216 1305.193
                 21      271      287.1    .905 1306.098
            SUMMARY  FOR bin            
                p-value for no. of wins:1.000000
                p-value for throws/game: .988358

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

 Results of DIEHARD battery of tests sent to file t.txt          
