       NOTE: Most of the tests in DIEHARD return a p-value, which               
       should be uniform on [0,1) if the input file contains truly              
       independent random bits.   Those p-values are obtained by                
       p=F(X), where F is the assumed distribution of the sample                
       random variable X---often normal. But that assumed F is just             
       an asymptotic approximation, for which the fit will be worst             
       in the tails. Thus you should not be surprised with                      
       occasional p-values near 0 or 1, such as .0012 or .9983.                 
       When a bit stream really FAILS BIG, you will get p's of 0 or             
       1 to six or more places.  By all means, do not, as a                     
       Statistician might, think that a p < .025 or p> .975 means               
       that the RNG has "failed the test at the .05 level".  Such               
       p's happen among the hundreds that DIEHARD produces, even                
       with good RNG's.  So keep in mind that " p happens".                     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            This is the BIRTHDAY SPACINGS TEST                 ::        
     :: Choose m birthdays in a year of n days.  List the spacings    ::        
     :: between the birthdays.  If j is the number of values that     ::        
     :: occur more than once in that list, then j is asymptotically   ::        
     :: Poisson distributed with mean m^3/(4n).  Experience shows n   ::        
     :: must be quite large, say n>=2^18, for comparing the results   ::        
     :: to the Poisson distribution with that mean.  This test uses   ::        
     :: n=2^24 and m=2^9,  so that the underlying distribution for j  ::        
     :: is taken to be Poisson with lambda=2^27/(2^26)=2.  A sample   ::        
     :: of 500 j's is taken, and a chi-square goodness of fit test    ::        
     :: provides a p value.  The first test uses bits 1-24 (counting  ::        
     :: from the left) from integers in the specified file.           ::        
     ::   Then the file is closed and reopened. Next, bits 2-25 are   ::        
     :: used to provide birthdays, then 3-26 and so on to bits 9-32.  ::        
     :: Each set of bits provides a p-value, and the nine p-values    ::        
     :: provide a sample for a KSTEST.                                ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 BIRTHDAY SPACINGS TEST, M= 512 N=2**24 LAMBDA=  2.0000
           Results for bin            
                   For a sample of size 500:     mean   
           bin             using bits  1 to 24   2.250
  duplicate       number       number 
  spacings       observed     expected
        0          52.       67.668
        1         109.      135.335
        2         147.      135.335
        3          97.       90.224
        4          57.       45.112
        5          28.       18.045
  6 to INF         10.        8.282
 Chisquare with  6 d.o.f. =    19.25 p-value=  .996236
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  2 to 25   2.158
  duplicate       number       number 
  spacings       observed     expected
        0          63.       67.668
        1         121.      135.335
        2         128.      135.335
        3          97.       90.224
        4          56.       45.112
        5          27.       18.045
  6 to INF          8.        8.282
 Chisquare with  6 d.o.f. =     9.83 p-value=  .867956
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  3 to 26   2.050
  duplicate       number       number 
  spacings       observed     expected
        0          59.       67.668
        1         136.      135.335
        2         139.      135.335
        3          89.       90.224
        4          55.       45.112
        5          14.       18.045
  6 to INF          8.        8.282
 Chisquare with  6 d.o.f. =     4.31 p-value=  .365600
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  4 to 27   2.030
  duplicate       number       number 
  spacings       observed     expected
        0          65.       67.668
        1         125.      135.335
        2         145.      135.335
        3          95.       90.224
        4          46.       45.112
        5          16.       18.045
  6 to INF          8.        8.282
 Chisquare with  6 d.o.f. =     2.10 p-value=  .089366
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  5 to 28   2.058
  duplicate       number       number 
  spacings       observed     expected
        0          71.       67.668
        1         130.      135.335
        2         130.      135.335
        3          80.       90.224
        4          54.       45.112
        5          27.       18.045
  6 to INF          8.        8.282
 Chisquare with  6 d.o.f. =     7.95 p-value=  .758093
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  6 to 29   2.108
  duplicate       number       number 
  spacings       observed     expected
        0          68.       67.668
        1         130.      135.335
        2         122.      135.335
        3          92.       90.224
        4          55.       45.112
        5          21.       18.045
  6 to INF         12.        8.282
 Chisquare with  6 d.o.f. =     5.88 p-value=  .563429
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  7 to 30   1.988
  duplicate       number       number 
  spacings       observed     expected
        0          65.       67.668
        1         137.      135.335
        2         137.      135.335
        3          93.       90.224
        4          42.       45.112
        5          20.       18.045
  6 to INF          6.        8.282
 Chisquare with  6 d.o.f. =     1.29 p-value=  .027618
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  8 to 31   1.948
  duplicate       number       number 
  spacings       observed     expected
        0          62.       67.668
        1         134.      135.335
        2         155.      135.335
        3          89.       90.224
        4          42.       45.112
        5          14.       18.045
  6 to INF          4.        8.282
 Chisquare with  6 d.o.f. =     6.70 p-value=  .650205
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bin             using bits  9 to 32   1.952
  duplicate       number       number 
  spacings       observed     expected
        0          68.       67.668
        1         134.      135.335
        2         136.      135.335
        3         107.       90.224
        4          36.       45.112
        5          13.       18.045
  6 to INF          6.        8.282
 Chisquare with  6 d.o.f. =     7.02 p-value=  .680720
  :::::::::::::::::::::::::::::::::::::::::
   The 9 p-values were
        .996236   .867956   .365600   .089366   .758093
        .563429   .027618   .650205   .680720
  A KSTEST for the 9 p-values yields  .401571

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            THE OVERLAPPING 5-PERMUTATION TEST                 ::        
     :: This is the OPERM5 test.  It looks at a sequence of one mill- ::        
     :: ion 32-bit random integers.  Each set of five consecutive     ::        
     :: integers can be in one of 120 states, for the 5! possible or- ::        
     :: derings of five numbers.  Thus the 5th, 6th, 7th,...numbers   ::        
     :: each provide a state. As many thousands of state transitions  ::        
     :: are observed,  cumulative counts are made of the number of    ::        
     :: occurences of each state.  Then the quadratic form in the     ::        
     :: weak inverse of the 120x120 covariance matrix yields a test   ::        
     :: equivalent to the likelihood ratio test that the 120 cell     ::        
     :: counts came from the specified (asymptotically) normal dis-   ::        
     :: tribution with the specified 120x120 covariance matrix (with  ::        
     :: rank 99).  This version uses 1,000,000 integers, twice.       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           OPERM5 test for file bin            
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom=102.857; p-value= .624754
           OPERM5 test for file bin            
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom= 62.608; p-value= .001628
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 31x31 matrices. The leftmost ::        
     :: 31 bits of 31 random integers from the test sequence are used ::        
     :: to form a 31x31 binary matrix over the field {0,1}. The rank  ::        
     :: is determined. That rank can be from 0 to 31, but ranks< 28   ::        
     :: are rare, and their counts are pooled with those for rank 28. ::        
     :: Ranks are found for 40,000 such random matrices and a chisqua-::        
     :: re test is performed on counts for ranks 31,30,29 and <=28.   ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for bin            
         Rank test for 31x31 binary matrices:
        rows from leftmost 31 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        28       199     211.4   .729394     .729
        29      5104    5134.0   .175421     .905
        30     23161   23103.0   .145373    1.050
        31     11536   11551.5   .020864    1.071
  chisquare= 1.071 for 3 d. of f.; p-value= .366288
--------------------------------------------------------------
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 32x32 matrices. A random 32x ::        
     :: 32 binary matrix is formed, each row a 32-bit random integer. ::        
     :: The rank is determined. That rank can be from 0 to 32, ranks  ::        
     :: less than 29 are rare, and their counts are pooled with those ::        
     :: for rank 29.  Ranks are found for 40,000 such random matrices ::        
     :: and a chisquare test is performed on counts for ranks  32,31, ::        
     :: 30 and <=29.                                                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for bin            
         Rank test for 32x32 binary matrices:
        rows from leftmost 32 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        29       206     211.4   .138848     .139
        30      5124    5134.0   .019518     .158
        31     23020   23103.0   .298523     .457
        32     11650   11551.5   .839494    1.296
  chisquare= 1.296 for 3 d. of f.; p-value= .397446
--------------------------------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 6x8 matrices.  From each of  ::        
     :: six random 32-bit integers from the generator under test, a   ::        
     :: specified byte is chosen, and the resulting six bytes form a  ::        
     :: 6x8 binary matrix whose rank is determined.  That rank can be ::        
     :: from 0 to 6, but ranks 0,1,2,3 are rare; their counts are     ::        
     :: pooled with those for rank 4. Ranks are found for 100,000     ::        
     :: random matrices, and a chi-square test is performed on        ::        
     :: counts for ranks 6,5 and <=4.                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
         Binary Rank Test for bin            
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  1 to  8
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          873       944.3       5.384       5.384
          r =5        20946     21743.9      29.279      34.663
          r =6        78181     77311.8       9.772      44.435
                        p=1-exp(-SUM/2)=1.00000
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  2 to  9
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          888       944.3       3.357       3.357
          r =5        21429     21743.9       4.560       7.917
          r =6        77683     77311.8       1.782       9.699
                        p=1-exp(-SUM/2)= .99217
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  3 to 10
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          976       944.3       1.064       1.064
          r =5        21857     21743.9        .588       1.652
          r =6        77167     77311.8        .271       1.924
                        p=1-exp(-SUM/2)= .61779
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  4 to 11
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          942       944.3        .006        .006
          r =5        21674     21743.9        .225        .230
          r =6        77384     77311.8        .067        .298
                        p=1-exp(-SUM/2)= .13832
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  5 to 12
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          903       944.3       1.806       1.806
          r =5        21770     21743.9        .031       1.838
          r =6        77327     77311.8        .003       1.841
                        p=1-exp(-SUM/2)= .60163
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  6 to 13
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          960       944.3        .261        .261
          r =5        21477     21743.9       3.276       3.537
          r =6        77563     77311.8        .816       4.353
                        p=1-exp(-SUM/2)= .88658
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  7 to 14
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          978       944.3       1.203       1.203
          r =5        21440     21743.9       4.247       5.450
          r =6        77582     77311.8        .944       6.394
                        p=1-exp(-SUM/2)= .95912
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  8 to 15
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          877       944.3       4.797       4.797
          r =5        21650     21743.9        .406       5.202
          r =6        77473     77311.8        .336       5.538
                        p=1-exp(-SUM/2)= .93728
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits  9 to 16
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          901       944.3       1.986       1.986
          r =5        21536     21743.9       1.988       3.973
          r =6        77563     77311.8        .816       4.790
                        p=1-exp(-SUM/2)= .90881
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 10 to 17
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          990       944.3       2.212       2.212
          r =5        21754     21743.9        .005       2.216
          r =6        77256     77311.8        .040       2.257
                        p=1-exp(-SUM/2)= .67641
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 11 to 18
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          893       944.3       2.787       2.787
          r =5        21769     21743.9        .029       2.816
          r =6        77338     77311.8        .009       2.825
                        p=1-exp(-SUM/2)= .75645
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 12 to 19
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          915       944.3        .909        .909
          r =5        21724     21743.9        .018        .927
          r =6        77361     77311.8        .031        .959
                        p=1-exp(-SUM/2)= .38082
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 13 to 20
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          912       944.3       1.105       1.105
          r =5        21689     21743.9        .139       1.244
          r =6        77399     77311.8        .098       1.342
                        p=1-exp(-SUM/2)= .48877
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 14 to 21
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          935       944.3        .092        .092
          r =5        21837     21743.9        .399        .490
          r =6        77228     77311.8        .091        .581
                        p=1-exp(-SUM/2)= .25214
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 15 to 22
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          978       944.3       1.203       1.203
          r =5        21701     21743.9        .085       1.287
          r =6        77321     77311.8        .001       1.288
                        p=1-exp(-SUM/2)= .47490
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 16 to 23
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          922       944.3        .527        .527
          r =5        21663     21743.9        .301        .828
          r =6        77415     77311.8        .138        .965
                        p=1-exp(-SUM/2)= .38289
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 17 to 24
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          942       944.3        .006        .006
          r =5        21779     21743.9        .057        .062
          r =6        77279     77311.8        .014        .076
                        p=1-exp(-SUM/2)= .03738
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 18 to 25
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          987       944.3       1.931       1.931
          r =5        21878     21743.9        .827       2.758
          r =6        77135     77311.8        .404       3.162
                        p=1-exp(-SUM/2)= .79424
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 19 to 26
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          974       944.3        .934        .934
          r =5        21777     21743.9        .050        .984
          r =6        77249     77311.8        .051       1.035
                        p=1-exp(-SUM/2)= .40412
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 20 to 27
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4         1035       944.3       8.711       8.711
          r =5        21895     21743.9       1.050       9.761
          r =6        77070     77311.8        .756      10.518
                        p=1-exp(-SUM/2)= .99480
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 21 to 28
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4         1002       944.3       3.526       3.526
          r =5        21957     21743.9       2.088       5.614
          r =6        77041     77311.8        .949       6.563
                        p=1-exp(-SUM/2)= .96242
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 22 to 29
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          994       944.3       2.616       2.616
          r =5        21794     21743.9        .115       2.731
          r =6        77212     77311.8        .129       2.860
                        p=1-exp(-SUM/2)= .76068
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 23 to 30
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          974       944.3        .934        .934
          r =5        21906     21743.9       1.208       2.142
          r =6        77120     77311.8        .476       2.618
                        p=1-exp(-SUM/2)= .72996
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 24 to 31
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          949       944.3        .023        .023
          r =5        21679     21743.9        .194        .217
          r =6        77372     77311.8        .047        .264
                        p=1-exp(-SUM/2)= .12364
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bin            
     b-rank test for bits 25 to 32
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          994       944.3       2.616       2.616
          r =5        21812     21743.9        .213       2.829
          r =6        77194     77311.8        .180       3.008
                        p=1-exp(-SUM/2)= .77781
   TEST SUMMARY, 25 tests on 100,000 random 6x8 matrices
 These should be 25 uniform [0,1] random variables:
    1.000000     .992170     .617791     .138317     .601625
     .886578     .959122     .937282     .908807     .676405
     .756455     .380821     .488770     .252140     .474897
     .382893     .037377     .794239     .404124     .994799
     .962420     .760682     .729955     .123642     .777809
   brank test summary for bin            
       The KS test for those 25 supposed UNI's yields
                    KS p-value= .998234

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::                   THE BITSTREAM TEST                          ::        
     :: The file under test is viewed as a stream of bits. Call them  ::        
     :: b1,b2,... .  Consider an alphabet with two "letters", 0 and 1 ::        
     :: and think of the stream of bits as a succession of 20-letter  ::        
     :: "words", overlapping.  Thus the first word is b1b2...b20, the ::        
     :: second is b2b3...b21, and so on.  The bitstream test counts   ::        
     :: the number of missing 20-letter (20-bit) words in a string of ::        
     :: 2^21 overlapping 20-letter words.  There are 2^20 possible 20 ::        
     :: letter words.  For a truly random string of 2^21+19 bits, the ::        
     :: number of missing words j should be (very close to) normally  ::        
     :: distributed with mean 141,909 and sigma 428.  Thus            ::        
     ::  (j-141909)/428 should be a standard normal variate (z score) ::        
     :: that leads to a uniform [0,1) p value.  The test is repeated  ::        
     :: twenty times.                                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 THE OVERLAPPING 20-tuples BITSTREAM  TEST, 20 BITS PER WORD, N words
   This test uses N=2^21 and samples the bitstream 20 times.
  No. missing words should average  141909. with sigma=428.
---------------------------------------------------------
 tst no  1:  143882 missing words,    4.61 sigmas from mean, p-value=1.00000
 tst no  2:  143117 missing words,    2.82 sigmas from mean, p-value= .99761
 tst no  3:  142562 missing words,    1.52 sigmas from mean, p-value= .93636
 tst no  4:  142551 missing words,    1.50 sigmas from mean, p-value= .93309
 tst no  5:  142705 missing words,    1.86 sigmas from mean, p-value= .96849
 tst no  6:  143343 missing words,    3.35 sigmas from mean, p-value= .99960
 tst no  7:  143175 missing words,    2.96 sigmas from mean, p-value= .99845
 tst no  8:  142779 missing words,    2.03 sigmas from mean, p-value= .97892
 tst no  9:  143331 missing words,    3.32 sigmas from mean, p-value= .99955
 tst no 10:  142295 missing words,     .90 sigmas from mean, p-value= .81623
 tst no 11:  143813 missing words,    4.45 sigmas from mean, p-value=1.00000
 tst no 12:  143538 missing words,    3.81 sigmas from mean, p-value= .99993
 tst no 13:  143485 missing words,    3.68 sigmas from mean, p-value= .99988
 tst no 14:  142890 missing words,    2.29 sigmas from mean, p-value= .98903
 tst no 15:  142443 missing words,    1.25 sigmas from mean, p-value= .89378
 tst no 16:  142615 missing words,    1.65 sigmas from mean, p-value= .95040
 tst no 17:  142953 missing words,    2.44 sigmas from mean, p-value= .99263
 tst no 18:  143474 missing words,    3.66 sigmas from mean, p-value= .99987
 tst no 19:  142906 missing words,    2.33 sigmas from mean, p-value= .99006
 tst no 20:  143004 missing words,    2.56 sigmas from mean, p-value= .99473

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The tests OPSO, OQSO and DNA                      ::        
     ::         OPSO means Overlapping-Pairs-Sparse-Occupancy         ::        
     :: The OPSO test considers 2-letter words from an alphabet of    ::        
     :: 1024 letters.  Each letter is determined by a specified ten   ::        
     :: bits from a 32-bit integer in the sequence to be tested. OPSO ::        
     :: generates  2^21 (overlapping) 2-letter words  (from 2^21+1    ::        
     :: "keystrokes")  and counts the number of missing words---that  ::        
     :: is 2-letter words which do not appear in the entire sequence. ::        
     :: That count should be very close to normally distributed with  ::        
     :: mean 141,909, sigma 290. Thus (missingwrds-141909)/290 should ::        
     :: be a standard normal variable. The OPSO test takes 32 bits at ::        
     :: a time from the test file and uses a designated set of ten    ::        
     :: consecutive bits. It then restarts the file for the next de-  ::        
     :: signated 10 bits, and so on.                                  ::        
     ::                                                               ::        
     ::     OQSO means Overlapping-Quadruples-Sparse-Occupancy        ::        
     ::   The test OQSO is similar, except that it considers 4-letter ::        
     :: words from an alphabet of 32 letters, each letter determined  ::        
     :: by a designated string of 5 consecutive bits from the test    ::        
     :: file, elements of which are assumed 32-bit random integers.   ::        
     :: The mean number of missing words in a sequence of 2^21 four-  ::        
     :: letter words,  (2^21+3 "keystrokes"), is again 141909, with   ::        
     :: sigma = 295.  The mean is based on theory; sigma comes from   ::        
     :: extensive simulation.                                         ::        
     ::                                                               ::        
     ::    The DNA test considers an alphabet of 4 letters::  C,G,A,T,::        
     :: determined by two designated bits in the sequence of random   ::        
     :: integers being tested.  It considers 10-letter words, so that ::        
     :: as in OPSO and OQSO, there are 2^20 possible words, and the   ::        
     :: mean number of missing words from a string of 2^21  (over-    ::        
     :: lapping)  10-letter  words (2^21+9 "keystrokes") is 141909.   ::        
     :: The standard deviation sigma=339 was determined as for OQSO   ::        
     :: by simulation.  (Sigma for OPSO, 290, is the true value (to   ::        
     :: three places), not determined by simulation.                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 OPSO test for generator bin            
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OPSO for bin             using bits 23 to 32        149390 25.795 1.0000
    OPSO for bin             using bits 22 to 31        148746 23.575 1.0000
    OPSO for bin             using bits 21 to 30        148950 24.278 1.0000
    OPSO for bin             using bits 20 to 29        148907 24.130 1.0000
    OPSO for bin             using bits 19 to 28        148911 24.144 1.0000
    OPSO for bin             using bits 18 to 27        149147 24.957 1.0000
    OPSO for bin             using bits 17 to 26        148887 24.061 1.0000
    OPSO for bin             using bits 16 to 25        149291 25.454 1.0000
    OPSO for bin             using bits 15 to 24        148937 24.233 1.0000
    OPSO for bin             using bits 14 to 23        148687 23.371 1.0000
    OPSO for bin             using bits 13 to 22        148712 23.457 1.0000
    OPSO for bin             using bits 12 to 21        149147 24.957 1.0000
    OPSO for bin             using bits 11 to 20        149214 25.189 1.0000
    OPSO for bin             using bits 10 to 19        149368 25.720 1.0000
    OPSO for bin             using bits  9 to 18        148835 23.882 1.0000
    OPSO for bin             using bits  8 to 17        149430 25.933 1.0000
    OPSO for bin             using bits  7 to 16        149411 25.868 1.0000
    OPSO for bin             using bits  6 to 15        149248 25.306 1.0000
    OPSO for bin             using bits  5 to 14        148884 24.051 1.0000
    OPSO for bin             using bits  4 to 13        149638 26.651 1.0000
    OPSO for bin             using bits  3 to 12        150225 28.675 1.0000
    OPSO for bin             using bits  2 to 11        168830 92.830 1.0000
    OPSO for bin             using bits  1 to 10        221823275.564 1.0000
 OQSO test for generator bin            
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OQSO for bin             using bits 28 to 32        143151  4.209 1.0000
    OQSO for bin             using bits 27 to 31        142849  3.185  .9993
    OQSO for bin             using bits 26 to 30        142957  3.551  .9998
    OQSO for bin             using bits 25 to 29        143312  4.755 1.0000
    OQSO for bin             using bits 24 to 28        143340  4.850 1.0000
    OQSO for bin             using bits 23 to 27        142622  2.416  .9922
    OQSO for bin             using bits 22 to 26        143231  4.480 1.0000
    OQSO for bin             using bits 21 to 25        143272  4.619 1.0000
    OQSO for bin             using bits 20 to 24        143265  4.595 1.0000
    OQSO for bin             using bits 19 to 23        143078  3.962 1.0000
    OQSO for bin             using bits 18 to 22        143057  3.890  .9999
    OQSO for bin             using bits 17 to 21        142715  2.731  .9968
    OQSO for bin             using bits 16 to 20        142622  2.416  .9922
    OQSO for bin             using bits 15 to 19        143433  5.165 1.0000
    OQSO for bin             using bits 14 to 18        142572  2.246  .9877
    OQSO for bin             using bits 13 to 17        143075  3.951 1.0000
    OQSO for bin             using bits 12 to 16        142910  3.392  .9997
    OQSO for bin             using bits 11 to 15        143178  4.301 1.0000
    OQSO for bin             using bits 10 to 14        143153  4.216 1.0000
    OQSO for bin             using bits  9 to 13        143081  3.972 1.0000
    OQSO for bin             using bits  8 to 12        143273  4.623 1.0000
    OQSO for bin             using bits  7 to 11        143682  6.009 1.0000
    OQSO for bin             using bits  6 to 10        143148  4.199 1.0000
    OQSO for bin             using bits  5 to  9        143889  6.711 1.0000
    OQSO for bin             using bits  4 to  8        143884  6.694 1.0000
    OQSO for bin             using bits  3 to  7        145164 11.033 1.0000
    OQSO for bin             using bits  2 to  6        180975132.426 1.0000
    OQSO for bin             using bits  1 to  5        272459442.541 1.0000
  DNA test for generator bin            
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
     DNA for bin             using bits 31 to 32        141865  -.131  .4480
     DNA for bin             using bits 30 to 31        141769  -.414  .3395
     DNA for bin             using bits 29 to 30        141939   .088  .5349
     DNA for bin             using bits 28 to 29        141679  -.679  .2484
     DNA for bin             using bits 27 to 28        141606  -.895  .1855
     DNA for bin             using bits 26 to 27        142038   .380  .6479
     DNA for bin             using bits 25 to 26        141800  -.323  .3735
     DNA for bin             using bits 24 to 25        142151   .713  .7620
     DNA for bin             using bits 23 to 24        141281 -1.853  .0319
     DNA for bin             using bits 22 to 23        141916   .020  .5079
     DNA for bin             using bits 21 to 22        142331  1.244  .8932
     DNA for bin             using bits 20 to 21        142025   .341  .6335
     DNA for bin             using bits 19 to 20        142248   .999  .8411
     DNA for bin             using bits 18 to 19        141956   .138  .5548
     DNA for bin             using bits 17 to 18        141865  -.131  .4480
     DNA for bin             using bits 16 to 17        141547 -1.069  .1426
     DNA for bin             using bits 15 to 16        142084   .515  .6968
     DNA for bin             using bits 14 to 15        141387 -1.541  .0617
     DNA for bin             using bits 13 to 14        141997   .259  .6020
     DNA for bin             using bits 12 to 13        141585  -.957  .1694
     DNA for bin             using bits 11 to 12        142622  2.102  .9822
     DNA for bin             using bits 10 to 11        141810  -.293  .3848
     DNA for bin             using bits  9 to 10        142049   .412  .6598
     DNA for bin             using bits  8 to  9        141148 -2.246  .0124
     DNA for bin             using bits  7 to  8        141732  -.523  .3005
     DNA for bin             using bits  6 to  7        142138   .675  .7500
     DNA for bin             using bits  5 to  6        143420  4.456 1.0000
     DNA for bin             using bits  4 to  5        142576  1.967  .9754
     DNA for bin             using bits  3 to  4        142990  3.188  .9993
     DNA for bin             using bits  2 to  3        219899230.058 1.0000
     DNA for bin             using bits  1 to  2        386164720.515 1.0000

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST on a stream of bytes.      ::        
     :: Consider the file under test as a stream of bytes (four per   ::        
     :: 32 bit integer).  Each byte can contain from 0 to 8 1's,      ::        
     :: with probabilities 1,8,28,56,70,56,28,8,1 over 256.  Now let  ::        
     :: the stream of bytes provide a string of overlapping  5-letter ::        
     :: words, each "letter" taking values A,B,C,D,E. The letters are ::        
     :: determined by the number of 1's in a byte::  0,1,or 2 yield A,::        
     :: 3 yields B, 4 yields C, 5 yields D and 6,7 or 8 yield E. Thus ::        
     :: we have a monkey at a typewriter hitting five keys with vari- ::        
     :: ous probabilities (37,56,70,56,37 over 256).  There are 5^5   ::        
     :: possible 5-letter words, and from a string of 256,000 (over-  ::        
     :: lapping) 5-letter words, counts are made on the frequencies   ::        
     :: for each word.   The quadratic form in the weak inverse of    ::        
     :: the covariance matrix of the cell counts provides a chisquare ::        
     :: test::  Q5-Q4, the difference of the naive Pearson sums of    ::        
     :: (OBS-EXP)^2/EXP on counts for 5- and 4-letter cell counts.    ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
   Test results for bin            
 Chi-square with 5^5-5^4=2500 d.of f. for sample size:2560000
                               chisquare  equiv normal  p-value
  Results fo COUNT-THE-1's in successive bytes:
 byte stream for bin              6237.80     52.860     1.000000
 byte stream for bin              5609.62     43.977     1.000000

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST for specific bytes.        ::        
     :: Consider the file under test as a stream of 32-bit integers.  ::        
     :: From each integer, a specific byte is chosen , say the left-  ::        
     :: most::  bits 1 to 8. Each byte can contain from 0 to 8 1's,   ::        
     :: with probabilitie 1,8,28,56,70,56,28,8,1 over 256.  Now let   ::        
     :: the specified bytes from successive integers provide a string ::        
     :: of (overlapping) 5-letter words, each "letter" taking values  ::        
     :: A,B,C,D,E. The letters are determined  by the number of 1's,  ::        
     :: in that byte::  0,1,or 2 ---> A, 3 ---> B, 4 ---> C, 5 ---> D,::        
     :: and  6,7 or 8 ---> E.  Thus we have a monkey at a typewriter  ::        
     :: hitting five keys with with various probabilities::  37,56,70,::        
     :: 56,37 over 256. There are 5^5 possible 5-letter words, and    ::        
     :: from a string of 256,000 (overlapping) 5-letter words, counts ::        
     :: are made on the frequencies for each word. The quadratic form ::        
     :: in the weak inverse of the covariance matrix of the cell      ::        
     :: counts provides a chisquare test::  Q5-Q4, the difference of  ::        
     :: the naive Pearson  sums of (OBS-EXP)^2/EXP on counts for 5-   ::        
     :: and 4-letter cell counts.                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 Chi-square with 5^5-5^4=2500 d.of f. for sample size: 256000
                      chisquare  equiv normal  p value
  Results for COUNT-THE-1's in specified bytes:
           bits  1 to  8  8332.87     82.489     1.000000
           bits  2 to  9  4336.10     25.966     1.000000
           bits  3 to 10  2751.65      3.559      .999814
           bits  4 to 11  2802.04      4.271      .999990
           bits  5 to 12  2644.62      2.045      .979583
           bits  6 to 13  2731.16      3.269      .999460
           bits  7 to 14  2789.96      4.101      .999979
           bits  8 to 15  2612.98      1.598      .944948
           bits  9 to 16  2500.64       .009      .503599
           bits 10 to 17  2651.09      2.137      .983691
           bits 11 to 18  2709.85      2.968      .998500
           bits 12 to 19  2631.13      1.855      .968168
           bits 13 to 20  2728.25      3.228      .999377
           bits 14 to 21  2557.58       .814      .792269
           bits 15 to 22  2622.75      1.736      .958710
           bits 16 to 23  2618.15      1.671      .952622
           bits 17 to 24  2633.66      1.890      .970634
           bits 18 to 25  2604.10      1.472      .929510
           bits 19 to 26  2551.22       .724      .765575
           bits 20 to 27  2456.60      -.614      .269681
           bits 21 to 28  2779.20      3.948      .999961
           bits 22 to 29  2625.27      1.772      .961770
           bits 23 to 30  2676.56      2.497      .993737
           bits 24 to 31  2612.03      1.584      .943437
           bits 25 to 32  2695.81      2.769      .997190

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THIS IS A PARKING LOT TEST                      ::        
     :: In a square of side 100, randomly "park" a car---a circle of  ::        
     :: radius 1.   Then try to park a 2nd, a 3rd, and so on, each    ::        
     :: time parking "by ear".  That is, if an attempt to park a car  ::        
     :: causes a crash with one already parked, try again at a new    ::        
     :: random location. (To avoid path problems, consider parking    ::        
     :: helicopters rather than cars.)   Each attempt leads to either ::        
     :: a crash or a success, the latter followed by an increment to  ::        
     :: the list of cars already parked. If we plot n:  the number of ::        
     :: attempts, versus k::  the number successfully parked, we get a::        
     :: curve that should be similar to those provided by a perfect   ::        
     :: random number generator.  Theory for the behavior of such a   ::        
     :: random curve seems beyond reach, and as graphics displays are ::        
     :: not available for this battery of tests, a simple characteriz ::        
     :: ation of the random experiment is used: k, the number of cars ::        
     :: successfully parked after n=12,000 attempts. Simulation shows ::        
     :: that k should average 3523 with sigma 21.9 and is very close  ::        
     :: to normally distributed.  Thus (k-3523)/21.9 should be a st-  ::        
     :: andard normal variable, which, converted to a uniform varia-  ::        
     :: ble, provides input to a KSTEST based on a sample of 10.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           CDPARK: result of ten tests on file bin            
            Of 12,000 tries, the average no. of successes
                 should be 3523 with sigma=21.9
            Successes: 3298    z-score:-10.274 p-value: .000000
            Successes: 3349    z-score: -7.945 p-value: .000000
            Successes: 3303    z-score:-10.046 p-value: .000000
            Successes: 3328    z-score: -8.904 p-value: .000000
            Successes: 3296    z-score:-10.365 p-value: .000000
            Successes: 3340    z-score: -8.356 p-value: .000000
            Successes: 3351    z-score: -7.854 p-value: .000000
            Successes: 3307    z-score: -9.863 p-value: .000000
            Successes: 3281    z-score:-11.050 p-value: .000000
            Successes: 3302    z-score:-10.091 p-value: .000000
 
           square size   avg. no.  parked   sample sigma
             100.            3315.500       23.301
            KSTEST for the above 10: p= 1.000000

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THE MINIMUM DISTANCE TEST                       ::        
     :: It does this 100 times::   choose n=8000 random points in a   ::        
     :: square of side 10000.  Find d, the minimum distance between   ::        
     :: the (n^2-n)/2 pairs of points.  If the points are truly inde- ::        
     :: pendent uniform, then d^2, the square of the minimum distance ::        
     :: should be (very close to) exponentially distributed with mean ::        
     :: .995 .  Thus 1-exp(-d^2/.995) should be uniform on [0,1) and  ::        
     :: a KSTEST on the resulting 100 values serves as a test of uni- ::        
     :: formity for random points in the square. Test numbers=0 mod 5 ::        
     :: are printed but the KSTEST is based on the full set of 100    ::        
     :: random choices of 8000 points in the 10000x10000 square.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               This is the MINIMUM DISTANCE test
              for random integers in the file bin            
     Sample no.    d^2     avg     equiv uni            
           5     .2514   1.8378     .223278
          10     .3992   1.1593     .330493
          15     .7734   1.3034     .540332
          20     .8197   1.5340     .561255
          25     .3328   1.3805     .284303
          30     .6254   1.2637     .466627
          35     .8605   1.1644     .578854
          40     .1257   1.0944     .118635
          45     .6788   1.0009     .494486
          50    1.1932    .9489     .698549
          55    1.7510    .9404     .827923
          60     .4181    .9332     .343093
          65     .5945    .8922     .449794
          70     .4623    .8507     .371608
          75     .0277    .8445     .027450
          80     .3531    .8702     .298714
          85     .7666    .8704     .537204
          90    1.9535    .8652     .859613
          95    3.7671    .8868     .977314
         100    1.4340    .8782     .763356
     MINIMUM DISTANCE TEST for bin            
          Result of KS test on 20 transformed mindist^2's:
                                  p-value= .933592

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ 

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::              THE 3DSPHERES TEST                               ::        
     :: Choose  4000 random points in a cube of edge 1000.  At each   ::        
     :: point, center a sphere large enough to reach the next closest ::        
     :: point. Then the volume of the smallest such sphere is (very   ::        
     :: close to) exponentially distributed with mean 120pi/3.  Thus  ::        
     :: the radius cubed is exponential with mean 30. (The mean is    ::        
     :: obtained by extensive simulation).  The 3DSPHERES test gener- ::        
     :: ates 4000 such spheres 20 times.  Each min radius cubed leads ::        
     :: to a uniform variable by means of 1-exp(-r^3/30.), then a     ::        
     ::  KSTEST is done on the 20 p-values.                           ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               The 3DSPHERES test for file bin            
 sample no:  1     r^3=  25.233     p-value= .56877
 sample no:  2     r^3=   5.325     p-value= .16264
 sample no:  3     r^3=   9.924     p-value= .28165
 sample no:  4     r^3=   5.807     p-value= .17599
 sample no:  5     r^3=  13.808     p-value= .36889
 sample no:  6     r^3=   5.004     p-value= .15364
 sample no:  7     r^3=  52.446     p-value= .82591
 sample no:  8     r^3=  34.127     p-value= .67940
 sample no:  9     r^3=  54.356     p-value= .83665
 sample no: 10     r^3=   3.495     p-value= .10996
 sample no: 11     r^3=  15.275     p-value= .39901
 sample no: 12     r^3=   2.069     p-value= .06666
 sample no: 13     r^3=   6.762     p-value= .20182
 sample no: 14     r^3=  38.195     p-value= .72006
 sample no: 15     r^3=   8.726     p-value= .25239
 sample no: 16     r^3=   7.687     p-value= .22605
 sample no: 17     r^3=  19.165     p-value= .47209
 sample no: 18     r^3=  34.963     p-value= .68822
 sample no: 19     r^3=   6.595     p-value= .19735
 sample no: 20     r^3=   9.442     p-value= .27002
  A KS test is applied to those 20 p-values.
---------------------------------------------------------
       3DSPHERES test for file bin                  p-value= .925136
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::      This is the SQEEZE test                                  ::        
     ::  Random integers are floated to get uniforms on [0,1). Start- ::        
     ::  ing with k=2^31=2147483647, the test finds j, the number of  ::        
     ::  iterations necessary to reduce k to 1, using the reduction   ::        
     ::  k=ceiling(k*U), with U provided by floating integers from    ::        
     ::  the file being tested.  Such j's are found 100,000 times,    ::        
     ::  then counts for the number of times j was <=6,7,...,47,>=48  ::        
     ::  are used to provide a chi-square test for cell frequencies.  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
            RESULTS OF SQUEEZE TEST FOR bin            
         Table of standardized frequency counts
     ( (obs-exp)/sqrt(exp) )^2
        for j taking values <=6,7,8,...,47,>=48:
     2.0     3.8     3.7     5.2    12.3    16.3
    24.1    30.1    34.1    37.7    37.0    39.8
    33.8    28.6    21.5    14.0     2.5    -7.4
   -12.8   -20.6   -24.7   -27.6   -29.6   -29.5
   -28.3   -26.5   -23.6   -23.0   -19.2   -17.7
   -14.6   -12.0    -9.6    -7.4    -6.6    -3.4
    -3.5    -2.9    -2.0    -1.8    -1.3    -1.0
    -1.1
           Chi-square with 42 degrees of freedom:*******
              z-score=*******  p-value=1.000000
______________________________________________________________

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The  OVERLAPPING SUMS test                        ::        
     :: Integers are floated to get a sequence U(1),U(2),... of uni-  ::        
     :: form [0,1) variables.  Then overlapping sums,                 ::        
     ::   S(1)=U(1)+...+U(100), S2=U(2)+...+U(101),... are formed.    ::        
     :: The S's are virtually normal with a certain covariance mat-   ::        
     :: rix.  A linear transformation of the S's converts them to a   ::        
     :: sequence of independent standard normals, which are converted ::        
     :: to uniform variables for a KSTEST. The  p-values from ten     ::        
     :: KSTESTs are given still another KSTEST.                       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Test no.  1      p-value 1.000000
                Test no.  2      p-value  .999854
                Test no.  3      p-value 1.000000
                Test no.  4      p-value 1.000000
                Test no.  5      p-value  .999990
                Test no.  6      p-value 1.000000
                Test no.  7      p-value 1.000000
                Test no.  8      p-value 1.000000
                Test no.  9      p-value  .999978
                Test no. 10      p-value 1.000000
   Results of the OSUM test for bin            
        KSTEST on the above 10 p-values: 1.000000

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the RUNS test.  It counts runs up, and runs down, ::        
     :: in a sequence of uniform [0,1) variables, obtained by float-  ::        
     :: ing the 32-bit integers in the specified file. This example   ::        
     :: shows how runs are counted:  .123,.357,.789,.425,.224,.416,.95::        
     :: contains an up-run of length 3, a down-run of length 2 and an ::        
     :: up-run of (at least) 2, depending on the next values.  The    ::        
     :: covariance matrices for the runs-up and runs-down are well    ::        
     :: known, leading to chisquare tests for quadratic forms in the  ::        
     :: weak inverses of the covariance matrices.  Runs are counted   ::        
     :: for sequences of length 10,000.  This is done ten times. Then ::        
     :: repeated.                                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           The RUNS test for file bin            
     Up and down runs in a sample of 10000
_________________________________________________ 
                 Run test for bin            :
       runs up; ks test for 10 p's: .965170
     runs down; ks test for 10 p's: .098403
                 Run test for bin            :
       runs up; ks test for 10 p's: .128696
     runs down; ks test for 10 p's: .309535

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the CRAPS TEST. It plays 200,000 games of craps, finds::        
     :: the number of wins and the number of throws necessary to end  ::        
     :: each game.  The number of wins should be (very close to) a    ::        
     :: normal with mean 200000p and variance 200000p(1-p), with      ::        
     :: p=244/495.  Throws necessary to complete the game can vary    ::        
     :: from 1 to infinity, but counts for all>21 are lumped with 21. ::        
     :: A chi-square test is made on the no.-of-throws cell counts.   ::        
     :: Each 32-bit integer from the test file provides the value for ::        
     :: the throw of a die, by floating to [0,1), multiplying by 6    ::        
     :: and taking 1 plus the integer part of the result.             ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Results of craps test for bin            
  No. of wins:  Observed Expected
                                94725    98585.86
                  94725= No. of wins, z-score=****** pvalue= .00000
   Analysis of Throws-per-Game:
 Chisq=1705.79 for 20 degrees of freedom, p=  .87171
               Throws Observed Expected  Chisq     Sum
                  1    74790    66666.7 989.827  989.827
                  2    34211    37654.3 314.877 1304.704
                  3    24819    26954.7 169.222 1473.926
                  4    18142    19313.5  71.055 1544.981
                  5    12981    13851.4  54.697 1599.678
                  6     9341     9943.5  36.512 1636.190
                  7     6909     7145.0   7.797 1643.987
                  8     5138     5139.1    .000 1643.987
                  9     3604     3699.9   2.484 1646.471
                 10     2658     2666.3    .026 1646.497
                 11     1947     1923.3    .291 1646.788
                 12     1476     1388.7   5.483 1652.271
                 13     1061     1003.7   3.269 1655.541
                 14      778      726.1   3.704 1659.244
                 15      552      525.8   1.302 1660.546
                 16      406      381.2   1.620 1662.166
                 17      317      276.5   5.920 1668.086
                 18      215      200.8   1.000 1669.086
                 19      146      146.0    .000 1669.086
                 20      123      106.2   2.652 1671.739
                 21      386      287.1  34.056 1705.795
            SUMMARY  FOR bin            
                p-value for no. of wins: .000000
                p-value for throws/game: .871712

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

 Results of DIEHARD battery of tests sent to file t.txt          
